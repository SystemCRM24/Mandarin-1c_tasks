"use strict";(self.webpackChunk_melfore_konva_timeline=self.webpackChunk_melfore_konva_timeline||[]).push([[562],{"./src/tasks/components/Layer/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_konva__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-konva/es/ReactKonva.js"),luxon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/luxon/src/luxon.js"),_timeline_TimelineContext__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/timeline/TimelineContext.tsx"),_utils_tasks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/tasks/utils/tasks.ts"),_Task__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/tasks/components/Task/index.tsx"),_Tooltip__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/tasks/components/Tooltip/index.tsx");function cov_1nacfvm119(){var path="/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/Layer/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/Layer/index.tsx",statementMap:{0:{start:{line:16,column:19},end:{line:111,column:1}},1:{start:{line:34,column:6},end:{line:34,column:26}},2:{start:{line:35,column:26},end:{line:37,column:40}},3:{start:{line:35,column:52},end:{line:37,column:26}},4:{start:{line:37,column:8},end:{line:37,column:25}},5:{start:{line:38,column:22},end:{line:40,column:32}},6:{start:{line:38,column:44},end:{line:40,column:22}},7:{start:{line:40,column:8},end:{line:40,column:21}},8:{start:{line:41,column:22},end:{line:41,column:79}},9:{start:{line:41,column:40},end:{line:41,column:60}},10:{start:{line:42,column:21},end:{line:56,column:35}},11:{start:{line:43,column:17},end:{line:43,column:36}},12:{start:{line:44,column:4},end:{line:46,column:5}},13:{start:{line:45,column:6},end:{line:45,column:34}},14:{start:{line:50,column:8},end:{line:50,column:13}},15:{start:{line:51,column:4},end:{line:55,column:7}},16:{start:{line:57,column:25},end:{line:57,column:132}},17:{start:{line:57,column:47},end:{line:57,column:92}},18:{start:{line:58,column:29},end:{line:62,column:54}},19:{start:{line:59,column:22},end:{line:59,column:52}},20:{start:{line:60,column:30},end:{line:60,column:79}},21:{start:{line:61,column:4},end:{line:61,column:45}},22:{start:{line:63,column:23},end:{line:71,column:39}},23:{start:{line:67,column:22},end:{line:67,column:48}},24:{start:{line:68,column:20},end:{line:68,column:44}},25:{start:{line:69,column:30},end:{line:69,column:73}},26:{start:{line:70,column:4},end:{line:70,column:45}},27:{start:{line:72,column:2},end:{line:74,column:3}},28:{start:{line:73,column:4},end:{line:73,column:16}},29:{start:{line:75,column:2},end:{line:77,column:3}},30:{start:{line:76,column:4},end:{line:76,column:16}},31:{start:{line:78,column:2},end:{line:110,column:92}},32:{start:{line:82,column:8},end:{line:82,column:16}},33:{start:{line:83,column:26},end:{line:83,column:53}},34:{start:{line:84,column:4},end:{line:86,column:5}},35:{start:{line:85,column:6},end:{line:85,column:18}},36:{start:{line:90,column:8},end:{line:90,column:32}},37:{start:{line:91,column:24},end:{line:91,column:54}},38:{start:{line:92,column:24},end:{line:92,column:68}},39:{start:{line:93,column:18},end:{line:93,column:36}},40:{start:{line:94,column:4},end:{line:96,column:5}},41:{start:{line:95,column:6},end:{line:95,column:18}},42:{start:{line:97,column:4},end:{line:109,column:7}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:16,column:19},end:{line:16,column:20}},loc:{start:{line:21,column:6},end:{line:111,column:1}},line:21},1:{name:"(anonymous_1)",decl:{start:{line:35,column:38},end:{line:35,column:39}},loc:{start:{line:35,column:52},end:{line:37,column:26}},line:35},2:{name:"(anonymous_2)",decl:{start:{line:35,column:72},end:{line:35,column:73}},loc:{start:{line:37,column:8},end:{line:37,column:25}},line:37},3:{name:"(anonymous_3)",decl:{start:{line:38,column:34},end:{line:38,column:35}},loc:{start:{line:38,column:44},end:{line:40,column:22}},line:38},4:{name:"(anonymous_4)",decl:{start:{line:38,column:55},end:{line:38,column:56}},loc:{start:{line:40,column:8},end:{line:40,column:21}},line:40},5:{name:"(anonymous_5)",decl:{start:{line:41,column:34},end:{line:41,column:35}},loc:{start:{line:41,column:40},end:{line:41,column:60}},line:41},6:{name:"(anonymous_6)",decl:{start:{line:42,column:33},end:{line:42,column:34}},loc:{start:{line:42,column:52},end:{line:56,column:3}},line:42},7:{name:"(anonymous_7)",decl:{start:{line:57,column:37},end:{line:57,column:38}},loc:{start:{line:57,column:47},end:{line:57,column:92}},line:57},8:{name:"(anonymous_8)",decl:{start:{line:58,column:41},end:{line:58,column:42}},loc:{start:{line:58,column:54},end:{line:62,column:3}},line:58},9:{name:"(anonymous_9)",decl:{start:{line:63,column:35},end:{line:63,column:36}},loc:{start:{line:66,column:8},end:{line:71,column:3}},line:66},10:{name:"(anonymous_10)",decl:{start:{line:78,column:65},end:{line:78,column:66}},loc:{start:{line:78,column:77},end:{line:110,column:3}},line:78}},branchMap:{0:{loc:{start:{line:44,column:4},end:{line:46,column:5}},type:"if",locations:[{start:{line:44,column:4},end:{line:46,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:44},1:{loc:{start:{line:72,column:2},end:{line:74,column:3}},type:"if",locations:[{start:{line:72,column:2},end:{line:74,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:72},2:{loc:{start:{line:72,column:6},end:{line:72,column:36}},type:"binary-expr",locations:[{start:{line:72,column:6},end:{line:72,column:20}},{start:{line:72,column:24},end:{line:72,column:36}}],line:72},3:{loc:{start:{line:75,column:2},end:{line:77,column:3}},type:"if",locations:[{start:{line:75,column:2},end:{line:77,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:75},4:{loc:{start:{line:84,column:4},end:{line:86,column:5}},type:"if",locations:[{start:{line:84,column:4},end:{line:86,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:84},5:{loc:{start:{line:94,column:4},end:{line:96,column:5}},type:"if",locations:[{start:{line:94,column:4},end:{line:96,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:94},6:{loc:{start:{line:94,column:8},end:{line:94,column:76}},type:"binary-expr",locations:[{start:{line:94,column:8},end:{line:94,column:35}},{start:{line:94,column:39},end:{line:94,column:76}}],line:94},7:{loc:{start:{line:110,column:6},end:{line:110,column:90}},type:"binary-expr",locations:[{start:{line:110,column:6},end:{line:110,column:13}},{start:{line:110,column:17},end:{line:110,column:28}},{start:{line:110,column:45},end:{line:110,column:90}}],line:110}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0,0]},inputSourceMap:{version:3,names:["React","useCallback","Layer","DateTime","useTimelineContext","getTaskYCoordinate","Task","TaskTooltip","TasksLayer","setTaskTooltip","taskTooltip","create","onTaskEvent","columnWidth","drawRange","interval","start","intervalStart","end","intervalEnd","resolution","resources","rowHeight","tasks","toolTip","getResourceById","resourceId","findIndex","id","getTaskById","taskId","find","onTaskLeave","onTaskOver","point","task","x","y","getXCoordinate","offset","sizeInUnits","getTaskXCoordinate","startTime","timeStart","fromMillis","startOffsetInUnit","diff","as","unit","getTaskWidth","timeEnd","widthOffsetInUnit","createElement","map","taskData","time","resourceIndex","color","resourceColor","toCompleteColor","xCoordinate","yCoordinate","width","key","data","fill","fillToComplete","onLeave","onOver","disabled"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/Layer/index.tsx"],sourcesContent:['import React, { FC, useCallback } from "react";\nimport { Layer } from "react-konva";\nimport { DateTime } from "luxon";\n\nimport { useTimelineContext } from "../../../timeline/TimelineContext";\nimport { KonvaPoint } from "../../../utils/konva";\nimport { InternalTimeRange } from "../../../utils/time";\nimport { getTaskYCoordinate } from "../../utils/tasks";\nimport Task from "../Task";\nimport TaskTooltip, { TaskTooltipProps } from "../Tooltip";\n\nexport interface TasksLayerProps {\n  taskTooltip: TaskTooltipProps | null;\n  setTaskTooltip: (tooltip: TaskTooltipProps | null) => void;\n  create?: boolean;\n  onTaskEvent: (value: boolean) => void;\n}\n\n/**\n * This component renders a set of tasks as a Konva Layer.\n * Tasks are displayed accordingly to their assigned resource (different vertical / row position) and their timing (different horizontal / column position)\n * `TasksLayer` is also responsible of handling callback for task components offering base implementation for click, leave and over.\n *\n * The playground has a canvas that simulates 1 day of data with 1 hour resolution.\n * Depending on your screen size you might be able to test also the horizontal scrolling behaviour.\n */\nconst TasksLayer: FC<TasksLayerProps> = ({ setTaskTooltip, taskTooltip, create, onTaskEvent }) => {\n  const {\n    columnWidth,\n    drawRange,\n    interval: { start: intervalStart, end: intervalEnd },\n    resolution,\n    resources,\n    rowHeight,\n    tasks,\n    toolTip,\n  } = useTimelineContext();\n\n  const getResourceById = useCallback(\n    (resourceId: string) => resources.findIndex(({ id }) => resourceId === id),\n    [resources]\n  );\n\n  const getTaskById = useCallback((taskId: string) => tasks.find(({ id }) => taskId === id), [tasks]);\n\n  const onTaskLeave = useCallback(() => setTaskTooltip(null), [setTaskTooltip]);\n\n  const onTaskOver = useCallback(\n    (taskId: string, point: KonvaPoint) => {\n      const task = getTaskById(taskId);\n      if (!task) {\n        return setTaskTooltip(null);\n      }\n\n      const { x, y } = point;\n      setTaskTooltip({ task, x, y });\n    },\n    [getTaskById, setTaskTooltip]\n  );\n\n  const getXCoordinate = useCallback(\n    (offset: number) => (offset * columnWidth) / resolution.sizeInUnits,\n    [columnWidth, resolution.sizeInUnits]\n  );\n\n  const getTaskXCoordinate = useCallback(\n    (startTime: number) => {\n      const timeStart = DateTime.fromMillis(startTime);\n      const startOffsetInUnit = timeStart.diff(intervalStart!).as(resolution.unit);\n      return getXCoordinate(startOffsetInUnit);\n    },\n    [getXCoordinate, intervalStart, resolution.unit]\n  );\n\n  const getTaskWidth = useCallback(\n    ({ start, end }: InternalTimeRange) => {\n      const timeStart = DateTime.fromMillis(start);\n      const timeEnd = DateTime.fromMillis(end);\n      const widthOffsetInUnit = timeEnd.diff(timeStart).as(resolution.unit);\n      return getXCoordinate(widthOffsetInUnit);\n    },\n    [getXCoordinate, resolution.unit]\n  );\n\n  if (!intervalStart || !intervalEnd) {\n    return null;\n  }\n\n  if (drawRange.end - drawRange.start <= 0) {\n    return null;\n  }\n\n  return (\n    <Layer>\n      {tasks.map((taskData) => {\n        const { resourceId, time } = taskData;\n        const resourceIndex = getResourceById(resourceId);\n        if (resourceIndex < 0) {\n          return null;\n        }\n\n        const { color: resourceColor, toCompleteColor } = resources[resourceIndex];\n        const xCoordinate = getTaskXCoordinate(time.start);\n        const yCoordinate = getTaskYCoordinate(resourceIndex, rowHeight);\n        const width = getTaskWidth(time);\n        if (xCoordinate > drawRange.end || xCoordinate + width < drawRange.start) {\n          return null;\n        }\n\n        return (\n          <Task\n            key={`task-${taskData.id}`}\n            data={taskData}\n            fill={resourceColor}\n            fillToComplete={toCompleteColor}\n            onLeave={onTaskLeave}\n            onOver={onTaskOver}\n            x={xCoordinate}\n            y={yCoordinate}\n            width={width}\n            disabled={create}\n            onTaskEvent={onTaskEvent}\n          />\n        );\n      })}\n      {toolTip && taskTooltip && <TaskTooltip {...taskTooltip} />}\n    </Layer>\n  );\n};\n\nexport default TasksLayer;\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ac3cf0daa181352af594c6933d34221c4b90f0c6"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"ac3cf0daa181352af594c6933d34221c4b90f0c6"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_1nacfvm119=function(){return actualCoverage},actualCoverage}cov_1nacfvm119(),cov_1nacfvm119().s[0]++;__webpack_exports__.A=({setTaskTooltip:setTaskTooltip,taskTooltip:taskTooltip,create:create,onTaskEvent:onTaskEvent})=>{cov_1nacfvm119().f[0]++;const{columnWidth:columnWidth,drawRange:drawRange,interval:{start:intervalStart,end:intervalEnd},resolution:resolution,resources:resources,rowHeight:rowHeight,tasks:tasks,toolTip:toolTip}=(cov_1nacfvm119().s[1]++,(0,_timeline_TimelineContext__WEBPACK_IMPORTED_MODULE_3__._)()),getResourceById=(cov_1nacfvm119().s[2]++,(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((resourceId=>(cov_1nacfvm119().f[1]++,cov_1nacfvm119().s[3]++,resources.findIndex((({id:id})=>(cov_1nacfvm119().f[2]++,cov_1nacfvm119().s[4]++,resourceId===id))))),[resources])),getTaskById=(cov_1nacfvm119().s[5]++,(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((taskId=>(cov_1nacfvm119().f[3]++,cov_1nacfvm119().s[6]++,tasks.find((({id:id})=>(cov_1nacfvm119().f[4]++,cov_1nacfvm119().s[7]++,taskId===id))))),[tasks])),onTaskLeave=(cov_1nacfvm119().s[8]++,(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>(cov_1nacfvm119().f[5]++,cov_1nacfvm119().s[9]++,setTaskTooltip(null))),[setTaskTooltip])),onTaskOver=(cov_1nacfvm119().s[10]++,(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((taskId,point)=>{cov_1nacfvm119().f[6]++;const task=(cov_1nacfvm119().s[11]++,getTaskById(taskId));if(cov_1nacfvm119().s[12]++,!task)return cov_1nacfvm119().b[0][0]++,cov_1nacfvm119().s[13]++,setTaskTooltip(null);cov_1nacfvm119().b[0][1]++;const{x:x,y:y}=(cov_1nacfvm119().s[14]++,point);cov_1nacfvm119().s[15]++,setTaskTooltip({task:task,x:x,y:y})}),[getTaskById,setTaskTooltip])),getXCoordinate=(cov_1nacfvm119().s[16]++,(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((offset=>(cov_1nacfvm119().f[7]++,cov_1nacfvm119().s[17]++,offset*columnWidth/resolution.sizeInUnits)),[columnWidth,resolution.sizeInUnits])),getTaskXCoordinate=(cov_1nacfvm119().s[18]++,(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((startTime=>{cov_1nacfvm119().f[8]++;const timeStart=(cov_1nacfvm119().s[19]++,luxon__WEBPACK_IMPORTED_MODULE_2__.c9.fromMillis(startTime)),startOffsetInUnit=(cov_1nacfvm119().s[20]++,timeStart.diff(intervalStart).as(resolution.unit));return cov_1nacfvm119().s[21]++,getXCoordinate(startOffsetInUnit)}),[getXCoordinate,intervalStart,resolution.unit])),getTaskWidth=(cov_1nacfvm119().s[22]++,(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((({start:start,end:end})=>{cov_1nacfvm119().f[9]++;const timeStart=(cov_1nacfvm119().s[23]++,luxon__WEBPACK_IMPORTED_MODULE_2__.c9.fromMillis(start)),timeEnd=(cov_1nacfvm119().s[24]++,luxon__WEBPACK_IMPORTED_MODULE_2__.c9.fromMillis(end)),widthOffsetInUnit=(cov_1nacfvm119().s[25]++,timeEnd.diff(timeStart).as(resolution.unit));return cov_1nacfvm119().s[26]++,getXCoordinate(widthOffsetInUnit)}),[getXCoordinate,resolution.unit]));return cov_1nacfvm119().s[27]++,cov_1nacfvm119().b[2][0]++,intervalStart&&(cov_1nacfvm119().b[2][1]++,intervalEnd)?(cov_1nacfvm119().b[1][1]++,cov_1nacfvm119().s[29]++,drawRange.end-drawRange.start<=0?(cov_1nacfvm119().b[3][0]++,cov_1nacfvm119().s[30]++,null):(cov_1nacfvm119().b[3][1]++,cov_1nacfvm119().s[31]++,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_konva__WEBPACK_IMPORTED_MODULE_1__.Wd,null,tasks.map((taskData=>{cov_1nacfvm119().f[10]++;const{resourceId:resourceId,time:time}=(cov_1nacfvm119().s[32]++,taskData),resourceIndex=(cov_1nacfvm119().s[33]++,getResourceById(resourceId));if(cov_1nacfvm119().s[34]++,resourceIndex<0)return cov_1nacfvm119().b[4][0]++,cov_1nacfvm119().s[35]++,null;cov_1nacfvm119().b[4][1]++;const{color:resourceColor,toCompleteColor:toCompleteColor}=(cov_1nacfvm119().s[36]++,resources[resourceIndex]),xCoordinate=(cov_1nacfvm119().s[37]++,getTaskXCoordinate(time.start)),yCoordinate=(cov_1nacfvm119().s[38]++,(0,_utils_tasks__WEBPACK_IMPORTED_MODULE_4__.XO)(resourceIndex,rowHeight)),width=(cov_1nacfvm119().s[39]++,getTaskWidth(time));return cov_1nacfvm119().s[40]++,cov_1nacfvm119().b[6][0]++,xCoordinate>drawRange.end||(cov_1nacfvm119().b[6][1]++,xCoordinate+width<drawRange.start)?(cov_1nacfvm119().b[5][0]++,cov_1nacfvm119().s[41]++,null):(cov_1nacfvm119().b[5][1]++,cov_1nacfvm119().s[42]++,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Task__WEBPACK_IMPORTED_MODULE_5__.A,{key:`task-${taskData.id}`,data:taskData,fill:resourceColor,fillToComplete:toCompleteColor,onLeave:onTaskLeave,onOver:onTaskOver,x:xCoordinate,y:yCoordinate,width:width,disabled:create,onTaskEvent:onTaskEvent}))})),(cov_1nacfvm119().b[7][0]++,toolTip&&(cov_1nacfvm119().b[7][1]++,taskTooltip)&&(cov_1nacfvm119().b[7][2]++,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_6__.A,taskTooltip)))))):(cov_1nacfvm119().b[1][0]++,cov_1nacfvm119().s[28]++,null)};try{Layer.displayName="Layer",Layer.__docgenInfo={description:"This component renders a set of tasks as a Konva Layer.\nTasks are displayed accordingly to their assigned resource (different vertical / row position) and their timing (different horizontal / column position)\n`TasksLayer` is also responsible of handling callback for task components offering base implementation for click, leave and over.\n\nThe playground has a canvas that simulates 1 day of data with 1 hour resolution.\nDepending on your screen size you might be able to test also the horizontal scrolling behaviour.",displayName:"Layer",props:{taskTooltip:{defaultValue:null,description:"",name:"taskTooltip",required:!0,type:{name:"TaskTooltipProps | null"}},setTaskTooltip:{defaultValue:null,description:"",name:"setTaskTooltip",required:!0,type:{name:"(tooltip: TaskTooltipProps | null) => void"}},create:{defaultValue:null,description:"",name:"create",required:!1,type:{name:"boolean"}},onTaskEvent:{defaultValue:null,description:"",name:"onTaskEvent",required:!0,type:{name:"(value: boolean) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tasks/components/Layer/index.tsx#Layer"]={docgenInfo:Layer.__docgenInfo,name:"Layer",path:"src/tasks/components/Layer/index.tsx#Layer"})}catch(__react_docgen_typescript_loader_error){}}}]);