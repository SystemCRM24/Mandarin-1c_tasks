"use strict";(self.webpackChunk_melfore_konva_timeline=self.webpackChunk_melfore_konva_timeline||[]).push([[84],{"./src/KonvaTimeline/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return src_KonvaTimeline}});var react=__webpack_require__("./node_modules/react/index.js"),ReactKonva=__webpack_require__("./node_modules/react-konva/es/ReactKonva.js"),luxon=__webpack_require__("./node_modules/luxon/src/luxon.js"),_konva=__webpack_require__("./src/@konva/index.tsx"),TimelineContext=__webpack_require__("./src/timeline/TimelineContext.tsx"),time_resolution=__webpack_require__("./src/utils/time-resolution.ts");function cov_1h1u7yg2ci(){var path="/home/runner/work/konva-timeline/konva-timeline/src/utils/timeBlockArray.ts",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/utils/timeBlockArray.ts",statementMap:{0:{start:{line:2,column:35},end:{line:29,column:1}},1:{start:{line:3,column:23},end:{line:3,column:25}},2:{start:{line:4,column:2},end:{line:27,column:5}},3:{start:{line:5,column:20},end:{line:5,column:51}},4:{start:{line:6,column:4},end:{line:21,column:5}},5:{start:{line:7,column:6},end:{line:13,column:7}},6:{start:{line:8,column:8},end:{line:11,column:11}},7:{start:{line:12,column:8},end:{line:12,column:15}},8:{start:{line:14,column:6},end:{line:20,column:7}},9:{start:{line:15,column:8},end:{line:18,column:11}},10:{start:{line:19,column:8},end:{line:19,column:15}},11:{start:{line:22,column:4},end:{line:25,column:7}},12:{start:{line:26,column:4},end:{line:26,column:11}},13:{start:{line:28,column:2},end:{line:28,column:22}},14:{start:{line:30,column:37},end:{line:55,column:1}},15:{start:{line:31,column:2},end:{line:53,column:3}},16:{start:{line:32,column:20},end:{line:32,column:22}},17:{start:{line:33,column:4},end:{line:51,column:7}},18:{start:{line:34,column:20},end:{line:34,column:36}},19:{start:{line:35,column:19},end:{line:35,column:34}},20:{start:{line:36,column:31},end:{line:36,column:71}},21:{start:{line:37,column:6},end:{line:45,column:7}},22:{start:{line:38,column:25},end:{line:38,column:58}},23:{start:{line:39,column:31},end:{line:39,column:70}},24:{start:{line:40,column:8},end:{line:43,column:11}},25:{start:{line:44,column:8},end:{line:44,column:15}},26:{start:{line:46,column:16},end:{line:46,column:62}},27:{start:{line:47,column:6},end:{line:50,column:9}},28:{start:{line:52,column:4},end:{line:52,column:19}},29:{start:{line:54,column:2},end:{line:54,column:12}},30:{start:{line:56,column:41},end:{line:76,column:1}},31:{start:{line:57,column:2},end:{line:74,column:3}},32:{start:{line:58,column:24},end:{line:58,column:26}},33:{start:{line:59,column:4},end:{line:72,column:7}},34:{start:{line:60,column:26},end:{line:60,column:44}},35:{start:{line:61,column:24},end:{line:61,column:40}},36:{start:{line:62,column:6},end:{line:66,column:7}},37:{start:{line:63,column:8},end:{line:63,column:31}},38:{start:{line:64,column:8},end:{line:64,column:28}},39:{start:{line:65,column:8},end:{line:65,column:15}},40:{start:{line:67,column:6},end:{line:71,column:7}},41:{start:{line:68,column:8},end:{line:68,column:31}},42:{start:{line:69,column:8},end:{line:69,column:28}},43:{start:{line:70,column:8},end:{line:70,column:15}},44:{start:{line:73,column:4},end:{line:73,column:23}},45:{start:{line:75,column:2},end:{line:75,column:12}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:2,column:35},end:{line:2,column:36}},loc:{start:{line:2,column:61},end:{line:29,column:1}},line:2},1:{name:"(anonymous_1)",decl:{start:{line:4,column:20},end:{line:4,column:21}},loc:{start:{line:4,column:30},end:{line:27,column:3}},line:4},2:{name:"(anonymous_2)",decl:{start:{line:30,column:37},end:{line:30,column:38}},loc:{start:{line:30,column:79},end:{line:55,column:1}},line:30},3:{name:"(anonymous_3)",decl:{start:{line:33,column:28},end:{line:33,column:29}},loc:{start:{line:33,column:47},end:{line:51,column:5}},line:33},4:{name:"(anonymous_4)",decl:{start:{line:56,column:41},end:{line:56,column:42}},loc:{start:{line:56,column:123},end:{line:76,column:1}},line:56},5:{name:"(anonymous_5)",decl:{start:{line:59,column:28},end:{line:59,column:29}},loc:{start:{line:59,column:42},end:{line:72,column:5}},line:59}},branchMap:{0:{loc:{start:{line:6,column:4},end:{line:21,column:5}},type:"if",locations:[{start:{line:6,column:4},end:{line:21,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:6},1:{loc:{start:{line:7,column:6},end:{line:13,column:7}},type:"if",locations:[{start:{line:7,column:6},end:{line:13,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:7},2:{loc:{start:{line:14,column:6},end:{line:20,column:7}},type:"if",locations:[{start:{line:14,column:6},end:{line:20,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:14},3:{loc:{start:{line:31,column:2},end:{line:53,column:3}},type:"if",locations:[{start:{line:31,column:2},end:{line:53,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:31},4:{loc:{start:{line:37,column:6},end:{line:45,column:7}},type:"if",locations:[{start:{line:37,column:6},end:{line:45,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:37},5:{loc:{start:{line:57,column:2},end:{line:74,column:3}},type:"if",locations:[{start:{line:57,column:2},end:{line:74,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:57},6:{loc:{start:{line:62,column:6},end:{line:66,column:7}},type:"if",locations:[{start:{line:62,column:6},end:{line:66,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:62},7:{loc:{start:{line:62,column:10},end:{line:62,column:87}},type:"binary-expr",locations:[{start:{line:62,column:10},end:{line:62,column:47}},{start:{line:62,column:51},end:{line:62,column:87}}],line:62},8:{loc:{start:{line:67,column:6},end:{line:71,column:7}},type:"if",locations:[{start:{line:67,column:6},end:{line:71,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:67},9:{loc:{start:{line:67,column:10},end:{line:67,column:91}},type:"binary-expr",locations:[{start:{line:67,column:10},end:{line:67,column:50}},{start:{line:67,column:54},end:{line:67,column:91}}],line:67}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0},f:{0:0,1:0,2:0,3:0,4:0,5:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0]},inputSourceMap:{version:3,names:["daysInMonth","getMonth","getStartMonthsDay","getYear","getTimeBlocksTzInfo","timeBlock","initialTz","dayInfoArray","forEach","column","tzStart","start","toISO","slice","Number","push","backHour","nextHour","getDaysNumberOfMonths","unitAbove","aboveTimeBlocks","interval","dayInfo","index","month","year","currentMonthDays","startDay","daysToMonthEnd","thisMonth","untilNow","n","getAboveTimeBlocksVisible","visibleTimeBlocks","startUnitAbove","endUnitAbove","arrayIndex","length","blocksArray","i","startMillis","toMillis","endMillis","end"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/utils/timeBlockArray.ts"],sourcesContent:['import { DateTime, Interval } from "luxon";\n\nimport { daysInMonth, getMonth, getStartMonthsDay, getYear, Scale } from "./time-resolution";\n\ninterface VisibleHourInfoProps {\n  backHour?: boolean;\n  nextHour?: boolean;\n}\n\ninterface DayDetailProps {\n  thisMonth?: number;\n  untilNow?: number;\n}\n\nexport const getTimeBlocksTzInfo = (timeBlock: Interval[], initialTz?: string) => {\n  const dayInfoArray: VisibleHourInfoProps[] = [];\n\n  timeBlock.forEach((column) => {\n    const tzStart = column.start!.toISO()?.slice(-6);\n\n    if (initialTz !== tzStart) {\n      if (Number(initialTz?.slice(1, 3)) - Number(tzStart!.slice(1, 3)) > 0) {\n        dayInfoArray.push({\n          backHour: true,\n          nextHour: false,\n        });\n        return;\n      }\n\n      if (Number(initialTz?.slice(1, 3)) - Number(tzStart!.slice(1, 3)) < 0) {\n        dayInfoArray.push({\n          backHour: false,\n          nextHour: true,\n        });\n        return;\n      }\n    }\n\n    dayInfoArray.push({\n      backHour: false,\n      nextHour: false,\n    });\n\n    return;\n  });\n\n  return dayInfoArray;\n};\n\nexport const getDaysNumberOfMonths = (unitAbove: Scale, aboveTimeBlocks: Interval[], interval: Interval) => {\n  if (unitAbove === "month") {\n    const dayInfo: DayDetailProps[] = [];\n\n    aboveTimeBlocks.forEach((column, index) => {\n      const month = getMonth(column);\n      const year = getYear(column);\n      const currentMonthDays = daysInMonth(Number(month), Number(year));\n\n      if (index === 0) {\n        const startDay = getStartMonthsDay(interval.start!);\n        const daysToMonthEnd = currentMonthDays - Number(startDay) + 1;\n        dayInfo.push({\n          thisMonth: daysToMonthEnd,\n          untilNow: daysToMonthEnd,\n        });\n\n        return;\n      }\n\n      const n = dayInfo[index - 1].untilNow! + currentMonthDays;\n      dayInfo.push({\n        thisMonth: currentMonthDays,\n        untilNow: n,\n      });\n    });\n\n    return dayInfo;\n  }\n  return [];\n};\n\nexport const getAboveTimeBlocksVisible = (\n  visibleTimeBlocks: Interval[],\n  aboveTimeBlocks: Interval[],\n  startUnitAbove: DateTime | null,\n  endUnitAbove: DateTime | null,\n  arrayIndex: number[]\n) => {\n  if (visibleTimeBlocks.length !== 0) {\n    const blocksArray: Interval[] = [];\n    aboveTimeBlocks.forEach((i, index) => {\n      const startMillis = i.start!.toMillis();\n      const endMillis = i.end!.toMillis();\n      if (endMillis > startUnitAbove!.toMillis() && endMillis <= endUnitAbove!.toMillis()) {\n        arrayIndex.push(index);\n        blocksArray.push(i);\n        return;\n      }\n\n      if (startMillis >= startUnitAbove!.toMillis() && startMillis < endUnitAbove!.toMillis()) {\n        arrayIndex.push(index);\n        blocksArray.push(i);\n        return;\n      }\n    });\n\n    return blocksArray;\n  }\n  return [];\n};\n'],mappings:"AAEA,SAASA,WAAW,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,OAAO,QAAe,mBAAmB;AAY5F,OAAO,MAAMC,mBAAmB,GAAGA,CAACC,SAAqB,EAAEC,SAAkB,KAAK;EAChF,MAAMC,YAAoC,GAAG,EAAE;EAE/CF,SAAS,CAACG,OAAO,CAAEC,MAAM,IAAK;IAC5B,MAAMC,OAAO,GAAGD,MAAM,CAACE,KAAK,CAAEC,KAAK,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEhD,IAAIP,SAAS,KAAKI,OAAO,EAAE;MACzB,IAAII,MAAM,CAACR,SAAS,EAAEO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGC,MAAM,CAACJ,OAAO,CAAEG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACrEN,YAAY,CAACQ,IAAI,CAAC;UAChBC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE;QACZ,CAAC,CAAC;QACF;MACF;MAEA,IAAIH,MAAM,CAACR,SAAS,EAAEO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGC,MAAM,CAACJ,OAAO,CAAEG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACrEN,YAAY,CAACQ,IAAI,CAAC;UAChBC,QAAQ,EAAE,KAAK;UACfC,QAAQ,EAAE;QACZ,CAAC,CAAC;QACF;MACF;IACF;IAEAV,YAAY,CAACQ,IAAI,CAAC;MAChBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF;EACF,CAAC,CAAC;EAEF,OAAOV,YAAY;AACrB,CAAC;AAED,OAAO,MAAMW,qBAAqB,GAAGA,CAACC,SAAgB,EAAEC,eAA2B,EAAEC,QAAkB,KAAK;EAC1G,IAAIF,SAAS,KAAK,OAAO,EAAE;IACzB,MAAMG,OAAyB,GAAG,EAAE;IAEpCF,eAAe,CAACZ,OAAO,CAAC,CAACC,MAAM,EAAEc,KAAK,KAAK;MACzC,MAAMC,KAAK,GAAGvB,QAAQ,CAACQ,MAAM,CAAC;MAC9B,MAAMgB,IAAI,GAAGtB,OAAO,CAACM,MAAM,CAAC;MAC5B,MAAMiB,gBAAgB,GAAG1B,WAAW,CAACc,MAAM,CAACU,KAAK,CAAC,EAAEV,MAAM,CAACW,IAAI,CAAC,CAAC;MAEjE,IAAIF,KAAK,KAAK,CAAC,EAAE;QACf,MAAMI,QAAQ,GAAGzB,iBAAiB,CAACmB,QAAQ,CAACV,KAAM,CAAC;QACnD,MAAMiB,cAAc,GAAGF,gBAAgB,GAAGZ,MAAM,CAACa,QAAQ,CAAC,GAAG,CAAC;QAC9DL,OAAO,CAACP,IAAI,CAAC;UACXc,SAAS,EAAED,cAAc;UACzBE,QAAQ,EAAEF;QACZ,CAAC,CAAC;QAEF;MACF;MAEA,MAAMG,CAAC,GAAGT,OAAO,CAACC,KAAK,GAAG,CAAC,CAAC,CAACO,QAAQ,GAAIJ,gBAAgB;MACzDJ,OAAO,CAACP,IAAI,CAAC;QACXc,SAAS,EAAEH,gBAAgB;QAC3BI,QAAQ,EAAEC;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOT,OAAO;EAChB;EACA,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMU,yBAAyB,GAAGA,CACvCC,iBAA6B,EAC7Bb,eAA2B,EAC3Bc,cAA+B,EAC/BC,YAA6B,EAC7BC,UAAoB,KACjB;EACH,IAAIH,iBAAiB,CAACI,MAAM,KAAK,CAAC,EAAE;IAClC,MAAMC,WAAuB,GAAG,EAAE;IAClClB,eAAe,CAACZ,OAAO,CAAC,CAAC+B,CAAC,EAAEhB,KAAK,KAAK;MACpC,MAAMiB,WAAW,GAAGD,CAAC,CAAC5B,KAAK,CAAE8B,QAAQ,CAAC,CAAC;MACvC,MAAMC,SAAS,GAAGH,CAAC,CAACI,GAAG,CAAEF,QAAQ,CAAC,CAAC;MACnC,IAAIC,SAAS,GAAGR,cAAc,CAAEO,QAAQ,CAAC,CAAC,IAAIC,SAAS,IAAIP,YAAY,CAAEM,QAAQ,CAAC,CAAC,EAAE;QACnFL,UAAU,CAACrB,IAAI,CAACQ,KAAK,CAAC;QACtBe,WAAW,CAACvB,IAAI,CAACwB,CAAC,CAAC;QACnB;MACF;MAEA,IAAIC,WAAW,IAAIN,cAAc,CAAEO,QAAQ,CAAC,CAAC,IAAID,WAAW,GAAGL,YAAY,CAAEM,QAAQ,CAAC,CAAC,EAAE;QACvFL,UAAU,CAACrB,IAAI,CAACQ,KAAK,CAAC;QACtBe,WAAW,CAACvB,IAAI,CAACwB,CAAC,CAAC;QACnB;MACF;IACF,CAAC,CAAC;IAEF,OAAOD,WAAW;EACpB;EACA,OAAO,EAAE;AACX,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"758eb47a7abe583fc493f2da4747b14b60f56493"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"758eb47a7abe583fc493f2da4747b14b60f56493"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_1h1u7yg2ci=function(){return actualCoverage},actualCoverage}cov_1h1u7yg2ci(),cov_1h1u7yg2ci().s[0]++;const getTimeBlocksTzInfo=(timeBlock,initialTz)=>{cov_1h1u7yg2ci().f[0]++;const dayInfoArray=(cov_1h1u7yg2ci().s[1]++,[]);return cov_1h1u7yg2ci().s[2]++,timeBlock.forEach((column=>{cov_1h1u7yg2ci().f[1]++;const tzStart=(cov_1h1u7yg2ci().s[3]++,column.start.toISO()?.slice(-6));if(cov_1h1u7yg2ci().s[4]++,initialTz!==tzStart){if(cov_1h1u7yg2ci().b[0][0]++,cov_1h1u7yg2ci().s[5]++,Number(initialTz?.slice(1,3))-Number(tzStart.slice(1,3))>0)return cov_1h1u7yg2ci().b[1][0]++,cov_1h1u7yg2ci().s[6]++,dayInfoArray.push({backHour:!0,nextHour:!1}),void cov_1h1u7yg2ci().s[7]++;if(cov_1h1u7yg2ci().b[1][1]++,cov_1h1u7yg2ci().s[8]++,Number(initialTz?.slice(1,3))-Number(tzStart.slice(1,3))<0)return cov_1h1u7yg2ci().b[2][0]++,cov_1h1u7yg2ci().s[9]++,dayInfoArray.push({backHour:!1,nextHour:!0}),void cov_1h1u7yg2ci().s[10]++;cov_1h1u7yg2ci().b[2][1]++}else cov_1h1u7yg2ci().b[0][1]++;cov_1h1u7yg2ci().s[11]++,dayInfoArray.push({backHour:!1,nextHour:!1}),cov_1h1u7yg2ci().s[12]++})),cov_1h1u7yg2ci().s[13]++,dayInfoArray};cov_1h1u7yg2ci().s[14]++;cov_1h1u7yg2ci().s[30]++;var theme=__webpack_require__("./src/utils/theme.ts");function cov_23vnfwcq18(){var path="/home/runner/work/konva-timeline/konva-timeline/src/grid/Cell/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/grid/Cell/index.tsx",statementMap:{0:{start:{line:6,column:17},end:{line:67,column:1}},1:{start:{line:23,column:6},end:{line:23,column:26}},2:{start:{line:24,column:20},end:{line:24,column:124}},3:{start:{line:24,column:34},end:{line:24,column:85}},4:{start:{line:25,column:15},end:{line:43,column:72}},5:{start:{line:26,column:4},end:{line:33,column:5}},6:{start:{line:27,column:6},end:{line:29,column:7}},7:{start:{line:28,column:8},end:{line:28,column:71}},8:{start:{line:30,column:6},end:{line:32,column:7}},9:{start:{line:31,column:8},end:{line:31,column:71}},10:{start:{line:34,column:4},end:{line:41,column:5}},11:{start:{line:35,column:6},end:{line:37,column:7}},12:{start:{line:36,column:8},end:{line:36,column:72}},13:{start:{line:38,column:6},end:{line:40,column:7}},14:{start:{line:39,column:8},end:{line:39,column:72}},15:{start:{line:42,column:4},end:{line:42,column:48}},16:{start:{line:44,column:15},end:{line:44,column:58}},17:{start:{line:44,column:29},end:{line:44,column:44}},18:{start:{line:45,column:17},end:{line:50,column:18}},19:{start:{line:46,column:4},end:{line:48,column:5}},20:{start:{line:47,column:6},end:{line:47,column:39}},21:{start:{line:49,column:4},end:{line:49,column:36}},22:{start:{line:51,column:2},end:{line:66,column:6}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:6,column:17},end:{line:6,column:18}},loc:{start:{line:11,column:6},end:{line:67,column:1}},line:11},1:{name:"(anonymous_1)",decl:{start:{line:24,column:28},end:{line:24,column:29}},loc:{start:{line:24,column:34},end:{line:24,column:85}},line:24},2:{name:"(anonymous_2)",decl:{start:{line:25,column:23},end:{line:25,column:24}},loc:{start:{line:25,column:29},end:{line:43,column:3}},line:25},3:{name:"(anonymous_3)",decl:{start:{line:44,column:23},end:{line:44,column:24}},loc:{start:{line:44,column:29},end:{line:44,column:44}},line:44},4:{name:"(anonymous_4)",decl:{start:{line:45,column:25},end:{line:45,column:26}},loc:{start:{line:45,column:31},end:{line:50,column:3}},line:45}},branchMap:{0:{loc:{start:{line:26,column:4},end:{line:33,column:5}},type:"if",locations:[{start:{line:26,column:4},end:{line:33,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:26},1:{loc:{start:{line:27,column:6},end:{line:29,column:7}},type:"if",locations:[{start:{line:27,column:6},end:{line:29,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:27},2:{loc:{start:{line:30,column:6},end:{line:32,column:7}},type:"if",locations:[{start:{line:30,column:6},end:{line:32,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:30},3:{loc:{start:{line:34,column:4},end:{line:41,column:5}},type:"if",locations:[{start:{line:34,column:4},end:{line:41,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:34},4:{loc:{start:{line:35,column:6},end:{line:37,column:7}},type:"if",locations:[{start:{line:35,column:6},end:{line:37,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:35},5:{loc:{start:{line:38,column:6},end:{line:40,column:7}},type:"if",locations:[{start:{line:38,column:6},end:{line:40,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:38},6:{loc:{start:{line:46,column:4},end:{line:48,column:5}},type:"if",locations:[{start:{line:46,column:4},end:{line:48,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:46}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0},f:{0:0,1:0,2:0,3:0,4:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0]},inputSourceMap:{version:3,names:["React","memo","useMemo","KonvaGroup","KonvaLine","KonvaText","useTimelineContext","DEFAULT_STROKE_DARK_MODE","DEFAULT_STROKE_LIGHT_MODE","displayInterval","GridCell","column","height","index","hourInfo","visibleDayInfo","blocksOffset","columnWidth","resolution","unit","resolutionUnit","rowHeight","dateLocale","theme","color","themeColor","cellLabel","xPos","backHour","nextHour","yPos","stroke","createElement","key","x","y","points","strokeWidth","fill","text","width","align"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/grid/Cell/index.tsx"],sourcesContent:['import React, { memo, useMemo } from "react";\nimport { Interval } from "luxon";\n\nimport { KonvaGroup, KonvaLine, KonvaText } from "../../@konva";\nimport { useTimelineContext } from "../../timeline/TimelineContext";\nimport { DEFAULT_STROKE_DARK_MODE, DEFAULT_STROKE_LIGHT_MODE } from "../../utils/theme";\nimport { displayInterval } from "../../utils/time-resolution";\n\ninterface GridCellProps {\n  column: Interval;\n  height: number;\n  index: number;\n  hourInfo: {\n    backHour?: boolean;\n    nextHour?: boolean;\n  };\n}\n\nconst GridCell = ({ column, height, index, hourInfo: visibleDayInfo }: GridCellProps) => {\n  const {\n    blocksOffset,\n    columnWidth,\n    resolution: { unit: resolutionUnit },\n    rowHeight,\n    dateLocale,\n    theme: { color: themeColor },\n  } = useTimelineContext();\n\n  const cellLabel = useMemo(\n    () => displayInterval(column, resolutionUnit, dateLocale!),\n    [column, resolutionUnit, dateLocale]\n  );\n\n  const xPos = useMemo(() => {\n    if (resolutionUnit === "day") {\n      if (visibleDayInfo.backHour) {\n        return columnWidth * (index + blocksOffset) + columnWidth / 24;\n      }\n\n      if (visibleDayInfo.nextHour) {\n        return columnWidth * (index + blocksOffset) - columnWidth / 24;\n      }\n    }\n    if (resolutionUnit === "week") {\n      if (visibleDayInfo.backHour) {\n        return columnWidth * (index + blocksOffset) + columnWidth / 168;\n      }\n\n      if (visibleDayInfo.nextHour) {\n        return columnWidth * (index + blocksOffset) - columnWidth / 168;\n      }\n    }\n\n    return columnWidth * (index + blocksOffset);\n  }, [blocksOffset, columnWidth, index, visibleDayInfo, resolutionUnit]);\n\n  const yPos = useMemo(() => rowHeight * 0.8, [rowHeight]);\n\n  const stroke = useMemo(() => {\n    if (themeColor === "black") {\n      return DEFAULT_STROKE_LIGHT_MODE;\n    }\n    return DEFAULT_STROKE_DARK_MODE;\n  }, [themeColor]);\n\n  return (\n    <KonvaGroup key={`timeslot-${index}`}>\n      <KonvaLine x={xPos} y={yPos} points={[0, 0, 0, height]} stroke={stroke} strokeWidth={1} />\n      <KonvaText fill={themeColor} x={xPos} y={yPos - 8} text={cellLabel} width={columnWidth} align="center" />\n    </KonvaGroup>\n  );\n};\n\nexport default memo(GridCell);\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c6f6c4c396169ec2ff52bee3f890db9c482aaf04"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"c6f6c4c396169ec2ff52bee3f890db9c482aaf04"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_23vnfwcq18=function(){return actualCoverage},actualCoverage}cov_23vnfwcq18(),cov_23vnfwcq18().s[0]++;const GridCell=({column:column,height:height,index:index,hourInfo:visibleDayInfo})=>{cov_23vnfwcq18().f[0]++;const{blocksOffset:blocksOffset,columnWidth:columnWidth,resolution:{unit:resolutionUnit},rowHeight:rowHeight,dateLocale:dateLocale,theme:{color:themeColor}}=(cov_23vnfwcq18().s[1]++,(0,TimelineContext._)()),cellLabel=(cov_23vnfwcq18().s[2]++,(0,react.useMemo)((()=>(cov_23vnfwcq18().f[1]++,cov_23vnfwcq18().s[3]++,(0,time_resolution.gd)(column,resolutionUnit,dateLocale))),[column,resolutionUnit,dateLocale])),xPos=(cov_23vnfwcq18().s[4]++,(0,react.useMemo)((()=>{if(cov_23vnfwcq18().f[2]++,cov_23vnfwcq18().s[5]++,"day"===resolutionUnit){if(cov_23vnfwcq18().b[0][0]++,cov_23vnfwcq18().s[6]++,visibleDayInfo.backHour)return cov_23vnfwcq18().b[1][0]++,cov_23vnfwcq18().s[7]++,columnWidth*(index+blocksOffset)+columnWidth/24;if(cov_23vnfwcq18().b[1][1]++,cov_23vnfwcq18().s[8]++,visibleDayInfo.nextHour)return cov_23vnfwcq18().b[2][0]++,cov_23vnfwcq18().s[9]++,columnWidth*(index+blocksOffset)-columnWidth/24;cov_23vnfwcq18().b[2][1]++}else cov_23vnfwcq18().b[0][1]++;if(cov_23vnfwcq18().s[10]++,"week"===resolutionUnit){if(cov_23vnfwcq18().b[3][0]++,cov_23vnfwcq18().s[11]++,visibleDayInfo.backHour)return cov_23vnfwcq18().b[4][0]++,cov_23vnfwcq18().s[12]++,columnWidth*(index+blocksOffset)+columnWidth/168;if(cov_23vnfwcq18().b[4][1]++,cov_23vnfwcq18().s[13]++,visibleDayInfo.nextHour)return cov_23vnfwcq18().b[5][0]++,cov_23vnfwcq18().s[14]++,columnWidth*(index+blocksOffset)-columnWidth/168;cov_23vnfwcq18().b[5][1]++}else cov_23vnfwcq18().b[3][1]++;return cov_23vnfwcq18().s[15]++,columnWidth*(index+blocksOffset)}),[blocksOffset,columnWidth,index,visibleDayInfo,resolutionUnit])),yPos=(cov_23vnfwcq18().s[16]++,(0,react.useMemo)((()=>(cov_23vnfwcq18().f[3]++,cov_23vnfwcq18().s[17]++,.8*rowHeight)),[rowHeight])),stroke=(cov_23vnfwcq18().s[18]++,(0,react.useMemo)((()=>(cov_23vnfwcq18().f[4]++,cov_23vnfwcq18().s[19]++,"black"===themeColor?(cov_23vnfwcq18().b[6][0]++,cov_23vnfwcq18().s[20]++,theme._N):(cov_23vnfwcq18().b[6][1]++,cov_23vnfwcq18().s[21]++,theme.MK))),[themeColor]));return cov_23vnfwcq18().s[22]++,react.createElement(_konva.zT,{key:`timeslot-${index}`},react.createElement(_konva.mQ,{x:xPos,y:yPos,points:[0,0,0,height],stroke:stroke,strokeWidth:1}),react.createElement(_konva.ty,{fill:themeColor,x:xPos,y:yPos-8,text:cellLabel,width:columnWidth,align:"center"}))};var Cell=(0,react.memo)(GridCell);try{GridCell.displayName="GridCell",GridCell.__docgenInfo={description:"",displayName:"GridCell",props:{column:{defaultValue:null,description:"",name:"column",required:!0,type:{name:"Interval<boolean>"}},height:{defaultValue:null,description:"",name:"height",required:!0,type:{name:"number"}},index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},hourInfo:{defaultValue:null,description:"",name:"hourInfo",required:!0,type:{name:"{ backHour?: boolean | undefined; nextHour?: boolean | undefined; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/grid/Cell/index.tsx#GridCell"]={docgenInfo:GridCell.__docgenInfo,name:"GridCell",path:"src/grid/Cell/index.tsx#GridCell"})}catch(__react_docgen_typescript_loader_error){}function cov_12ivzobf6(){var path="/home/runner/work/konva-timeline/konva-timeline/src/grid/CellGroup/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/grid/CellGroup/index.tsx",statementMap:{0:{start:{line:7,column:22},end:{line:111,column:1}},1:{start:{line:25,column:6},end:{line:25,column:26}},2:{start:{line:26,column:20},end:{line:26,column:119}},3:{start:{line:26,column:34},end:{line:26,column:85}},4:{start:{line:27,column:17},end:{line:27,column:65}},5:{start:{line:27,column:31},end:{line:27,column:51}},6:{start:{line:28,column:31},end:{line:37,column:45}},7:{start:{line:29,column:4},end:{line:33,column:5}},8:{start:{line:30,column:6},end:{line:32,column:34}},9:{start:{line:34,column:4},end:{line:36,column:30}},10:{start:{line:38,column:28},end:{line:40,column:41}},11:{start:{line:39,column:4},end:{line:39,column:46}},12:{start:{line:41,column:15},end:{line:73,column:88}},13:{start:{line:42,column:4},end:{line:55,column:5}},14:{start:{line:43,column:22},end:{line:45,column:37}},15:{start:{line:46,column:6},end:{line:49,column:7}},16:{start:{line:47,column:30},end:{line:47,column:47}},17:{start:{line:48,column:8},end:{line:48,column:73}},18:{start:{line:50,column:6},end:{line:53,column:7}},19:{start:{line:51,column:30},end:{line:51,column:47}},20:{start:{line:52,column:8},end:{line:52,column:73}},21:{start:{line:54,column:6},end:{line:54,column:55}},22:{start:{line:56,column:4},end:{line:63,column:5}},23:{start:{line:57,column:6},end:{line:59,column:7}},24:{start:{line:58,column:8},end:{line:58,column:69}},25:{start:{line:60,column:6},end:{line:62,column:7}},26:{start:{line:61,column:8},end:{line:61,column:69}},27:{start:{line:64,column:4},end:{line:71,column:5}},28:{start:{line:65,column:6},end:{line:67,column:7}},29:{start:{line:66,column:8},end:{line:66,column:60}},30:{start:{line:68,column:6},end:{line:70,column:7}},31:{start:{line:69,column:8},end:{line:69,column:60}},32:{start:{line:72,column:4},end:{line:72,column:37}},33:{start:{line:74,column:15},end:{line:74,column:58}},34:{start:{line:74,column:29},end:{line:74,column:44}},35:{start:{line:75,column:20},end:{line:88,column:85}},36:{start:{line:76,column:4},end:{line:78,column:5}},37:{start:{line:77,column:6},end:{line:77,column:38}},38:{start:{line:79,column:4},end:{line:86,column:5}},39:{start:{line:80,column:6},end:{line:82,column:7}},40:{start:{line:81,column:8},end:{line:81,column:69}},41:{start:{line:83,column:6},end:{line:85,column:7}},42:{start:{line:84,column:8},end:{line:84,column:69}},43:{start:{line:87,column:4},end:{line:87,column:37}},44:{start:{line:89,column:17},end:{line:94,column:18}},45:{start:{line:90,column:4},end:{line:92,column:5}},46:{start:{line:91,column:6},end:{line:91,column:39}},47:{start:{line:93,column:4},end:{line:93,column:36}},48:{start:{line:95,column:2},end:{line:110,column:6}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:7,column:22},end:{line:7,column:23}},loc:{start:{line:12,column:6},end:{line:111,column:1}},line:12},1:{name:"(anonymous_1)",decl:{start:{line:26,column:28},end:{line:26,column:29}},loc:{start:{line:26,column:34},end:{line:26,column:85}},line:26},2:{name:"(anonymous_2)",decl:{start:{line:27,column:25},end:{line:27,column:26}},loc:{start:{line:27,column:31},end:{line:27,column:51}},line:27},3:{name:"(anonymous_3)",decl:{start:{line:28,column:39},end:{line:28,column:40}},loc:{start:{line:28,column:45},end:{line:37,column:3}},line:28},4:{name:"(anonymous_4)",decl:{start:{line:38,column:36},end:{line:38,column:37}},loc:{start:{line:38,column:42},end:{line:40,column:3}},line:38},5:{name:"(anonymous_5)",decl:{start:{line:41,column:23},end:{line:41,column:24}},loc:{start:{line:41,column:29},end:{line:73,column:3}},line:41},6:{name:"(anonymous_6)",decl:{start:{line:74,column:23},end:{line:74,column:24}},loc:{start:{line:74,column:29},end:{line:74,column:44}},line:74},7:{name:"(anonymous_7)",decl:{start:{line:75,column:28},end:{line:75,column:29}},loc:{start:{line:75,column:34},end:{line:88,column:3}},line:75},8:{name:"(anonymous_8)",decl:{start:{line:89,column:25},end:{line:89,column:26}},loc:{start:{line:89,column:31},end:{line:94,column:3}},line:89}},branchMap:{0:{loc:{start:{line:29,column:4},end:{line:33,column:5}},type:"if",locations:[{start:{line:29,column:4},end:{line:33,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:29},1:{loc:{start:{line:42,column:4},end:{line:55,column:5}},type:"if",locations:[{start:{line:42,column:4},end:{line:55,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:42},2:{loc:{start:{line:43,column:22},end:{line:45,column:37}},type:"cond-expr",locations:[{start:{line:43,column:63},end:{line:45,column:33}},{start:{line:45,column:36},end:{line:45,column:37}}],line:43},3:{loc:{start:{line:46,column:6},end:{line:49,column:7}},type:"if",locations:[{start:{line:46,column:6},end:{line:49,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:46},4:{loc:{start:{line:50,column:6},end:{line:53,column:7}},type:"if",locations:[{start:{line:50,column:6},end:{line:53,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:50},5:{loc:{start:{line:56,column:4},end:{line:63,column:5}},type:"if",locations:[{start:{line:56,column:4},end:{line:63,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:56},6:{loc:{start:{line:57,column:6},end:{line:59,column:7}},type:"if",locations:[{start:{line:57,column:6},end:{line:59,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:57},7:{loc:{start:{line:60,column:6},end:{line:62,column:7}},type:"if",locations:[{start:{line:60,column:6},end:{line:62,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:60},8:{loc:{start:{line:64,column:4},end:{line:71,column:5}},type:"if",locations:[{start:{line:64,column:4},end:{line:71,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:64},9:{loc:{start:{line:65,column:6},end:{line:67,column:7}},type:"if",locations:[{start:{line:65,column:6},end:{line:67,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:65},10:{loc:{start:{line:68,column:6},end:{line:70,column:7}},type:"if",locations:[{start:{line:68,column:6},end:{line:70,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:68},11:{loc:{start:{line:76,column:4},end:{line:78,column:5}},type:"if",locations:[{start:{line:76,column:4},end:{line:78,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:76},12:{loc:{start:{line:79,column:4},end:{line:86,column:5}},type:"if",locations:[{start:{line:79,column:4},end:{line:86,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:79},13:{loc:{start:{line:80,column:6},end:{line:82,column:7}},type:"if",locations:[{start:{line:80,column:6},end:{line:82,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:80},14:{loc:{start:{line:83,column:6},end:{line:85,column:7}},type:"if",locations:[{start:{line:83,column:6},end:{line:85,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:83},15:{loc:{start:{line:90,column:4},end:{line:92,column:5}},type:"if",locations:[{start:{line:90,column:4},end:{line:92,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:90}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0],15:[0,0]},inputSourceMap:{version:3,names:["React","useMemo","Duration","KonvaGroup","KonvaLine","KonvaText","useTimelineContext","DEFAULT_STROKE_DARK_MODE","DEFAULT_STROKE_LIGHT_MODE","displayAboveInterval","GridCellGroup","column","index","dayInfo","hourInfo","columnWidth","resolution","sizeInUnits","unit","unitAbove","rowHeight","theme","color","themeColor","dateLocale","cellLabel","points","unitAboveInUnitBelow","fromObject","thisMonth","as","unitAboveSpanInPx","xPos","pxUntil","untilNow","backHour","hourInMonthPx","nextHour","yPos","xPosLabel","stroke","createElement","key","x","y","strokeWidth","align","fill","text","width"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/grid/CellGroup/index.tsx"],sourcesContent:['import React, { useMemo } from "react";\nimport { Duration, Interval } from "luxon";\n\nimport { KonvaGroup, KonvaLine, KonvaText } from "../../@konva";\nimport { useTimelineContext } from "../../timeline/TimelineContext";\nimport { DEFAULT_STROKE_DARK_MODE, DEFAULT_STROKE_LIGHT_MODE } from "../../utils/theme";\nimport { displayAboveInterval } from "../../utils/time-resolution";\n\ninterface GridCellGroupProps {\n  column: Interval;\n  index: number;\n  dayInfo?: {\n    thisMonth?: number;\n    untilNow?: number;\n  };\n  hourInfo?: {\n    backHour?: boolean;\n    nextHour?: boolean;\n  };\n}\n\nconst GridCellGroup = ({ column, index, dayInfo, hourInfo }: GridCellGroupProps) => {\n  const {\n    columnWidth,\n    resolution: { sizeInUnits, unit, unitAbove },\n    rowHeight,\n    theme: { color: themeColor },\n    dateLocale,\n  } = useTimelineContext();\n\n  const cellLabel = useMemo(\n    () => displayAboveInterval(column, unitAbove, dateLocale!),\n    [column, unitAbove, dateLocale]\n  );\n\n  const points = useMemo(() => [0, 0, 0, rowHeight], [rowHeight]);\n\n  const unitAboveInUnitBelow = useMemo(() => {\n    if (unitAbove === "month") {\n      return Duration.fromObject({ ["day"]: dayInfo!.thisMonth }).as("week") / sizeInUnits;\n    }\n\n    return Duration.fromObject({ [unitAbove]: 1 }).as(unit) / sizeInUnits;\n  }, [sizeInUnits, dayInfo, unitAbove, unit]);\n\n  const unitAboveSpanInPx = useMemo(() => {\n    return unitAboveInUnitBelow * columnWidth;\n  }, [columnWidth, unitAboveInUnitBelow]);\n\n  const xPos = useMemo(() => {\n    if (unitAbove === "month") {\n      const pxUntil =\n        dayInfo!.untilNow !== dayInfo!.thisMonth\n          ? Duration.fromObject({ ["day"]: dayInfo!.untilNow! - dayInfo!.thisMonth! }).as("week") / sizeInUnits\n          : 0;\n\n      if (hourInfo!.backHour) {\n        const hourInMonthPx = columnWidth / 168;\n        return pxUntil * columnWidth + unitAboveSpanInPx + hourInMonthPx;\n      }\n\n      if (hourInfo!.nextHour) {\n        const hourInMonthPx = columnWidth / 168;\n        return pxUntil * columnWidth + unitAboveSpanInPx - hourInMonthPx;\n      }\n\n      return pxUntil * columnWidth + unitAboveSpanInPx;\n    }\n\n    if (unitAbove === "day") {\n      if (hourInfo!.backHour) {\n        return index * unitAboveSpanInPx + columnWidth / sizeInUnits;\n      }\n\n      if (hourInfo!.nextHour) {\n        return index * unitAboveSpanInPx - columnWidth / sizeInUnits;\n      }\n    }\n\n    if (unitAbove === "week") {\n      if (hourInfo!.backHour) {\n        return index * unitAboveSpanInPx + columnWidth / 24;\n      }\n\n      if (hourInfo!.nextHour) {\n        return index * unitAboveSpanInPx - columnWidth / 24;\n      }\n    }\n\n    return index * unitAboveSpanInPx;\n  }, [index, unitAboveSpanInPx, columnWidth, sizeInUnits, dayInfo, unitAbove, hourInfo]);\n\n  const yPos = useMemo(() => rowHeight * 0.3, [rowHeight]);\n\n  const xPosLabel = useMemo(() => {\n    if (unitAbove === "month") {\n      return xPos - unitAboveSpanInPx;\n    }\n    if (unitAbove === "day") {\n      if (hourInfo!.backHour) {\n        return index * unitAboveSpanInPx + columnWidth / sizeInUnits;\n      }\n\n      if (hourInfo!.nextHour) {\n        return index * unitAboveSpanInPx - columnWidth / sizeInUnits;\n      }\n    }\n    return index * unitAboveSpanInPx;\n  }, [xPos, unitAboveSpanInPx, unitAbove, index, columnWidth, sizeInUnits, hourInfo]);\n  const stroke = useMemo(() => {\n    if (themeColor === "black") {\n      return DEFAULT_STROKE_LIGHT_MODE;\n    }\n    return DEFAULT_STROKE_DARK_MODE;\n  }, [themeColor]);\n  return (\n    <KonvaGroup key={`timeslot-${index}`}>\n      <KonvaLine x={xPos} y={0} points={points} stroke={stroke} strokeWidth={1} />\n      <KonvaText\n        align="center"\n        fill={themeColor}\n        x={xPosLabel}\n        y={yPos - 8}\n        text={cellLabel}\n        width={unitAboveSpanInPx}\n      />\n    </KonvaGroup>\n  );\n};\n\nexport default GridCellGroup;\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"10fc8fbce7813662d162144122187a12e6fcba1d"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"10fc8fbce7813662d162144122187a12e6fcba1d"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_12ivzobf6=function(){return actualCoverage},actualCoverage}cov_12ivzobf6(),cov_12ivzobf6().s[0]++;var grid_CellGroup=({column:column,index:index,dayInfo:dayInfo,hourInfo:hourInfo})=>{cov_12ivzobf6().f[0]++;const{columnWidth:columnWidth,resolution:{sizeInUnits:sizeInUnits,unit:unit,unitAbove:unitAbove},rowHeight:rowHeight,theme:{color:themeColor},dateLocale:dateLocale}=(cov_12ivzobf6().s[1]++,(0,TimelineContext._)()),cellLabel=(cov_12ivzobf6().s[2]++,(0,react.useMemo)((()=>(cov_12ivzobf6().f[1]++,cov_12ivzobf6().s[3]++,(0,time_resolution.bc)(column,unitAbove,dateLocale))),[column,unitAbove,dateLocale])),points=(cov_12ivzobf6().s[4]++,(0,react.useMemo)((()=>(cov_12ivzobf6().f[2]++,cov_12ivzobf6().s[5]++,[0,0,0,rowHeight])),[rowHeight])),unitAboveInUnitBelow=(cov_12ivzobf6().s[6]++,(0,react.useMemo)((()=>(cov_12ivzobf6().f[3]++,cov_12ivzobf6().s[7]++,"month"===unitAbove?(cov_12ivzobf6().b[0][0]++,cov_12ivzobf6().s[8]++,luxon.dw.fromObject({day:dayInfo.thisMonth}).as("week")/sizeInUnits):(cov_12ivzobf6().b[0][1]++,cov_12ivzobf6().s[9]++,luxon.dw.fromObject({[unitAbove]:1}).as(unit)/sizeInUnits))),[sizeInUnits,dayInfo,unitAbove,unit])),unitAboveSpanInPx=(cov_12ivzobf6().s[10]++,(0,react.useMemo)((()=>(cov_12ivzobf6().f[4]++,cov_12ivzobf6().s[11]++,unitAboveInUnitBelow*columnWidth)),[columnWidth,unitAboveInUnitBelow])),xPos=(cov_12ivzobf6().s[12]++,(0,react.useMemo)((()=>{if(cov_12ivzobf6().f[5]++,cov_12ivzobf6().s[13]++,"month"===unitAbove){cov_12ivzobf6().b[1][0]++;const pxUntil=(cov_12ivzobf6().s[14]++,dayInfo.untilNow!==dayInfo.thisMonth?(cov_12ivzobf6().b[2][0]++,luxon.dw.fromObject({day:dayInfo.untilNow-dayInfo.thisMonth}).as("week")/sizeInUnits):(cov_12ivzobf6().b[2][1]++,0));if(cov_12ivzobf6().s[15]++,hourInfo.backHour){cov_12ivzobf6().b[3][0]++;const hourInMonthPx=(cov_12ivzobf6().s[16]++,columnWidth/168);return cov_12ivzobf6().s[17]++,pxUntil*columnWidth+unitAboveSpanInPx+hourInMonthPx}if(cov_12ivzobf6().b[3][1]++,cov_12ivzobf6().s[18]++,hourInfo.nextHour){cov_12ivzobf6().b[4][0]++;const hourInMonthPx=(cov_12ivzobf6().s[19]++,columnWidth/168);return cov_12ivzobf6().s[20]++,pxUntil*columnWidth+unitAboveSpanInPx-hourInMonthPx}return cov_12ivzobf6().b[4][1]++,cov_12ivzobf6().s[21]++,pxUntil*columnWidth+unitAboveSpanInPx}if(cov_12ivzobf6().b[1][1]++,cov_12ivzobf6().s[22]++,"day"===unitAbove){if(cov_12ivzobf6().b[5][0]++,cov_12ivzobf6().s[23]++,hourInfo.backHour)return cov_12ivzobf6().b[6][0]++,cov_12ivzobf6().s[24]++,index*unitAboveSpanInPx+columnWidth/sizeInUnits;if(cov_12ivzobf6().b[6][1]++,cov_12ivzobf6().s[25]++,hourInfo.nextHour)return cov_12ivzobf6().b[7][0]++,cov_12ivzobf6().s[26]++,index*unitAboveSpanInPx-columnWidth/sizeInUnits;cov_12ivzobf6().b[7][1]++}else cov_12ivzobf6().b[5][1]++;if(cov_12ivzobf6().s[27]++,"week"===unitAbove){if(cov_12ivzobf6().b[8][0]++,cov_12ivzobf6().s[28]++,hourInfo.backHour)return cov_12ivzobf6().b[9][0]++,cov_12ivzobf6().s[29]++,index*unitAboveSpanInPx+columnWidth/24;if(cov_12ivzobf6().b[9][1]++,cov_12ivzobf6().s[30]++,hourInfo.nextHour)return cov_12ivzobf6().b[10][0]++,cov_12ivzobf6().s[31]++,index*unitAboveSpanInPx-columnWidth/24;cov_12ivzobf6().b[10][1]++}else cov_12ivzobf6().b[8][1]++;return cov_12ivzobf6().s[32]++,index*unitAboveSpanInPx}),[index,unitAboveSpanInPx,columnWidth,sizeInUnits,dayInfo,unitAbove,hourInfo])),yPos=(cov_12ivzobf6().s[33]++,(0,react.useMemo)((()=>(cov_12ivzobf6().f[6]++,cov_12ivzobf6().s[34]++,.3*rowHeight)),[rowHeight])),xPosLabel=(cov_12ivzobf6().s[35]++,(0,react.useMemo)((()=>{if(cov_12ivzobf6().f[7]++,cov_12ivzobf6().s[36]++,"month"===unitAbove)return cov_12ivzobf6().b[11][0]++,cov_12ivzobf6().s[37]++,xPos-unitAboveSpanInPx;if(cov_12ivzobf6().b[11][1]++,cov_12ivzobf6().s[38]++,"day"===unitAbove){if(cov_12ivzobf6().b[12][0]++,cov_12ivzobf6().s[39]++,hourInfo.backHour)return cov_12ivzobf6().b[13][0]++,cov_12ivzobf6().s[40]++,index*unitAboveSpanInPx+columnWidth/sizeInUnits;if(cov_12ivzobf6().b[13][1]++,cov_12ivzobf6().s[41]++,hourInfo.nextHour)return cov_12ivzobf6().b[14][0]++,cov_12ivzobf6().s[42]++,index*unitAboveSpanInPx-columnWidth/sizeInUnits;cov_12ivzobf6().b[14][1]++}else cov_12ivzobf6().b[12][1]++;return cov_12ivzobf6().s[43]++,index*unitAboveSpanInPx}),[xPos,unitAboveSpanInPx,unitAbove,index,columnWidth,sizeInUnits,hourInfo])),stroke=(cov_12ivzobf6().s[44]++,(0,react.useMemo)((()=>(cov_12ivzobf6().f[8]++,cov_12ivzobf6().s[45]++,"black"===themeColor?(cov_12ivzobf6().b[15][0]++,cov_12ivzobf6().s[46]++,theme._N):(cov_12ivzobf6().b[15][1]++,cov_12ivzobf6().s[47]++,theme.MK))),[themeColor]));return cov_12ivzobf6().s[48]++,react.createElement(_konva.zT,{key:`timeslot-${index}`},react.createElement(_konva.mQ,{x:xPos,y:0,points:points,stroke:stroke,strokeWidth:1}),react.createElement(_konva.ty,{align:"center",fill:themeColor,x:xPosLabel,y:yPos-8,text:cellLabel,width:unitAboveSpanInPx}))};try{CellGroup.displayName="CellGroup",CellGroup.__docgenInfo={description:"",displayName:"CellGroup",props:{column:{defaultValue:null,description:"",name:"column",required:!0,type:{name:"Interval<boolean>"}},index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},dayInfo:{defaultValue:null,description:"",name:"dayInfo",required:!1,type:{name:"{ thisMonth?: number; untilNow?: number; } | undefined"}},hourInfo:{defaultValue:null,description:"",name:"hourInfo",required:!1,type:{name:"{ backHour?: boolean; nextHour?: boolean; } | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/grid/CellGroup/index.tsx#CellGroup"]={docgenInfo:CellGroup.__docgenInfo,name:"CellGroup",path:"src/grid/CellGroup/index.tsx#CellGroup"})}catch(__react_docgen_typescript_loader_error){}function cov_2d7dtjickq(){var path="/home/runner/work/konva-timeline/konva-timeline/src/grid/Cells/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/grid/Cells/index.tsx",statementMap:{0:{start:{line:7,column:18},end:{line:46,column:1}},1:{start:{line:17,column:6},end:{line:17,column:26}},2:{start:{line:18,column:13},end:{line:18,column:72}},3:{start:{line:18,column:27},end:{line:18,column:59}},4:{start:{line:19,column:18},end:{line:19,column:132}},5:{start:{line:19,column:32},end:{line:19,column:91}},6:{start:{line:20,column:24},end:{line:20,column:102}},7:{start:{line:20,column:38},end:{line:20,column:78}},8:{start:{line:21,column:27},end:{line:21,column:109}},9:{start:{line:21,column:41},end:{line:21,column:83}},10:{start:{line:22,column:25},end:{line:22,column:157}},11:{start:{line:22,column:39},end:{line:22,column:124}},12:{start:{line:23,column:23},end:{line:23,column:178}},13:{start:{line:23,column:37},end:{line:23,column:145}},14:{start:{line:24,column:21},end:{line:29,column:25}},15:{start:{line:25,column:4},end:{line:27,column:5}},16:{start:{line:26,column:6},end:{line:26,column:16}},17:{start:{line:28,column:4},end:{line:28,column:14}},18:{start:{line:30,column:33},end:{line:30,column:231}},19:{start:{line:30,column:47},end:{line:30,column:150}},20:{start:{line:31,column:2},end:{line:45,column:7}},21:{start:{line:32,column:4},end:{line:38,column:7}},22:{start:{line:39,column:60},end:{line:45,column:4}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:7,column:18},end:{line:7,column:19}},loc:{start:{line:9,column:6},end:{line:46,column:1}},line:9},1:{name:"(anonymous_1)",decl:{start:{line:18,column:21},end:{line:18,column:22}},loc:{start:{line:18,column:27},end:{line:18,column:59}},line:18},2:{name:"(anonymous_2)",decl:{start:{line:19,column:26},end:{line:19,column:27}},loc:{start:{line:19,column:32},end:{line:19,column:91}},line:19},3:{name:"(anonymous_3)",decl:{start:{line:20,column:32},end:{line:20,column:33}},loc:{start:{line:20,column:38},end:{line:20,column:78}},line:20},4:{name:"(anonymous_4)",decl:{start:{line:21,column:35},end:{line:21,column:36}},loc:{start:{line:21,column:41},end:{line:21,column:83}},line:21},5:{name:"(anonymous_5)",decl:{start:{line:22,column:33},end:{line:22,column:34}},loc:{start:{line:22,column:39},end:{line:22,column:124}},line:22},6:{name:"(anonymous_6)",decl:{start:{line:23,column:31},end:{line:23,column:32}},loc:{start:{line:23,column:37},end:{line:23,column:145}},line:23},7:{name:"(anonymous_7)",decl:{start:{line:24,column:29},end:{line:24,column:30}},loc:{start:{line:24,column:35},end:{line:29,column:3}},line:24},8:{name:"(anonymous_8)",decl:{start:{line:30,column:41},end:{line:30,column:42}},loc:{start:{line:30,column:47},end:{line:30,column:150}},line:30},9:{name:"(anonymous_9)",decl:{start:{line:31,column:87},end:{line:31,column:88}},loc:{start:{line:31,column:106},end:{line:39,column:3}},line:31},10:{name:"(anonymous_10)",decl:{start:{line:39,column:28},end:{line:39,column:29}},loc:{start:{line:39,column:60},end:{line:45,column:4}},line:39}},branchMap:{0:{loc:{start:{line:22,column:39},end:{line:22,column:124}},type:"cond-expr",locations:[{start:{line:22,column:72},end:{line:22,column:117}},{start:{line:22,column:120},end:{line:22,column:124}}],line:22},1:{loc:{start:{line:23,column:37},end:{line:23,column:145}},type:"cond-expr",locations:[{start:{line:23,column:70},end:{line:23,column:138}},{start:{line:23,column:141},end:{line:23,column:145}}],line:23},2:{loc:{start:{line:25,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:25,column:4},end:{line:27,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:25}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0},b:{0:[0,0],1:[0,0],2:[0,0]},inputSourceMap:{version:3,names:["React","memo","useMemo","KonvaGroup","useTimelineContext","getAboveTimeBlocksVisible","getDaysNumberOfMonths","getTimeBlocksTzInfo","GridCell","GridCellGroup","GridCells","height","interval","aboveTimeBlocks","visibleTimeBlocks","resolution","unitAbove","tz","start","toISO","slice","dayInfo","aboveHourInfo","visibileHourInfo","startUnitAbove","length","startOf","endUnitAbove","end","endOf","arrayIndex","aboveTimeBlocksVisible","createElement","map","column","index","key","hourInfo"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/grid/Cells/index.tsx"],sourcesContent:['import React, { memo, useMemo } from "react";\n\nimport { KonvaGroup } from "../../@konva";\nimport { useTimelineContext } from "../../timeline/TimelineContext";\nimport { getAboveTimeBlocksVisible, getDaysNumberOfMonths, getTimeBlocksTzInfo } from "../../utils/timeBlockArray";\nimport GridCell from "../Cell";\nimport GridCellGroup from "../CellGroup";\n\ninterface GridCellsProps {\n  height: number;\n}\n\nconst GridCells = ({ height }: GridCellsProps) => {\n  const {\n    interval,\n    aboveTimeBlocks,\n    visibleTimeBlocks,\n    resolution: { unitAbove },\n  } = useTimelineContext();\n\n  const tz = useMemo(() => interval.start!.toISO()!.slice(-6), [interval]);\n\n  const dayInfo = useMemo(\n    () => getDaysNumberOfMonths(unitAbove, aboveTimeBlocks, interval),\n    [unitAbove, aboveTimeBlocks, interval]\n  );\n\n  const aboveHourInfo = useMemo(() => getTimeBlocksTzInfo(aboveTimeBlocks, tz), [tz, aboveTimeBlocks]);\n  const visibileHourInfo = useMemo(() => getTimeBlocksTzInfo(visibleTimeBlocks, tz), [tz, visibleTimeBlocks]);\n\n  const startUnitAbove = useMemo(\n    () => (visibleTimeBlocks.length !== 0 ? visibleTimeBlocks[0].start!.startOf(unitAbove) : null),\n    [visibleTimeBlocks, unitAbove]\n  );\n  const endUnitAbove = useMemo(\n    () =>\n      visibleTimeBlocks.length !== 0 ? visibleTimeBlocks[visibleTimeBlocks.length - 1].end!.endOf(unitAbove) : null,\n    [visibleTimeBlocks, unitAbove]\n  );\n\n  const arrayIndex: number[] = useMemo(() => {\n    if (visibleTimeBlocks) {\n      return [];\n    }\n    return [];\n  }, [visibleTimeBlocks]);\n\n  const aboveTimeBlocksVisible = useMemo(\n    () => getAboveTimeBlocksVisible(visibleTimeBlocks, aboveTimeBlocks, startUnitAbove, endUnitAbove, arrayIndex),\n    [visibleTimeBlocks, aboveTimeBlocks, startUnitAbove, endUnitAbove, arrayIndex]\n  );\n  return (\n    <KonvaGroup>\n      {aboveTimeBlocksVisible.map((column, index) => {\n        return (\n          <GridCellGroup\n            key={`cell-group-${index}`}\n            column={column}\n            index={arrayIndex[index]}\n            dayInfo={dayInfo[arrayIndex[index]]}\n            hourInfo={aboveHourInfo[arrayIndex[index]]}\n          />\n        );\n      })}\n      {visibleTimeBlocks.map((column, index) => (\n        <GridCell\n          key={`cell-${index}`}\n          column={column}\n          height={height}\n          index={index}\n          hourInfo={visibileHourInfo[index]}\n        />\n      ))}\n    </KonvaGroup>\n  );\n};\n\nexport default memo(GridCells);\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a34d65313add46564cba5be60f937ec0b2d2cdff"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"a34d65313add46564cba5be60f937ec0b2d2cdff"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_2d7dtjickq=function(){return actualCoverage},actualCoverage}cov_2d7dtjickq(),cov_2d7dtjickq().s[0]++;const GridCells=({height:height})=>{cov_2d7dtjickq().f[0]++;const{interval:interval,aboveTimeBlocks:aboveTimeBlocks,visibleTimeBlocks:visibleTimeBlocks,resolution:{unitAbove:unitAbove}}=(cov_2d7dtjickq().s[1]++,(0,TimelineContext._)()),tz=(cov_2d7dtjickq().s[2]++,(0,react.useMemo)((()=>(cov_2d7dtjickq().f[1]++,cov_2d7dtjickq().s[3]++,interval.start.toISO().slice(-6))),[interval])),dayInfo=(cov_2d7dtjickq().s[4]++,(0,react.useMemo)((()=>(cov_2d7dtjickq().f[2]++,cov_2d7dtjickq().s[5]++,((unitAbove,aboveTimeBlocks,interval)=>{if(cov_1h1u7yg2ci().f[2]++,cov_1h1u7yg2ci().s[15]++,"month"===unitAbove){cov_1h1u7yg2ci().b[3][0]++;const dayInfo=(cov_1h1u7yg2ci().s[16]++,[]);return cov_1h1u7yg2ci().s[17]++,aboveTimeBlocks.forEach(((column,index)=>{cov_1h1u7yg2ci().f[3]++;const month=(cov_1h1u7yg2ci().s[18]++,(0,time_resolution.tj)(column)),year=(cov_1h1u7yg2ci().s[19]++,(0,time_resolution.Cp)(column)),currentMonthDays=(cov_1h1u7yg2ci().s[20]++,(0,time_resolution.L3)(Number(month),Number(year)));if(cov_1h1u7yg2ci().s[21]++,0===index){cov_1h1u7yg2ci().b[4][0]++;const startDay=(cov_1h1u7yg2ci().s[22]++,(0,time_resolution.aS)(interval.start)),daysToMonthEnd=(cov_1h1u7yg2ci().s[23]++,currentMonthDays-Number(startDay)+1);return cov_1h1u7yg2ci().s[24]++,dayInfo.push({thisMonth:daysToMonthEnd,untilNow:daysToMonthEnd}),void cov_1h1u7yg2ci().s[25]++}cov_1h1u7yg2ci().b[4][1]++;const n=(cov_1h1u7yg2ci().s[26]++,dayInfo[index-1].untilNow+currentMonthDays);cov_1h1u7yg2ci().s[27]++,dayInfo.push({thisMonth:currentMonthDays,untilNow:n})})),cov_1h1u7yg2ci().s[28]++,dayInfo}return cov_1h1u7yg2ci().b[3][1]++,cov_1h1u7yg2ci().s[29]++,[]})(unitAbove,aboveTimeBlocks,interval))),[unitAbove,aboveTimeBlocks,interval])),aboveHourInfo=(cov_2d7dtjickq().s[6]++,(0,react.useMemo)((()=>(cov_2d7dtjickq().f[3]++,cov_2d7dtjickq().s[7]++,getTimeBlocksTzInfo(aboveTimeBlocks,tz))),[tz,aboveTimeBlocks])),visibileHourInfo=(cov_2d7dtjickq().s[8]++,(0,react.useMemo)((()=>(cov_2d7dtjickq().f[4]++,cov_2d7dtjickq().s[9]++,getTimeBlocksTzInfo(visibleTimeBlocks,tz))),[tz,visibleTimeBlocks])),startUnitAbove=(cov_2d7dtjickq().s[10]++,(0,react.useMemo)((()=>(cov_2d7dtjickq().f[5]++,cov_2d7dtjickq().s[11]++,0!==visibleTimeBlocks.length?(cov_2d7dtjickq().b[0][0]++,visibleTimeBlocks[0].start.startOf(unitAbove)):(cov_2d7dtjickq().b[0][1]++,null))),[visibleTimeBlocks,unitAbove])),endUnitAbove=(cov_2d7dtjickq().s[12]++,(0,react.useMemo)((()=>(cov_2d7dtjickq().f[6]++,cov_2d7dtjickq().s[13]++,0!==visibleTimeBlocks.length?(cov_2d7dtjickq().b[1][0]++,visibleTimeBlocks[visibleTimeBlocks.length-1].end.endOf(unitAbove)):(cov_2d7dtjickq().b[1][1]++,null))),[visibleTimeBlocks,unitAbove])),arrayIndex=(cov_2d7dtjickq().s[14]++,(0,react.useMemo)((()=>(cov_2d7dtjickq().f[7]++,cov_2d7dtjickq().s[15]++,visibleTimeBlocks?(cov_2d7dtjickq().b[2][0]++,cov_2d7dtjickq().s[16]++,[]):(cov_2d7dtjickq().b[2][1]++,cov_2d7dtjickq().s[17]++,[]))),[visibleTimeBlocks])),aboveTimeBlocksVisible=(cov_2d7dtjickq().s[18]++,(0,react.useMemo)((()=>(cov_2d7dtjickq().f[8]++,cov_2d7dtjickq().s[19]++,((visibleTimeBlocks,aboveTimeBlocks,startUnitAbove,endUnitAbove,arrayIndex)=>{if(cov_1h1u7yg2ci().f[4]++,cov_1h1u7yg2ci().s[31]++,0!==visibleTimeBlocks.length){cov_1h1u7yg2ci().b[5][0]++;const blocksArray=(cov_1h1u7yg2ci().s[32]++,[]);return cov_1h1u7yg2ci().s[33]++,aboveTimeBlocks.forEach(((i,index)=>{cov_1h1u7yg2ci().f[5]++;const startMillis=(cov_1h1u7yg2ci().s[34]++,i.start.toMillis()),endMillis=(cov_1h1u7yg2ci().s[35]++,i.end.toMillis());return cov_1h1u7yg2ci().s[36]++,cov_1h1u7yg2ci().b[7][0]++,endMillis>startUnitAbove.toMillis()&&(cov_1h1u7yg2ci().b[7][1]++,endMillis<=endUnitAbove.toMillis())?(cov_1h1u7yg2ci().b[6][0]++,cov_1h1u7yg2ci().s[37]++,arrayIndex.push(index),cov_1h1u7yg2ci().s[38]++,blocksArray.push(i),void cov_1h1u7yg2ci().s[39]++):(cov_1h1u7yg2ci().b[6][1]++,cov_1h1u7yg2ci().s[40]++,cov_1h1u7yg2ci().b[9][0]++,startMillis>=startUnitAbove.toMillis()&&(cov_1h1u7yg2ci().b[9][1]++,startMillis<endUnitAbove.toMillis())?(cov_1h1u7yg2ci().b[8][0]++,cov_1h1u7yg2ci().s[41]++,arrayIndex.push(index),cov_1h1u7yg2ci().s[42]++,blocksArray.push(i),void cov_1h1u7yg2ci().s[43]++):void cov_1h1u7yg2ci().b[8][1]++)})),cov_1h1u7yg2ci().s[44]++,blocksArray}return cov_1h1u7yg2ci().b[5][1]++,cov_1h1u7yg2ci().s[45]++,[]})(visibleTimeBlocks,aboveTimeBlocks,startUnitAbove,endUnitAbove,arrayIndex))),[visibleTimeBlocks,aboveTimeBlocks,startUnitAbove,endUnitAbove,arrayIndex]));return cov_2d7dtjickq().s[20]++,react.createElement(_konva.zT,null,aboveTimeBlocksVisible.map(((column,index)=>(cov_2d7dtjickq().f[9]++,cov_2d7dtjickq().s[21]++,react.createElement(grid_CellGroup,{key:`cell-group-${index}`,column:column,index:arrayIndex[index],dayInfo:dayInfo[arrayIndex[index]],hourInfo:aboveHourInfo[arrayIndex[index]]})))),visibleTimeBlocks.map(((column,index)=>(cov_2d7dtjickq().f[10]++,cov_2d7dtjickq().s[22]++,react.createElement(Cell,{key:`cell-${index}`,column:column,height:height,index:index,hourInfo:visibileHourInfo[index]})))))};var Cells=(0,react.memo)(GridCells);try{GridCells.displayName="GridCells",GridCells.__docgenInfo={description:"",displayName:"GridCells",props:{height:{defaultValue:null,description:"",name:"height",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/grid/Cells/index.tsx#GridCells"]={docgenInfo:GridCells.__docgenInfo,name:"GridCells",path:"src/grid/Cells/index.tsx#GridCells"})}catch(__react_docgen_typescript_loader_error){}function cov_2fpcw3lv4z(){var path="/home/runner/work/konva-timeline/konva-timeline/src/grid/Row/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/grid/Row/index.tsx",statementMap:{0:{start:{line:5,column:16},end:{line:41,column:1}},1:{start:{line:17,column:6},end:{line:17,column:26}},2:{start:{line:18,column:15},end:{line:18,column:73}},3:{start:{line:18,column:29},end:{line:18,column:52}},4:{start:{line:19,column:15},end:{line:24,column:25}},5:{start:{line:20,column:4},end:{line:22,column:5}},6:{start:{line:21,column:6},end:{line:21,column:72}},7:{start:{line:23,column:4},end:{line:23,column:69}},8:{start:{line:25,column:17},end:{line:30,column:18}},9:{start:{line:26,column:4},end:{line:28,column:5}},10:{start:{line:27,column:6},end:{line:27,column:39}},11:{start:{line:29,column:4},end:{line:29,column:36}},12:{start:{line:31,column:2},end:{line:40,column:6}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:5,column:16},end:{line:5,column:17}},loc:{start:{line:7,column:6},end:{line:41,column:1}},line:7},1:{name:"(anonymous_1)",decl:{start:{line:18,column:23},end:{line:18,column:24}},loc:{start:{line:18,column:29},end:{line:18,column:52}},line:18},2:{name:"(anonymous_2)",decl:{start:{line:19,column:23},end:{line:19,column:24}},loc:{start:{line:19,column:29},end:{line:24,column:3}},line:19},3:{name:"(anonymous_3)",decl:{start:{line:25,column:25},end:{line:25,column:26}},loc:{start:{line:25,column:31},end:{line:30,column:3}},line:25}},branchMap:{0:{loc:{start:{line:20,column:4},end:{line:22,column:5}},type:"if",locations:[{start:{line:20,column:4},end:{line:22,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:20},1:{loc:{start:{line:21,column:13},end:{line:21,column:71}},type:"cond-expr",locations:[{start:{line:21,column:31},end:{line:21,column:53}},{start:{line:21,column:56},end:{line:21,column:71}}],line:21},2:{loc:{start:{line:23,column:11},end:{line:23,column:68}},type:"cond-expr",locations:[{start:{line:23,column:29},end:{line:23,column:50}},{start:{line:23,column:53},end:{line:23,column:68}}],line:23},3:{loc:{start:{line:26,column:4},end:{line:28,column:5}},type:"if",locations:[{start:{line:26,column:4},end:{line:28,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:26}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0},f:{0:0,1:0,2:0,3:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0]},inputSourceMap:{version:3,names:["React","memo","useMemo","KonvaGroup","KonvaLine","KonvaRect","useTimelineContext","ALTERNATIVE_ROW","DEFAULT_ROW_DARK_MODE","DEFAULT_ROW_LIGHT_MODE","DEFAULT_STROKE_DARK_MODE","DEFAULT_STROKE_LIGHT_MODE","GridRow","index","drawRange","start","drawRangeStart","end","drawRangeEnd","rowHeight","theme","color","themeColor","yPos","fill","stroke","createElement","points","x","y","width","height"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/grid/Row/index.tsx"],sourcesContent:['import React, { memo, useMemo } from "react";\n\nimport { KonvaGroup, KonvaLine, KonvaRect } from "../../@konva";\nimport { useTimelineContext } from "../../timeline/TimelineContext";\nimport {\n  ALTERNATIVE_ROW,\n  DEFAULT_ROW_DARK_MODE,\n  DEFAULT_ROW_LIGHT_MODE,\n  DEFAULT_STROKE_DARK_MODE,\n  DEFAULT_STROKE_LIGHT_MODE,\n} from "../../utils/theme";\n\ninterface GridRowProps {\n  index: number;\n}\n\nconst GridRow = ({ index }: GridRowProps) => {\n  const {\n    drawRange: { start: drawRangeStart, end: drawRangeEnd },\n    rowHeight,\n    theme: { color: themeColor },\n  } = useTimelineContext();\n\n  const yPos = useMemo(() => rowHeight * (index + 1), [index, rowHeight]);\n\n  const fill = useMemo(() => {\n    if (themeColor === "black") {\n      return index % 2 === 0 ? DEFAULT_ROW_LIGHT_MODE : ALTERNATIVE_ROW;\n    }\n    return index % 2 === 0 ? DEFAULT_ROW_DARK_MODE : ALTERNATIVE_ROW;\n  }, [index, themeColor]);\n\n  const stroke = useMemo(() => {\n    if (themeColor === "black") {\n      return DEFAULT_STROKE_LIGHT_MODE;\n    }\n    return DEFAULT_STROKE_DARK_MODE;\n  }, [themeColor]);\n\n  return (\n    <KonvaGroup>\n      <KonvaLine points={[drawRangeStart, yPos, drawRangeEnd, yPos]} stroke={stroke} />\n      <KonvaRect x={drawRangeStart} y={yPos} width={drawRangeEnd - drawRangeStart} height={rowHeight} fill={fill} />\n    </KonvaGroup>\n  );\n};\n\nexport default memo(GridRow);\n'],mappings:"AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,OAAO,QAAQ,OAAO;AAE5C,SAASC,UAAU,EAAEC,SAAS,EAAEC,SAAS,QAAQ,cAAc;AAC/D,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SACEC,eAAe,EACfC,qBAAqB,EACrBC,sBAAsB,EACtBC,wBAAwB,EACxBC,yBAAyB,QACpB,mBAAmB;AAM1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAoB,CAAC,KAAK;EAC3C,MAAM;IACJC,SAAS,EAAE;MAAEC,KAAK,EAAEC,cAAc;MAAEC,GAAG,EAAEC;IAAa,CAAC;IACvDC,SAAS;IACTC,KAAK,EAAE;MAAEC,KAAK,EAAEC;IAAW;EAC7B,CAAC,GAAGhB,kBAAkB,CAAC,CAAC;EAExB,MAAMiB,IAAI,GAAGrB,OAAO,CAAC,MAAMiB,SAAS,IAAIN,KAAK,GAAG,CAAC,CAAC,EAAE,CAACA,KAAK,EAAEM,SAAS,CAAC,CAAC;EAEvE,MAAMK,IAAI,GAAGtB,OAAO,CAAC,MAAM;IACzB,IAAIoB,UAAU,KAAK,OAAO,EAAE;MAC1B,OAAOT,KAAK,GAAG,CAAC,KAAK,CAAC,GAAGJ,sBAAsB,GAAGF,eAAe;IACnE;IACA,OAAOM,KAAK,GAAG,CAAC,KAAK,CAAC,GAAGL,qBAAqB,GAAGD,eAAe;EAClE,CAAC,EAAE,CAACM,KAAK,EAAES,UAAU,CAAC,CAAC;EAEvB,MAAMG,MAAM,GAAGvB,OAAO,CAAC,MAAM;IAC3B,IAAIoB,UAAU,KAAK,OAAO,EAAE;MAC1B,OAAOX,yBAAyB;IAClC;IACA,OAAOD,wBAAwB;EACjC,CAAC,EAAE,CAACY,UAAU,CAAC,CAAC;EAEhB,oBACEtB,KAAA,CAAA0B,aAAA,CAACvB,UAAU,qBACTH,KAAA,CAAA0B,aAAA,CAACtB,SAAS;IAACuB,MAAM,EAAE,CAACX,cAAc,EAAEO,IAAI,EAAEL,YAAY,EAAEK,IAAI,CAAE;IAACE,MAAM,EAAEA;EAAO,CAAE,CAAC,eACjFzB,KAAA,CAAA0B,aAAA,CAACrB,SAAS;IAACuB,CAAC,EAAEZ,cAAe;IAACa,CAAC,EAAEN,IAAK;IAACO,KAAK,EAAEZ,YAAY,GAAGF,cAAe;IAACe,MAAM,EAAEZ,SAAU;IAACK,IAAI,EAAEA;EAAK,CAAE,CACnG,CAAC;AAEjB,CAAC;AAED,4BAAevB,IAAI,CAACW,OAAO,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"65c01a3c93b3da9142ec3330fb930255064d8360"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"65c01a3c93b3da9142ec3330fb930255064d8360"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_2fpcw3lv4z=function(){return actualCoverage},actualCoverage}cov_2fpcw3lv4z(),cov_2fpcw3lv4z().s[0]++;const GridRow=({index:index})=>{cov_2fpcw3lv4z().f[0]++;const{drawRange:{start:drawRangeStart,end:drawRangeEnd},rowHeight:rowHeight,theme:{color:themeColor}}=(cov_2fpcw3lv4z().s[1]++,(0,TimelineContext._)()),yPos=(cov_2fpcw3lv4z().s[2]++,(0,react.useMemo)((()=>(cov_2fpcw3lv4z().f[1]++,cov_2fpcw3lv4z().s[3]++,rowHeight*(index+1))),[index,rowHeight])),fill=(cov_2fpcw3lv4z().s[4]++,(0,react.useMemo)((()=>(cov_2fpcw3lv4z().f[2]++,cov_2fpcw3lv4z().s[5]++,"black"===themeColor?(cov_2fpcw3lv4z().b[0][0]++,cov_2fpcw3lv4z().s[6]++,index%2==0?(cov_2fpcw3lv4z().b[1][0]++,theme.GY):(cov_2fpcw3lv4z().b[1][1]++,theme.xV)):(cov_2fpcw3lv4z().b[0][1]++,cov_2fpcw3lv4z().s[7]++,index%2==0?(cov_2fpcw3lv4z().b[2][0]++,theme.yk):(cov_2fpcw3lv4z().b[2][1]++,theme.xV)))),[index,themeColor])),stroke=(cov_2fpcw3lv4z().s[8]++,(0,react.useMemo)((()=>(cov_2fpcw3lv4z().f[3]++,cov_2fpcw3lv4z().s[9]++,"black"===themeColor?(cov_2fpcw3lv4z().b[3][0]++,cov_2fpcw3lv4z().s[10]++,theme._N):(cov_2fpcw3lv4z().b[3][1]++,cov_2fpcw3lv4z().s[11]++,theme.MK))),[themeColor]));return cov_2fpcw3lv4z().s[12]++,react.createElement(_konva.zT,null,react.createElement(_konva.mQ,{points:[drawRangeStart,yPos,drawRangeEnd,yPos],stroke:stroke}),react.createElement(_konva.qm,{x:drawRangeStart,y:yPos,width:drawRangeEnd-drawRangeStart,height:rowHeight,fill:fill}))};var Row=(0,react.memo)(GridRow);try{GridRow.displayName="GridRow",GridRow.__docgenInfo={description:"",displayName:"GridRow",props:{index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/grid/Row/index.tsx#GridRow"]={docgenInfo:GridRow.__docgenInfo,name:"GridRow",path:"src/grid/Row/index.tsx#GridRow"})}catch(__react_docgen_typescript_loader_error){}function cov_1xnfipk9jc(){var path="/home/runner/work/konva-timeline/konva-timeline/src/grid/Rows/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"ccf370a22e0559b9ae6edfc55ad4a5354fe35d57"===coverage[path].hash||(coverage[path]={path:"/home/runner/work/konva-timeline/konva-timeline/src/grid/Rows/index.tsx",statementMap:{0:{start:{line:5,column:17},end:{line:15,column:1}},1:{start:{line:8,column:6},end:{line:8,column:26}},2:{start:{line:9,column:2},end:{line:14,column:7}},3:{start:{line:11,column:28},end:{line:14,column:4}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:5,column:17},end:{line:5,column:18}},loc:{start:{line:5,column:23},end:{line:15,column:1}},line:5},1:{name:"(anonymous_1)",decl:{start:{line:9,column:74},end:{line:9,column:75}},loc:{start:{line:11,column:28},end:{line:14,column:4}},line:11}},branchMap:{},s:{0:0,1:0,2:0,3:0},f:{0:0,1:0},b:{},inputSourceMap:{version:3,names:["React","memo","KonvaGroup","useTimelineContext","GridRow","GridRows","resources","createElement","map","id","index","key"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/grid/Rows/index.tsx"],sourcesContent:['import React, { memo } from "react";\n\nimport { KonvaGroup } from "../../@konva";\nimport { useTimelineContext } from "../../timeline/TimelineContext";\nimport GridRow from "../Row";\n\nconst GridRows = () => {\n  const { resources } = useTimelineContext();\n\n  return (\n    <KonvaGroup>\n      {resources.map(({ id }, index) => (\n        <GridRow key={`grid-row-line-${id}`} index={index} />\n      ))}\n    </KonvaGroup>\n  );\n};\n\nexport default memo(GridRows);\n'],mappings:"AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AAEnC,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,OAAOC,OAAO,MAAM,QAAQ;AAE5B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAM;IAAEC;EAAU,CAAC,GAAGH,kBAAkB,CAAC,CAAC;EAE1C,oBACEH,KAAA,CAAAO,aAAA,CAACL,UAAU,QACRI,SAAS,CAACE,GAAG,CAAC,CAAC;IAAEC;EAAG,CAAC,EAAEC,KAAK,kBAC3BV,KAAA,CAAAO,aAAA,CAACH,OAAO;IAACO,GAAG,EAAE,iBAAiBF,EAAE,EAAG;IAACC,KAAK,EAAEA;EAAM,CAAE,CACrD,CACS,CAAC;AAEjB,CAAC;AAED,4BAAeT,IAAI,CAACI,QAAQ,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ccf370a22e0559b9ae6edfc55ad4a5354fe35d57"});var actualCoverage=coverage[path];return cov_1xnfipk9jc=function(){return actualCoverage},actualCoverage}cov_1xnfipk9jc(),cov_1xnfipk9jc().s[0]++;const GridRows=()=>{cov_1xnfipk9jc().f[0]++;const{resources:resources}=(cov_1xnfipk9jc().s[1]++,(0,TimelineContext._)());return cov_1xnfipk9jc().s[2]++,react.createElement(_konva.zT,null,resources.map((({id:id},index)=>(cov_1xnfipk9jc().f[1]++,cov_1xnfipk9jc().s[3]++,react.createElement(Row,{key:`grid-row-line-${id}`,index:index})))))};var Rows=(0,react.memo)(GridRows);function cov_2q0pdsm8sy(){var path="/home/runner/work/konva-timeline/konva-timeline/src/grid/Layer/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"f864975df44cfa47336eba9f8ad77457dee7e4a9"===coverage[path].hash||(coverage[path]={path:"/home/runner/work/konva-timeline/konva-timeline/src/grid/Layer/index.tsx",statementMap:{0:{start:{line:5,column:18},end:{line:11,column:1}},1:{start:{line:8,column:2},end:{line:10,column:6}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:5,column:18},end:{line:5,column:19}},loc:{start:{line:7,column:6},end:{line:11,column:1}},line:7}},branchMap:{},s:{0:0,1:0},f:{0:0},b:{},inputSourceMap:{version:3,names:["React","memo","KonvaLayer","GridCells","GridRows","GridLayer","height","createElement"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/grid/Layer/index.tsx"],sourcesContent:['import React, { FC, memo } from "react";\n\nimport { KonvaLayer } from "../../@konva";\nimport GridCells from "../Cells";\nimport GridRows from "../Rows";\n\ninterface GridLayerProps {\n  height: number;\n}\n\nconst GridLayer: FC<GridLayerProps> = ({ height }) => {\n  return (\n    <KonvaLayer>\n      <GridRows />\n      <GridCells height={height} />\n    </KonvaLayer>\n  );\n};\n\nexport default memo(GridLayer);\n'],mappings:"AAAA,OAAOA,KAAK,IAAQC,IAAI,QAAQ,OAAO;AAEvC,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,SAAS,MAAM,UAAU;AAChC,OAAOC,QAAQ,MAAM,SAAS;AAM9B,MAAMC,SAA6B,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EACpD,oBACEN,KAAA,CAAAO,aAAA,CAACL,UAAU,qBACTF,KAAA,CAAAO,aAAA,CAACH,QAAQ,MAAE,CAAC,eACZJ,KAAA,CAAAO,aAAA,CAACJ,SAAS;IAACG,MAAM,EAAEA;EAAO,CAAE,CAClB,CAAC;AAEjB,CAAC;AAED,4BAAeL,IAAI,CAACI,SAAS,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f864975df44cfa47336eba9f8ad77457dee7e4a9"});var actualCoverage=coverage[path];return cov_2q0pdsm8sy=function(){return actualCoverage},actualCoverage}cov_2q0pdsm8sy(),cov_2q0pdsm8sy().s[0]++;const GridLayer=({height:height})=>(cov_2q0pdsm8sy().f[0]++,cov_2q0pdsm8sy().s[1]++,react.createElement(_konva.Fb,null,react.createElement(Rows,null),react.createElement(Cells,{height:height})));var grid_Layer=(0,react.memo)(GridLayer);try{Layer.displayName="Layer",Layer.__docgenInfo={description:"",displayName:"Layer",props:{height:{defaultValue:null,description:"",name:"height",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/grid/Layer/index.tsx#Layer"]={docgenInfo:Layer.__docgenInfo,name:"Layer",path:"src/grid/Layer/index.tsx#Layer"})}catch(__react_docgen_typescript_loader_error){}var components_Layer=__webpack_require__("./src/resources/components/Layer/index.tsx"),dimensions=__webpack_require__("./src/utils/dimensions.ts");function cov_29nymv8lzi(){var path="/home/runner/work/konva-timeline/konva-timeline/src/resources/components/SummaryHeader/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/resources/components/SummaryHeader/index.tsx",statementMap:{0:{start:{line:12,column:22},end:{line:84,column:1}},1:{start:{line:26,column:6},end:{line:26,column:26}},2:{start:{line:27,column:20},end:{line:27,column:101}},3:{start:{line:27,column:34},end:{line:27,column:73}},4:{start:{line:28,column:22},end:{line:28,column:74}},5:{start:{line:28,column:36},end:{line:28,column:53}},6:{start:{line:29,column:15},end:{line:34,column:25}},7:{start:{line:30,column:4},end:{line:32,column:5}},8:{start:{line:31,column:6},end:{line:31,column:72}},9:{start:{line:33,column:4},end:{line:33,column:69}},10:{start:{line:35,column:17},end:{line:40,column:18}},11:{start:{line:36,column:4},end:{line:38,column:5}},12:{start:{line:37,column:6},end:{line:37,column:39}},13:{start:{line:39,column:4},end:{line:39,column:36}},14:{start:{line:41,column:20},end:{line:53,column:41}},15:{start:{line:42,column:4},end:{line:44,column:5}},16:{start:{line:43,column:6},end:{line:43,column:18}},17:{start:{line:45,column:4},end:{line:47,column:5}},18:{start:{line:46,column:6},end:{line:46,column:62}},19:{start:{line:48,column:17},end:{line:48,column:47}},20:{start:{line:48,column:35},end:{line:48,column:46}},21:{start:{line:49,column:4},end:{line:51,column:5}},22:{start:{line:50,column:6},end:{line:50,column:18}},23:{start:{line:52,column:4},end:{line:52,column:22}},24:{start:{line:59,column:2},end:{line:83,column:7}},25:{start:{line:85,column:33},end:{line:85,column:46}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:12,column:22},end:{line:12,column:23}},loc:{start:{line:16,column:6},end:{line:84,column:1}},line:16},1:{name:"(anonymous_1)",decl:{start:{line:27,column:28},end:{line:27,column:29}},loc:{start:{line:27,column:34},end:{line:27,column:73}},line:27},2:{name:"(anonymous_2)",decl:{start:{line:28,column:30},end:{line:28,column:31}},loc:{start:{line:28,column:36},end:{line:28,column:53}},line:28},3:{name:"(anonymous_3)",decl:{start:{line:29,column:23},end:{line:29,column:24}},loc:{start:{line:29,column:29},end:{line:34,column:3}},line:29},4:{name:"(anonymous_4)",decl:{start:{line:35,column:25},end:{line:35,column:26}},loc:{start:{line:35,column:31},end:{line:40,column:3}},line:35},5:{name:"(anonymous_5)",decl:{start:{line:41,column:28},end:{line:41,column:29}},loc:{start:{line:41,column:34},end:{line:53,column:3}},line:41},6:{name:"(anonymous_6)",decl:{start:{line:48,column:30},end:{line:48,column:31}},loc:{start:{line:48,column:35},end:{line:48,column:46}},line:48}},branchMap:{0:{loc:{start:{line:14,column:2},end:{line:14,column:16}},type:"default-arg",locations:[{start:{line:14,column:11},end:{line:14,column:16}}],line:14},1:{loc:{start:{line:30,column:4},end:{line:32,column:5}},type:"if",locations:[{start:{line:30,column:4},end:{line:32,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:30},2:{loc:{start:{line:31,column:13},end:{line:31,column:71}},type:"cond-expr",locations:[{start:{line:31,column:31},end:{line:31,column:53}},{start:{line:31,column:56},end:{line:31,column:71}}],line:31},3:{loc:{start:{line:33,column:11},end:{line:33,column:68}},type:"cond-expr",locations:[{start:{line:33,column:29},end:{line:33,column:50}},{start:{line:33,column:53},end:{line:33,column:68}}],line:33},4:{loc:{start:{line:36,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:36,column:4},end:{line:38,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:36},5:{loc:{start:{line:42,column:4},end:{line:44,column:5}},type:"if",locations:[{start:{line:42,column:4},end:{line:44,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:42},6:{loc:{start:{line:45,column:4},end:{line:47,column:5}},type:"if",locations:[{start:{line:45,column:4},end:{line:47,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:45},7:{loc:{start:{line:46,column:13},end:{line:46,column:61}},type:"cond-expr",locations:[{start:{line:46,column:29},end:{line:46,column:42}},{start:{line:46,column:45},end:{line:46,column:61}}],line:46},8:{loc:{start:{line:49,column:4},end:{line:51,column:5}},type:"if",locations:[{start:{line:49,column:4},end:{line:51,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:49},9:{loc:{start:{line:74,column:6},end:{line:83,column:5}},type:"binary-expr",locations:[{start:{line:74,column:6},end:{line:74,column:13}},{start:{line:74,column:30},end:{line:83,column:5}}],line:74}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0},b:{0:[0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0]},inputSourceMap:{version:3,names:["React","memo","useMemo","Group","Rect","KonvaLine","KonvaRect","KonvaText","useTimelineContext","DEFAULT_TEXT_SIZE","ALTERNATIVE_ROW","DEFAULT_ROW_DARK_MODE","DEFAULT_ROW_LIGHT_MODE","DEFAULT_STROKE_DARK_MODE","DEFAULT_STROKE_LIGHT_MODE","SummaryHeader","index","isLast","id","rowHeight","theme","color","themeColor","summaryWidth","summary","summaryHeader","rowPoints","yCoordinate","fill","stroke","konvaText","label","data","find","i","createElement","y","width","height","fontSize","text","verticalAlign","align","ellipsis","wrap","points","x","SummaryHeaderDocs"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/resources/components/SummaryHeader/index.tsx"],sourcesContent:['import React, { memo, useMemo } from "react";\nimport { Group, Rect } from "react-konva";\n\nimport { KonvaLine, KonvaRect, KonvaText } from "../../../@konva";\nimport { useTimelineContext } from "../../../timeline/TimelineContext";\nimport { DEFAULT_TEXT_SIZE } from "../../../utils/dimensions";\nimport {\n  ALTERNATIVE_ROW,\n  DEFAULT_ROW_DARK_MODE,\n  DEFAULT_ROW_LIGHT_MODE,\n  DEFAULT_STROKE_DARK_MODE,\n  DEFAULT_STROKE_LIGHT_MODE,\n} from "../../../utils/theme";\n//import { RESOURCE_HEADER_WIDTH } from "../../utils/resources";\n\ninterface SummaryHeaderProps {\n  /**\n   * The row index of current resource\n   */\n  index: number;\n  /**\n   * Flag to identify if resource is last to be shown\n   */\n  isLast?: boolean;\n  /**\n   * The resource object to handle\n   */\n  id: string;\n}\n\n/**\n * This component renders a resource header. It displays a text (`resource.label`) and a delimiter line.\n */\nconst SummaryHeader = ({ index, isLast = false, id }: SummaryHeaderProps) => {\n  const {\n    rowHeight,\n    theme: { color: themeColor },\n    summaryWidth,\n    summary,\n    summaryHeader,\n    //onResourceClick,\n  } = useTimelineContext();\n\n  const rowPoints = useMemo(() => [0, rowHeight, summaryWidth, rowHeight], [rowHeight, summaryWidth]);\n\n  const yCoordinate = useMemo(() => rowHeight * index, [index, rowHeight]);\n\n  const fill = useMemo(() => {\n    if (themeColor === "black") {\n      return index % 2 === 0 ? DEFAULT_ROW_LIGHT_MODE : ALTERNATIVE_ROW;\n    }\n    return index % 2 === 0 ? DEFAULT_ROW_DARK_MODE : ALTERNATIVE_ROW;\n  }, [index, themeColor]);\n\n  const stroke = useMemo(() => {\n    if (themeColor === "black") {\n      return DEFAULT_STROKE_LIGHT_MODE;\n    }\n    return DEFAULT_STROKE_DARK_MODE;\n  }, [themeColor]);\n\n  const konvaText = useMemo(() => {\n    if (!summary) {\n      return "🚫";\n    }\n    if (index === 0) {\n      return summaryHeader ? summaryHeader : summary[0].label;\n    }\n    const data = summary.find((i) => i.id === id);\n    if (!data) {\n      return "🚫";\n    }\n    return data.label;\n  }, [summary, id, index, summaryHeader]);\n\n  /*const onClick = useCallback(\n    () => onResourceClick && !header && onResourceClick(resource),\n    [resource, header, onResourceClick]\n  );*/\n  return (\n    <Group y={yCoordinate}>\n      <Rect width={summaryWidth} height={rowHeight} />\n      <KonvaText\n        fill={themeColor}\n        fontSize={DEFAULT_TEXT_SIZE}\n        height={rowHeight}\n        width={summaryWidth}\n        text={konvaText}\n        verticalAlign="middle"\n        align="center"\n        ellipsis={true}\n        wrap="none"\n      />\n      {!isLast && (\n        <Group>\n          <KonvaLine points={rowPoints} stroke={stroke} />\n          <KonvaRect x={0} y={rowHeight} width={summaryWidth} height={rowHeight} fill={fill} />\n        </Group>\n      )}\n    </Group>\n  );\n};\n\nexport const SummaryHeaderDocs = SummaryHeader;\n\nexport default memo(SummaryHeader);\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c83cc6104f99ee0cfb682083e8456878f098a709"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"c83cc6104f99ee0cfb682083e8456878f098a709"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_29nymv8lzi=function(){return actualCoverage},actualCoverage}cov_29nymv8lzi(),cov_29nymv8lzi().s[0]++;const SummaryHeader=({index:index,isLast:isLast=(cov_29nymv8lzi().b[0][0]++,!1),id:id})=>{cov_29nymv8lzi().f[0]++;const{rowHeight:rowHeight,theme:{color:themeColor},summaryWidth:summaryWidth,summary:summary,summaryHeader:summaryHeader}=(cov_29nymv8lzi().s[1]++,(0,TimelineContext._)()),rowPoints=(cov_29nymv8lzi().s[2]++,(0,react.useMemo)((()=>(cov_29nymv8lzi().f[1]++,cov_29nymv8lzi().s[3]++,[0,rowHeight,summaryWidth,rowHeight])),[rowHeight,summaryWidth])),yCoordinate=(cov_29nymv8lzi().s[4]++,(0,react.useMemo)((()=>(cov_29nymv8lzi().f[2]++,cov_29nymv8lzi().s[5]++,rowHeight*index)),[index,rowHeight])),fill=(cov_29nymv8lzi().s[6]++,(0,react.useMemo)((()=>(cov_29nymv8lzi().f[3]++,cov_29nymv8lzi().s[7]++,"black"===themeColor?(cov_29nymv8lzi().b[1][0]++,cov_29nymv8lzi().s[8]++,index%2==0?(cov_29nymv8lzi().b[2][0]++,theme.GY):(cov_29nymv8lzi().b[2][1]++,theme.xV)):(cov_29nymv8lzi().b[1][1]++,cov_29nymv8lzi().s[9]++,index%2==0?(cov_29nymv8lzi().b[3][0]++,theme.yk):(cov_29nymv8lzi().b[3][1]++,theme.xV)))),[index,themeColor])),stroke=(cov_29nymv8lzi().s[10]++,(0,react.useMemo)((()=>(cov_29nymv8lzi().f[4]++,cov_29nymv8lzi().s[11]++,"black"===themeColor?(cov_29nymv8lzi().b[4][0]++,cov_29nymv8lzi().s[12]++,theme._N):(cov_29nymv8lzi().b[4][1]++,cov_29nymv8lzi().s[13]++,theme.MK))),[themeColor])),konvaText=(cov_29nymv8lzi().s[14]++,(0,react.useMemo)((()=>{if(cov_29nymv8lzi().f[5]++,cov_29nymv8lzi().s[15]++,!summary)return cov_29nymv8lzi().b[5][0]++,cov_29nymv8lzi().s[16]++,"🚫";if(cov_29nymv8lzi().b[5][1]++,cov_29nymv8lzi().s[17]++,0===index)return cov_29nymv8lzi().b[6][0]++,cov_29nymv8lzi().s[18]++,summaryHeader?(cov_29nymv8lzi().b[7][0]++,summaryHeader):(cov_29nymv8lzi().b[7][1]++,summary[0].label);cov_29nymv8lzi().b[6][1]++;const data=(cov_29nymv8lzi().s[19]++,summary.find((i=>(cov_29nymv8lzi().f[6]++,cov_29nymv8lzi().s[20]++,i.id===id))));return cov_29nymv8lzi().s[21]++,data?(cov_29nymv8lzi().b[8][1]++,cov_29nymv8lzi().s[23]++,data.label):(cov_29nymv8lzi().b[8][0]++,cov_29nymv8lzi().s[22]++,"🚫")}),[summary,id,index,summaryHeader]));return cov_29nymv8lzi().s[24]++,react.createElement(ReactKonva.YJ,{y:yCoordinate},react.createElement(ReactKonva.rw,{width:summaryWidth,height:rowHeight}),react.createElement(_konva.ty,{fill:themeColor,fontSize:dimensions.cL,height:rowHeight,width:summaryWidth,text:konvaText,verticalAlign:"middle",align:"center",ellipsis:!0,wrap:"none"}),(cov_29nymv8lzi().b[9][0]++,!isLast&&(cov_29nymv8lzi().b[9][1]++,react.createElement(ReactKonva.YJ,null,react.createElement(_konva.mQ,{points:rowPoints,stroke:stroke}),react.createElement(_konva.qm,{x:0,y:rowHeight,width:summaryWidth,height:rowHeight,fill:fill})))))},SummaryHeaderDocs=(cov_29nymv8lzi().s[25]++,SummaryHeader);var components_SummaryHeader=(0,react.memo)(SummaryHeader);try{SummaryHeaderDocs.displayName="SummaryHeaderDocs",SummaryHeaderDocs.__docgenInfo={description:"",displayName:"SummaryHeaderDocs",props:{index:{defaultValue:null,description:"The row index of current resource",name:"index",required:!0,type:{name:"number"}},isLast:{defaultValue:{value:"false"},description:"Flag to identify if resource is last to be shown",name:"isLast",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The resource object to handle",name:"id",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/resources/components/SummaryHeader/index.tsx#SummaryHeaderDocs"]={docgenInfo:SummaryHeaderDocs.__docgenInfo,name:"SummaryHeaderDocs",path:"src/resources/components/SummaryHeader/index.tsx#SummaryHeaderDocs"})}catch(__react_docgen_typescript_loader_error){}try{SummaryHeader.displayName="SummaryHeader",SummaryHeader.__docgenInfo={description:"This component renders a resource header. It displays a text (`resource.label`) and a delimiter line.",displayName:"SummaryHeader",props:{index:{defaultValue:null,description:"The row index of current resource",name:"index",required:!0,type:{name:"number"}},isLast:{defaultValue:{value:"false"},description:"Flag to identify if resource is last to be shown",name:"isLast",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The resource object to handle",name:"id",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/resources/components/SummaryHeader/index.tsx#SummaryHeader"]={docgenInfo:SummaryHeader.__docgenInfo,name:"SummaryHeader",path:"src/resources/components/SummaryHeader/index.tsx#SummaryHeader"})}catch(__react_docgen_typescript_loader_error){}function cov_tlq0isqao(){var path="/home/runner/work/konva-timeline/konva-timeline/src/resources/components/Summary/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"7b64d9271960cf864f1c93d4edf7c1d29fe15f36"===coverage[path].hash||(coverage[path]={path:"/home/runner/work/konva-timeline/konva-timeline/src/resources/components/Summary/index.tsx",statementMap:{0:{start:{line:8,column:21},end:{line:21,column:1}},1:{start:{line:11,column:6},end:{line:11,column:26}},2:{start:{line:12,column:2},end:{line:20,column:6}},3:{start:{line:13,column:19},end:{line:13,column:49}},4:{start:{line:14,column:4},end:{line:19,column:7}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:8,column:21},end:{line:8,column:22}},loc:{start:{line:8,column:27},end:{line:21,column:1}},line:8},1:{name:"(anonymous_1)",decl:{start:{line:12,column:69},end:{line:12,column:70}},loc:{start:{line:12,column:86},end:{line:20,column:3}},line:12}},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0},f:{0:0,1:0},b:{},inputSourceMap:{version:3,names:["React","Layer","useTimelineContext","SummaryHeader","SummaryLayer","resources","createElement","map","data","index","isLast","length","key","id"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/resources/components/Summary/index.tsx"],sourcesContent:['import React, { FC } from "react";\nimport { Layer } from "react-konva";\n\nimport { useTimelineContext } from "../../../timeline/TimelineContext";\nimport SummaryHeader from "../SummaryHeader";\n\ninterface ResourcesLayerProps {}\n\n/**\n * This component renders a Konva layer containing one header for each resource (`Summary`).\n */\nconst SummaryLayer: FC<ResourcesLayerProps> = () => {\n  const { resources } = useTimelineContext();\n\n  return (\n    <Layer>\n      {resources.map((data, index) => {\n        const isLast = index === resources.length - 1;\n\n        return <SummaryHeader key={`summary-${data.id}`} index={index} isLast={isLast} id={data.id} />;\n      })}\n    </Layer>\n  );\n};\n\nexport default SummaryLayer;\n'],mappings:"AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,SAASC,KAAK,QAAQ,aAAa;AAEnC,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,OAAOC,aAAa,MAAM,kBAAkB;AAI5C;AACA;AACA;AACA,MAAMC,YAAqC,GAAGA,CAAA,KAAM;EAClD,MAAM;IAAEC;EAAU,CAAC,GAAGH,kBAAkB,CAAC,CAAC;EAE1C,oBACEF,KAAA,CAAAM,aAAA,CAACL,KAAK,QACHI,SAAS,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC9B,MAAMC,MAAM,GAAGD,KAAK,KAAKJ,SAAS,CAACM,MAAM,GAAG,CAAC;IAE7C,oBAAOX,KAAA,CAAAM,aAAA,CAACH,aAAa;MAACS,GAAG,EAAE,WAAWJ,IAAI,CAACK,EAAE,EAAG;MAACJ,KAAK,EAAEA,KAAM;MAACC,MAAM,EAAEA,MAAO;MAACG,EAAE,EAAEL,IAAI,CAACK;IAAG,CAAE,CAAC;EAChG,CAAC,CACI,CAAC;AAEZ,CAAC;AAED,eAAeT,YAAY",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7b64d9271960cf864f1c93d4edf7c1d29fe15f36"});var actualCoverage=coverage[path];return cov_tlq0isqao=function(){return actualCoverage},actualCoverage}cov_tlq0isqao(),cov_tlq0isqao().s[0]++;var components_Summary=()=>{cov_tlq0isqao().f[0]++;const{resources:resources}=(cov_tlq0isqao().s[1]++,(0,TimelineContext._)());return cov_tlq0isqao().s[2]++,react.createElement(ReactKonva.Wd,null,resources.map(((data,index)=>{cov_tlq0isqao().f[1]++;const isLast=(cov_tlq0isqao().s[3]++,index===resources.length-1);return cov_tlq0isqao().s[4]++,react.createElement(components_SummaryHeader,{key:`summary-${data.id}`,index:index,isLast:isLast,id:data.id})})))};try{Summary.displayName="Summary",Summary.__docgenInfo={description:"This component renders a Konva layer containing one header for each resource (`Summary`).",displayName:"Summary",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/resources/components/Summary/index.tsx#Summary"]={docgenInfo:Summary.__docgenInfo,name:"Summary",path:"src/resources/components/Summary/index.tsx#Summary"})}catch(__react_docgen_typescript_loader_error){}var utils_resources=__webpack_require__("./src/resources/utils/resources.ts"),tasks_components_Layer=__webpack_require__("./src/tasks/components/Layer/index.tsx"),utils_tasks=__webpack_require__("./src/tasks/utils/tasks.ts");function cov_1gxa31mgsc(){var path="/home/runner/work/konva-timeline/konva-timeline/src/tasks/utils/line.ts",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"690cdfd90d67275e68c8a725bbc4af669a8762eb"===coverage[path].hash||(coverage[path]={path:"/home/runner/work/konva-timeline/konva-timeline/src/tasks/utils/line.ts",statementMap:{0:{start:{line:2,column:35},end:{line:2,column:36}},1:{start:{line:3,column:26},end:{line:3,column:44}},2:{start:{line:4,column:34},end:{line:4,column:52}},3:{start:{line:5,column:35},end:{line:5,column:50}},4:{start:{line:6,column:28},end:{line:6,column:31}},5:{start:{line:7,column:26},end:{line:7,column:27}},6:{start:{line:8,column:27},end:{line:8,column:29}},7:{start:{line:9,column:27},end:{line:27,column:1}},8:{start:{line:10,column:20},end:{line:10,column:22}},9:{start:{line:11,column:22},end:{line:11,column:24}},10:{start:{line:12,column:16},end:{line:12,column:59}},11:{start:{line:13,column:16},end:{line:13,column:49}},12:{start:{line:14,column:2},end:{line:22,column:5}},13:{start:{line:15,column:18},end:{line:15,column:95}},14:{start:{line:16,column:18},end:{line:16,column:46}},15:{start:{line:17,column:4},end:{line:20,column:7}},16:{start:{line:21,column:4},end:{line:21,column:27}},17:{start:{line:23,column:2},end:{line:26,column:4}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:9,column:27},end:{line:9,column:28}},loc:{start:{line:9,column:101},end:{line:27,column:1}},line:9},1:{name:"(anonymous_1)",decl:{start:{line:14,column:22},end:{line:14,column:23}},loc:{start:{line:14,column:27},end:{line:22,column:3}},line:14}},branchMap:{0:{loc:{start:{line:12,column:16},end:{line:12,column:59}},type:"cond-expr",locations:[{start:{line:12,column:34},end:{line:12,column:46}},{start:{line:12,column:49},end:{line:12,column:59}}],line:12},1:{loc:{start:{line:13,column:16},end:{line:13,column:49}},type:"cond-expr",locations:[{start:{line:13,column:34},end:{line:13,column:41}},{start:{line:13,column:44},end:{line:13,column:49}}],line:13}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0},f:{0:0,1:0},b:{0:[0,0],1:[0,0]},inputSourceMap:{version:3,names:["TASK_HEIGHT_OFFSET","CIRCLE_POINT_OFFSET","LINE_COLOR","CIRCLE_POINT_COLOR","CIRCLE_POINT_STROKE","LINE_TENSION","LINE_WIDTH","LINE_OFFSET","getLineData","connectLine","rowHeight","getTaskXCoordinate","getTaskYCoordinate","type","anchorArr","workLineArr","taskY","taskX","forEach","i","anchY","anchX","push","x","y","id"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/tasks/utils/line.ts"],sourcesContent:['import { LineData } from "../../timeline/TimelineContext";\n\nimport { TASK_HEIGHT_OFFSET } from "./tasks";\n\nexport type LineType = {\n  points: number[];\n};\n\nexport type AnchorPoint = { x: number; y: number };\n\nexport const CIRCLE_POINT_OFFSET = 4;\nexport const LINE_COLOR = "rgb(135,133,239)";\nexport const CIRCLE_POINT_COLOR = "rgb(141,141,141)";\nexport const CIRCLE_POINT_STROKE = "rgb(74,88,97)";\nexport const LINE_TENSION = 0.5;\nexport const LINE_WIDTH = 2;\nexport const LINE_OFFSET = 20;\n\nexport const getLineData = (\n  connectLine: LineData[],\n  rowHeight: number,\n\n  getTaskXCoordinate: (startTime: number) => number,\n  getTaskYCoordinate: (rowIndex: number, rowHeight: number) => number,\n  type: "back" | "front"\n) => {\n  const anchorArr: AnchorPoint[] = [];\n  const workLineArr: string[] = [];\n  const taskY = type === "back" ? "startResId" : "endResId";\n  const taskX = type === "back" ? "start" : "end";\n  connectLine.forEach((i) => {\n    const anchY = getTaskYCoordinate(+i[taskY], rowHeight) + (rowHeight * TASK_HEIGHT_OFFSET) / 2;\n    const anchX = getTaskXCoordinate(i[taskX]);\n    anchorArr.push({ x: anchX, y: anchY });\n    workLineArr.push(i.id);\n  });\n  return { anchorArr, workLineArr };\n};\n'],mappings:"AAEA,SAASA,kBAAkB,QAAQ,SAAS;AAQ5C,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AACpC,OAAO,MAAMC,UAAU,GAAG,kBAAkB;AAC5C,OAAO,MAAMC,kBAAkB,GAAG,kBAAkB;AACpD,OAAO,MAAMC,mBAAmB,GAAG,eAAe;AAClD,OAAO,MAAMC,YAAY,GAAG,GAAG;AAC/B,OAAO,MAAMC,UAAU,GAAG,CAAC;AAC3B,OAAO,MAAMC,WAAW,GAAG,EAAE;AAE7B,OAAO,MAAMC,WAAW,GAAGA,CACzBC,WAAuB,EACvBC,SAAiB,EAEjBC,kBAAiD,EACjDC,kBAAmE,EACnEC,IAAsB,KACnB;EACH,MAAMC,SAAwB,GAAG,EAAE;EACnC,MAAMC,WAAqB,GAAG,EAAE;EAChC,MAAMC,KAAK,GAAGH,IAAI,KAAK,MAAM,GAAG,YAAY,GAAG,UAAU;EACzD,MAAMI,KAAK,GAAGJ,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,KAAK;EAC/CJ,WAAW,CAACS,OAAO,CAAEC,CAAC,IAAK;IACzB,MAAMC,KAAK,GAAGR,kBAAkB,CAAC,CAACO,CAAC,CAACH,KAAK,CAAC,EAAEN,SAAS,CAAC,GAAIA,SAAS,GAAGV,kBAAkB,GAAI,CAAC;IAC7F,MAAMqB,KAAK,GAAGV,kBAAkB,CAACQ,CAAC,CAACF,KAAK,CAAC,CAAC;IAC1CH,SAAS,CAACQ,IAAI,CAAC;MAAEC,CAAC,EAAEF,KAAK;MAAEG,CAAC,EAAEJ;IAAM,CAAC,CAAC;IACtCL,WAAW,CAACO,IAAI,CAACH,CAAC,CAACM,EAAE,CAAC;EACxB,CAAC,CAAC;EACF,OAAO;IAAEX,SAAS;IAAEC;EAAY,CAAC;AACnC,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"690cdfd90d67275e68c8a725bbc4af669a8762eb"});var actualCoverage=coverage[path];return cov_1gxa31mgsc=function(){return actualCoverage},actualCoverage}cov_1gxa31mgsc();const CIRCLE_POINT_OFFSET=(cov_1gxa31mgsc().s[0]++,4),LINE_COLOR=(cov_1gxa31mgsc().s[1]++,"rgb(135,133,239)"),CIRCLE_POINT_COLOR=(cov_1gxa31mgsc().s[2]++,"rgb(141,141,141)"),CIRCLE_POINT_STROKE=(cov_1gxa31mgsc().s[3]++,"rgb(74,88,97)"),LINE_TENSION=(cov_1gxa31mgsc().s[4]++,.5),LINE_WIDTH=(cov_1gxa31mgsc().s[5]++,2),LINE_OFFSET=(cov_1gxa31mgsc().s[6]++,20);cov_1gxa31mgsc().s[7]++;const getLineData=(connectLine,rowHeight,getTaskXCoordinate,getTaskYCoordinate,type)=>{cov_1gxa31mgsc().f[0]++;const anchorArr=(cov_1gxa31mgsc().s[8]++,[]),workLineArr=(cov_1gxa31mgsc().s[9]++,[]),taskY=(cov_1gxa31mgsc().s[10]++,"back"===type?(cov_1gxa31mgsc().b[0][0]++,"startResId"):(cov_1gxa31mgsc().b[0][1]++,"endResId")),taskX=(cov_1gxa31mgsc().s[11]++,"back"===type?(cov_1gxa31mgsc().b[1][0]++,"start"):(cov_1gxa31mgsc().b[1][1]++,"end"));return cov_1gxa31mgsc().s[12]++,connectLine.forEach((i=>{cov_1gxa31mgsc().f[1]++;const anchY=(cov_1gxa31mgsc().s[13]++,getTaskYCoordinate(+i[taskY],rowHeight)+rowHeight*utils_tasks.yu/2),anchX=(cov_1gxa31mgsc().s[14]++,getTaskXCoordinate(i[taskX]));cov_1gxa31mgsc().s[15]++,anchorArr.push({x:anchX,y:anchY}),cov_1gxa31mgsc().s[16]++,workLineArr.push(i.id)})),cov_1gxa31mgsc().s[17]++,{anchorArr:anchorArr,workLineArr:workLineArr}};function cov_r4j9v8jfw(){var path="/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/Line/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"3a4c476091a13b7d43ddc4db88fee2d1af349422"===coverage[path].hash||(coverage[path]={path:"/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/Line/index.tsx",statementMap:{0:{start:{line:4,column:18},end:{line:28,column:1}},1:{start:{line:7,column:2},end:{line:27,column:6}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:4,column:18},end:{line:4,column:19}},loc:{start:{line:6,column:6},end:{line:28,column:1}},line:6}},branchMap:{},s:{0:0,1:0},f:{0:0},b:{},inputSourceMap:{version:3,names:["React","Circle","Group","Line","CIRCLE_POINT_COLOR","CIRCLE_POINT_OFFSET","CIRCLE_POINT_STROKE","LINE_COLOR","LINE_TENSION","LINE_WIDTH","LineKonva","points","createElement","strokeWidth","lineJoin","stroke","tension","x","y","radius","fill"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/Line/index.tsx"],sourcesContent:['import React from "react";\nimport { Circle, Group, Line } from "react-konva";\n\nimport {\n  CIRCLE_POINT_COLOR,\n  CIRCLE_POINT_OFFSET,\n  CIRCLE_POINT_STROKE,\n  LINE_COLOR,\n  LINE_TENSION,\n  LINE_WIDTH,\n  LineType,\n} from "../../utils/line";\n\nconst LineKonva = ({ points }: LineType) => {\n  return (\n    <Group>\n      <Line strokeWidth={LINE_WIDTH} lineJoin="round" stroke={LINE_COLOR} points={points} tension={LINE_TENSION} />\n      <Circle\n        x={points[0] + CIRCLE_POINT_OFFSET}\n        y={points[1]}\n        radius={4}\n        stroke={CIRCLE_POINT_STROKE}\n        fill={CIRCLE_POINT_COLOR}\n        strokeWidth={1}\n      />\n      <Circle\n        x={points[6] - CIRCLE_POINT_OFFSET}\n        y={points[7]}\n        radius={4}\n        stroke={CIRCLE_POINT_STROKE}\n        fill={CIRCLE_POINT_COLOR}\n        strokeWidth={1}\n      />\n    </Group>\n  );\n};\n\nexport default LineKonva;\n'],mappings:"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,aAAa;AAEjD,SACEC,kBAAkB,EAClBC,mBAAmB,EACnBC,mBAAmB,EACnBC,UAAU,EACVC,YAAY,EACZC,UAAU,QAEL,kBAAkB;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAC1C,oBACEX,KAAA,CAAAY,aAAA,CAACV,KAAK,qBACJF,KAAA,CAAAY,aAAA,CAACT,IAAI;IAACU,WAAW,EAAEJ,UAAW;IAACK,QAAQ,EAAC,OAAO;IAACC,MAAM,EAAER,UAAW;IAACI,MAAM,EAAEA,MAAO;IAACK,OAAO,EAAER;EAAa,CAAE,CAAC,eAC7GR,KAAA,CAAAY,aAAA,CAACX,MAAM;IACLgB,CAAC,EAAEN,MAAM,CAAC,CAAC,CAAC,GAAGN,mBAAoB;IACnCa,CAAC,EAAEP,MAAM,CAAC,CAAC,CAAE;IACbQ,MAAM,EAAE,CAAE;IACVJ,MAAM,EAAET,mBAAoB;IAC5Bc,IAAI,EAAEhB,kBAAmB;IACzBS,WAAW,EAAE;EAAE,CAChB,CAAC,eACFb,KAAA,CAAAY,aAAA,CAACX,MAAM;IACLgB,CAAC,EAAEN,MAAM,CAAC,CAAC,CAAC,GAAGN,mBAAoB;IACnCa,CAAC,EAAEP,MAAM,CAAC,CAAC,CAAE;IACbQ,MAAM,EAAE,CAAE;IACVJ,MAAM,EAAET,mBAAoB;IAC5Bc,IAAI,EAAEhB,kBAAmB;IACzBS,WAAW,EAAE;EAAE,CAChB,CACI,CAAC;AAEZ,CAAC;AAED,eAAeH,SAAS",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3a4c476091a13b7d43ddc4db88fee2d1af349422"});var actualCoverage=coverage[path];return cov_r4j9v8jfw=function(){return actualCoverage},actualCoverage}cov_r4j9v8jfw(),cov_r4j9v8jfw().s[0]++;var components_Line=({points:points})=>(cov_r4j9v8jfw().f[0]++,cov_r4j9v8jfw().s[1]++,react.createElement(ReactKonva.YJ,null,react.createElement(ReactKonva.N1,{strokeWidth:LINE_WIDTH,lineJoin:"round",stroke:LINE_COLOR,points:points,tension:LINE_TENSION}),react.createElement(ReactKonva.jl,{x:points[0]+CIRCLE_POINT_OFFSET,y:points[1],radius:4,stroke:CIRCLE_POINT_STROKE,fill:CIRCLE_POINT_COLOR,strokeWidth:1}),react.createElement(ReactKonva.jl,{x:points[6]-CIRCLE_POINT_OFFSET,y:points[7],radius:4,stroke:CIRCLE_POINT_STROKE,fill:CIRCLE_POINT_COLOR,strokeWidth:1})));try{Line.displayName="Line",Line.__docgenInfo={description:"",displayName:"Line",props:{points:{defaultValue:null,description:"",name:"points",required:!0,type:{name:"number[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tasks/components/Line/index.tsx#Line"]={docgenInfo:Line.__docgenInfo,name:"Line",path:"src/tasks/components/Line/index.tsx#Line"})}catch(__react_docgen_typescript_loader_error){}var TaskResizeHandle=__webpack_require__("./src/tasks/components/TaskResizeHandle/index.tsx");function cov_2me5p12icw(){var path="/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/TaskLine/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/TaskLine/index.tsx",statementMap:{0:{start:{line:12,column:26},end:{line:12,column:35}},1:{start:{line:13,column:38},end:{line:13,column:52}},2:{start:{line:14,column:35},end:{line:14,column:56}},3:{start:{line:15,column:34},end:{line:15,column:35}},4:{start:{line:16,column:33},end:{line:16,column:45}},5:{start:{line:17,column:0},end:{line:17,column:23}},6:{start:{line:30,column:17},end:{line:637,column:1}},7:{start:{line:64,column:6},end:{line:64,column:26}},8:{start:{line:68,column:6},end:{line:68,column:10}},9:{start:{line:72,column:6},end:{line:72,column:16}},10:{start:{line:73,column:34},end:{line:73,column:49}},11:{start:{line:74,column:34},end:{line:74,column:49}},12:{start:{line:75,column:36},end:{line:75,column:51}},13:{start:{line:76,column:34},end:{line:76,column:49}},14:{start:{line:77,column:50},end:{line:77,column:60}},15:{start:{line:78,column:48},end:{line:78,column:58}},16:{start:{line:79,column:27},end:{line:82,column:23}},17:{start:{line:80,column:19},end:{line:80,column:64}},18:{start:{line:80,column:42},end:{line:80,column:63}},19:{start:{line:81,column:4},end:{line:81,column:18}},20:{start:{line:83,column:26},end:{line:86,column:23}},21:{start:{line:84,column:19},end:{line:84,column:62}},22:{start:{line:84,column:42},end:{line:84,column:61}},23:{start:{line:85,column:4},end:{line:85,column:18}},24:{start:{line:87,column:18},end:{line:87,column:85}},25:{start:{line:87,column:32},end:{line:87,column:62}},26:{start:{line:88,column:20},end:{line:98,column:22}},27:{start:{line:89,column:4},end:{line:91,column:5}},28:{start:{line:90,column:6},end:{line:90,column:40}},29:{start:{line:92,column:4},end:{line:97,column:5}},30:{start:{line:93,column:18},end:{line:93,column:30}},31:{start:{line:94,column:6},end:{line:94,column:50}},32:{start:{line:96,column:6},end:{line:96,column:43}},33:{start:{line:99,column:21},end:{line:104,column:16}},34:{start:{line:100,column:4},end:{line:102,column:5}},35:{start:{line:101,column:6},end:{line:101,column:40}},36:{start:{line:103,column:4},end:{line:103,column:36}},37:{start:{line:105,column:26},end:{line:107,column:38}},38:{start:{line:106,column:4},end:{line:106,column:48}},39:{start:{line:108,column:32},end:{line:116,column:41}},40:{start:{line:109,column:16},end:{line:109,column:70}},41:{start:{line:110,column:4},end:{line:115,column:6}},42:{start:{line:117,column:21},end:{line:117,column:79}},43:{start:{line:117,column:35},end:{line:117,column:65}},44:{start:{line:118,column:46},end:{line:118,column:77}},45:{start:{line:119,column:21},end:{line:123,column:64}},46:{start:{line:120,column:22},end:{line:120,column:68}},47:{start:{line:121,column:30},end:{line:121,column:80}},48:{start:{line:122,column:4},end:{line:122,column:68}},49:{start:{line:124,column:21},end:{line:128,column:64}},50:{start:{line:125,column:22},end:{line:125,column:70}},51:{start:{line:126,column:30},end:{line:126,column:80}},52:{start:{line:127,column:4},end:{line:127,column:68}},53:{start:{line:129,column:2},end:{line:137,column:42}},54:{start:{line:130,column:16},end:{line:130,column:70}},55:{start:{line:131,column:4},end:{line:136,column:7}},56:{start:{line:138,column:23},end:{line:148,column:65}},57:{start:{line:139,column:33},end:{line:141,column:19}},58:{start:{line:142,column:30},end:{line:142,column:68}},59:{start:{line:143,column:25},end:{line:143,column:56}},60:{start:{line:144,column:4},end:{line:146,column:5}},61:{start:{line:145,column:6},end:{line:145,column:15}},62:{start:{line:147,column:4},end:{line:147,column:24}},63:{start:{line:149,column:28},end:{line:154,column:34}},64:{start:{line:150,column:4},end:{line:152,column:5}},65:{start:{line:151,column:6},end:{line:151,column:15}},66:{start:{line:153,column:4},end:{line:153,column:13}},67:{start:{line:155,column:23},end:{line:165,column:8}},68:{start:{line:158,column:8},end:{line:158,column:9}},69:{start:{line:159,column:18},end:{line:159,column:28}},70:{start:{line:160,column:18},end:{line:160,column:28}},71:{start:{line:161,column:4},end:{line:164,column:6}},72:{start:{line:166,column:27},end:{line:180,column:38}},73:{start:{line:167,column:4},end:{line:167,column:22}},74:{start:{line:168,column:18},end:{line:168,column:37}},75:{start:{line:169,column:4},end:{line:171,column:5}},76:{start:{line:170,column:6},end:{line:170,column:13}},77:{start:{line:172,column:18},end:{line:172,column:44}},78:{start:{line:173,column:4},end:{line:175,column:5}},79:{start:{line:174,column:6},end:{line:174,column:13}},80:{start:{line:176,column:4},end:{line:179,column:7}},81:{start:{line:181,column:18},end:{line:181,column:90}},82:{start:{line:181,column:36},end:{line:181,column:68}},83:{start:{line:182,column:22},end:{line:196,column:68}},84:{start:{line:183,column:4},end:{line:183,column:26}},85:{start:{line:184,column:4},end:{line:186,column:5}},86:{start:{line:185,column:6},end:{line:185,column:13}},87:{start:{line:187,column:18},end:{line:187,column:37}},88:{start:{line:188,column:4},end:{line:190,column:5}},89:{start:{line:189,column:6},end:{line:189,column:13}},90:{start:{line:191,column:4},end:{line:193,column:5}},91:{start:{line:192,column:6},end:{line:192,column:49}},92:{start:{line:194,column:4},end:{line:194,column:33}},93:{start:{line:195,column:4},end:{line:195,column:23}},94:{start:{line:197,column:21},end:{line:213,column:64}},95:{start:{line:198,column:4},end:{line:200,column:5}},96:{start:{line:199,column:6},end:{line:199,column:13}},97:{start:{line:201,column:4},end:{line:201,column:26}},98:{start:{line:202,column:4},end:{line:204,column:5}},99:{start:{line:203,column:6},end:{line:203,column:13}},100:{start:{line:205,column:18},end:{line:205,column:37}},101:{start:{line:206,column:4},end:{line:208,column:5}},102:{start:{line:207,column:6},end:{line:207,column:13}},103:{start:{line:209,column:4},end:{line:211,column:5}},104:{start:{line:210,column:6},end:{line:210,column:46}},105:{start:{line:212,column:4},end:{line:212,column:32}},106:{start:{line:214,column:25},end:{line:214,column:132}},107:{start:{line:214,column:47},end:{line:214,column:92}},108:{start:{line:215,column:29},end:{line:219,column:49}},109:{start:{line:216,column:22},end:{line:216,column:52}},110:{start:{line:217,column:30},end:{line:217,column:80}},111:{start:{line:218,column:4},end:{line:218,column:45}},112:{start:{line:220,column:22},end:{line:250,column:138}},113:{start:{line:224,column:8},end:{line:224,column:23}},114:{start:{line:225,column:23},end:{line:225,column:65}},115:{start:{line:226,column:24},end:{line:226,column:55}},116:{start:{line:227,column:26},end:{line:227,column:80}},117:{start:{line:228,column:24},end:{line:228,column:68}},118:{start:{line:229,column:18},end:{line:232,column:5}},119:{start:{line:234,column:4},end:{line:234,column:27}},120:{start:{line:235,column:4},end:{line:235,column:22}},121:{start:{line:236,column:24},end:{line:236,column:26}},122:{start:{line:237,column:4},end:{line:242,column:5}},123:{start:{line:238,column:6},end:{line:238,column:25}},124:{start:{line:239,column:23},end:{line:239,column:112}},125:{start:{line:240,column:6},end:{line:240,column:46}},126:{start:{line:241,column:6},end:{line:241,column:48}},127:{start:{line:243,column:4},end:{line:248,column:5}},128:{start:{line:244,column:6},end:{line:244,column:24}},129:{start:{line:245,column:23},end:{line:245,column:110}},130:{start:{line:246,column:6},end:{line:246,column:45}},131:{start:{line:247,column:6},end:{line:247,column:48}},132:{start:{line:249,column:4},end:{line:249,column:26}},133:{start:{line:251,column:21},end:{line:280,column:96}},134:{start:{line:255,column:8},end:{line:255,column:23}},135:{start:{line:256,column:23},end:{line:256,column:65}},136:{start:{line:257,column:24},end:{line:257,column:73}},137:{start:{line:258,column:17},end:{line:258,column:54}},138:{start:{line:259,column:17},end:{line:259,column:79}},139:{start:{line:260,column:27},end:{line:260,column:60}},140:{start:{line:261,column:22},end:{line:261,column:23}},141:{start:{line:262,column:22},end:{line:262,column:33}},142:{start:{line:263,column:4},end:{line:265,column:5}},143:{start:{line:264,column:6},end:{line:264,column:25}},144:{start:{line:266,column:4},end:{line:268,column:5}},145:{start:{line:267,column:6},end:{line:267,column:25}},146:{start:{line:269,column:4},end:{line:271,column:5}},147:{start:{line:270,column:6},end:{line:270,column:35}},148:{start:{line:272,column:18},end:{line:275,column:5}},149:{start:{line:276,column:4},end:{line:279,column:8}},150:{start:{line:276,column:37},end:{line:279,column:5}},151:{start:{line:281,column:20},end:{line:327,column:187}},152:{start:{line:282,column:4},end:{line:282,column:23}},153:{start:{line:283,column:4},end:{line:285,column:5}},154:{start:{line:284,column:6},end:{line:284,column:13}},155:{start:{line:289,column:8},end:{line:289,column:23}},156:{start:{line:290,column:23},end:{line:290,column:65}},157:{start:{line:291,column:24},end:{line:291,column:55}},158:{start:{line:292,column:26},end:{line:292,column:97}},159:{start:{line:293,column:24},end:{line:293,column:68}},160:{start:{line:294,column:18},end:{line:297,column:5}},161:{start:{line:298,column:4},end:{line:301,column:8}},162:{start:{line:298,column:37},end:{line:301,column:5}},163:{start:{line:304,column:8},end:{line:304,column:57}},164:{start:{line:305,column:17},end:{line:305,column:82}},165:{start:{line:306,column:4},end:{line:306,column:24}},166:{start:{line:307,column:4},end:{line:307,column:23}},167:{start:{line:308,column:4},end:{line:308,column:29}},168:{start:{line:309,column:4},end:{line:321,column:5}},169:{start:{line:310,column:22},end:{line:310,column:48}},170:{start:{line:311,column:22},end:{line:311,column:89}},171:{start:{line:312,column:6},end:{line:319,column:9}},172:{start:{line:320,column:6},end:{line:320,column:13}},173:{start:{line:322,column:4},end:{line:326,column:7}},174:{start:{line:328,column:22},end:{line:328,column:65}},175:{start:{line:328,column:36},end:{line:328,column:50}},176:{start:{line:329,column:19},end:{line:329,column:64}},177:{start:{line:329,column:33},end:{line:329,column:49}},178:{start:{line:330,column:21},end:{line:336,column:12}},179:{start:{line:331,column:4},end:{line:335,column:5}},180:{start:{line:332,column:6},end:{line:332,column:36}},181:{start:{line:334,column:6},end:{line:334,column:26}},182:{start:{line:337,column:20},end:{line:337,column:104}},183:{start:{line:337,column:34},end:{line:337,column:72}},184:{start:{line:338,column:24},end:{line:370,column:151}},185:{start:{line:339,column:4},end:{line:339,column:22}},186:{start:{line:340,column:4},end:{line:340,column:26}},187:{start:{line:344,column:8},end:{line:344,column:23}},188:{start:{line:345,column:23},end:{line:345,column:65}},189:{start:{line:346,column:24},end:{line:346,column:55}},190:{start:{line:347,column:26},end:{line:347,column:80}},191:{start:{line:348,column:24},end:{line:348,column:68}},192:{start:{line:349,column:18},end:{line:352,column:5}},193:{start:{line:353,column:4},end:{line:353,column:27}},194:{start:{line:354,column:4},end:{line:354,column:22}},195:{start:{line:355,column:4},end:{line:369,column:5}},196:{start:{line:356,column:6},end:{line:361,column:7}},197:{start:{line:357,column:8},end:{line:357,column:27}},198:{start:{line:358,column:25},end:{line:358,column:114}},199:{start:{line:359,column:8},end:{line:359,column:48}},200:{start:{line:360,column:8},end:{line:360,column:39}},201:{start:{line:363,column:6},end:{line:368,column:7}},202:{start:{line:364,column:8},end:{line:364,column:26}},203:{start:{line:365,column:25},end:{line:365,column:112}},204:{start:{line:366,column:8},end:{line:366,column:47}},205:{start:{line:367,column:8},end:{line:367,column:39}},206:{start:{line:371,column:23},end:{line:418,column:44}},207:{start:{line:372,column:4},end:{line:372,column:26}},208:{start:{line:375,column:8},end:{line:375,column:23}},209:{start:{line:376,column:4},end:{line:417,column:7}},210:{start:{line:380,column:10},end:{line:380,column:24}},211:{start:{line:381,column:23},end:{line:381,column:36}},212:{start:{line:382,column:23},end:{line:382,column:40}},213:{start:{line:383,column:6},end:{line:416,column:7}},214:{start:{line:385,column:10},end:{line:389,column:11}},215:{start:{line:386,column:12},end:{line:388,column:14}},216:{start:{line:390,column:10},end:{line:395,column:11}},217:{start:{line:391,column:12},end:{line:394,column:14}},218:{start:{line:396,column:10},end:{line:399,column:12}},219:{start:{line:401,column:10},end:{line:405,column:11}},220:{start:{line:402,column:12},end:{line:404,column:14}},221:{start:{line:406,column:10},end:{line:410,column:11}},222:{start:{line:407,column:12},end:{line:409,column:14}},223:{start:{line:411,column:10},end:{line:415,column:12}},224:{start:{line:419,column:22},end:{line:446,column:162}},225:{start:{line:420,column:4},end:{line:420,column:23}},226:{start:{line:421,column:4},end:{line:421,column:24}},227:{start:{line:422,column:4},end:{line:422,column:23}},228:{start:{line:423,column:4},end:{line:423,column:26}},229:{start:{line:424,column:4},end:{line:424,column:23}},230:{start:{line:425,column:4},end:{line:427,column:5}},231:{start:{line:426,column:6},end:{line:426,column:13}},232:{start:{line:428,column:17},end:{line:428,column:82}},233:{start:{line:429,column:4},end:{line:429,column:29}},234:{start:{line:430,column:4},end:{line:441,column:5}},235:{start:{line:431,column:22},end:{line:431,column:48}},236:{start:{line:432,column:22},end:{line:432,column:89}},237:{start:{line:433,column:6},end:{line:439,column:9}},238:{start:{line:440,column:6},end:{line:440,column:13}},239:{start:{line:442,column:4},end:{line:445,column:7}},240:{start:{line:447,column:21},end:{line:455,column:43}},241:{start:{line:448,column:4},end:{line:450,column:5}},242:{start:{line:449,column:6},end:{line:449,column:17}},243:{start:{line:451,column:4},end:{line:453,column:5}},244:{start:{line:452,column:6},end:{line:452,column:62}},245:{start:{line:454,column:4},end:{line:454,column:32}},246:{start:{line:456,column:28},end:{line:464,column:39}},247:{start:{line:457,column:4},end:{line:459,column:5}},248:{start:{line:458,column:6},end:{line:458,column:24}},249:{start:{line:460,column:4},end:{line:462,column:5}},250:{start:{line:461,column:6},end:{line:461,column:16}},251:{start:{line:463,column:4},end:{line:463,column:14}},252:{start:{line:465,column:28},end:{line:465,column:71}},253:{start:{line:465,column:42},end:{line:465,column:56}},254:{start:{line:466,column:26},end:{line:488,column:38}},255:{start:{line:467,column:4},end:{line:487,column:5}},256:{start:{line:468,column:6},end:{line:470,column:7}},257:{start:{line:469,column:8},end:{line:469,column:42}},258:{start:{line:471,column:6},end:{line:479,column:7}},259:{start:{line:472,column:32},end:{line:472,column:55}},260:{start:{line:473,column:8},end:{line:476,column:9}},261:{start:{line:474,column:23},end:{line:474,column:117}},262:{start:{line:475,column:10},end:{line:475,column:22}},263:{start:{line:477,column:20},end:{line:477,column:92}},264:{start:{line:478,column:8},end:{line:478,column:19}},265:{start:{line:480,column:22},end:{line:480,column:25}},266:{start:{line:481,column:18},end:{line:481,column:30}},267:{start:{line:484,column:6},end:{line:484,column:39}},268:{start:{line:486,column:6},end:{line:486,column:36}},269:{start:{line:489,column:25},end:{line:497,column:72}},270:{start:{line:490,column:4},end:{line:492,column:5}},271:{start:{line:491,column:6},end:{line:491,column:40}},272:{start:{line:493,column:4},end:{line:495,column:5}},273:{start:{line:494,column:6},end:{line:494,column:29}},274:{start:{line:496,column:4},end:{line:496,column:63}},275:{start:{line:498,column:23},end:{line:506,column:27}},276:{start:{line:499,column:4},end:{line:501,column:5}},277:{start:{line:500,column:6},end:{line:500,column:19}},278:{start:{line:502,column:4},end:{line:504,column:5}},279:{start:{line:503,column:6},end:{line:503,column:18}},280:{start:{line:505,column:4},end:{line:505,column:17}},281:{start:{line:507,column:27},end:{line:538,column:120}},282:{start:{line:508,column:19},end:{line:508,column:21}},283:{start:{line:509,column:19},end:{line:509,column:22}},284:{start:{line:510,column:4},end:{line:512,column:5}},285:{start:{line:511,column:6},end:{line:511,column:16}},286:{start:{line:513,column:32},end:{line:513,column:86}},287:{start:{line:514,column:38},end:{line:514,column:92}},288:{start:{line:515,column:29},end:{line:515,column:30}},289:{start:{line:516,column:35},end:{line:516,column:36}},290:{start:{line:517,column:19},end:{line:517,column:20}},291:{start:{line:518,column:4},end:{line:536,column:7}},292:{start:{line:519,column:29},end:{line:519,column:43}},293:{start:{line:520,column:6},end:{line:523,column:7}},294:{start:{line:521,column:8},end:{line:521,column:34}},295:{start:{line:522,column:8},end:{line:522,column:29}},296:{start:{line:524,column:6},end:{line:526,column:7}},297:{start:{line:525,column:8},end:{line:525,column:35}},298:{start:{line:527,column:6},end:{line:530,column:7}},299:{start:{line:528,column:8},end:{line:528,column:35}},300:{start:{line:529,column:8},end:{line:529,column:31}},301:{start:{line:531,column:6},end:{line:534,column:7}},302:{start:{line:532,column:8},end:{line:532,column:37}},303:{start:{line:533,column:8},end:{line:533,column:31}},304:{start:{line:535,column:6},end:{line:535,column:93}},305:{start:{line:537,column:4},end:{line:537,column:18}},306:{start:{line:539,column:25},end:{line:541,column:22}},307:{start:{line:540,column:4},end:{line:540,column:47}},308:{start:{line:542,column:25},end:{line:544,column:22}},309:{start:{line:543,column:4},end:{line:543,column:47}},310:{start:{line:545,column:2},end:{line:636,column:8}},311:{start:{line:627,column:4},end:{line:630,column:7}},312:{start:{line:632,column:4},end:{line:635,column:7}},313:{start:{line:638,column:24},end:{line:638,column:32}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:30,column:17},end:{line:30,column:18}},loc:{start:{line:42,column:6},end:{line:637,column:1}},line:42},1:{name:"(anonymous_1)",decl:{start:{line:79,column:35},end:{line:79,column:36}},loc:{start:{line:79,column:41},end:{line:82,column:3}},line:79},2:{name:"(anonymous_2)",decl:{start:{line:80,column:37},end:{line:80,column:38}},loc:{start:{line:80,column:42},end:{line:80,column:63}},line:80},3:{name:"(anonymous_3)",decl:{start:{line:83,column:34},end:{line:83,column:35}},loc:{start:{line:83,column:40},end:{line:86,column:3}},line:83},4:{name:"(anonymous_4)",decl:{start:{line:84,column:37},end:{line:84,column:38}},loc:{start:{line:84,column:42},end:{line:84,column:61}},line:84},5:{name:"(anonymous_5)",decl:{start:{line:87,column:26},end:{line:87,column:27}},loc:{start:{line:87,column:32},end:{line:87,column:62}},line:87},6:{name:"(anonymous_6)",decl:{start:{line:88,column:28},end:{line:88,column:29}},loc:{start:{line:88,column:34},end:{line:98,column:3}},line:88},7:{name:"(anonymous_7)",decl:{start:{line:99,column:29},end:{line:99,column:30}},loc:{start:{line:99,column:35},end:{line:104,column:3}},line:99},8:{name:"(anonymous_8)",decl:{start:{line:105,column:34},end:{line:105,column:35}},loc:{start:{line:105,column:40},end:{line:107,column:3}},line:105},9:{name:"(anonymous_9)",decl:{start:{line:108,column:40},end:{line:108,column:41}},loc:{start:{line:108,column:46},end:{line:116,column:3}},line:108},10:{name:"(anonymous_10)",decl:{start:{line:117,column:29},end:{line:117,column:30}},loc:{start:{line:117,column:35},end:{line:117,column:65}},line:117},11:{name:"(anonymous_11)",decl:{start:{line:119,column:29},end:{line:119,column:30}},loc:{start:{line:119,column:35},end:{line:123,column:3}},line:119},12:{name:"(anonymous_12)",decl:{start:{line:124,column:29},end:{line:124,column:30}},loc:{start:{line:124,column:35},end:{line:128,column:3}},line:124},13:{name:"(anonymous_13)",decl:{start:{line:129,column:12},end:{line:129,column:13}},loc:{start:{line:129,column:18},end:{line:137,column:3}},line:129},14:{name:"(anonymous_14)",decl:{start:{line:138,column:31},end:{line:138,column:32}},loc:{start:{line:138,column:37},end:{line:148,column:3}},line:138},15:{name:"(anonymous_15)",decl:{start:{line:149,column:36},end:{line:149,column:37}},loc:{start:{line:149,column:42},end:{line:154,column:3}},line:149},16:{name:"(anonymous_16)",decl:{start:{line:155,column:35},end:{line:155,column:36}},loc:{start:{line:155,column:40},end:{line:165,column:3}},line:155},17:{name:"(anonymous_17)",decl:{start:{line:166,column:39},end:{line:166,column:40}},loc:{start:{line:166,column:56},end:{line:180,column:3}},line:166},18:{name:"(anonymous_18)",decl:{start:{line:181,column:30},end:{line:181,column:31}},loc:{start:{line:181,column:36},end:{line:181,column:68}},line:181},19:{name:"(anonymous_19)",decl:{start:{line:182,column:34},end:{line:182,column:35}},loc:{start:{line:182,column:39},end:{line:196,column:3}},line:182},20:{name:"(anonymous_20)",decl:{start:{line:197,column:33},end:{line:197,column:34}},loc:{start:{line:197,column:38},end:{line:213,column:3}},line:197},21:{name:"(anonymous_21)",decl:{start:{line:214,column:37},end:{line:214,column:38}},loc:{start:{line:214,column:47},end:{line:214,column:92}},line:214},22:{name:"(anonymous_22)",decl:{start:{line:215,column:41},end:{line:215,column:42}},loc:{start:{line:215,column:54},end:{line:219,column:3}},line:215},23:{name:"(anonymous_23)",decl:{start:{line:220,column:34},end:{line:220,column:35}},loc:{start:{line:220,column:39},end:{line:250,column:3}},line:220},24:{name:"(anonymous_24)",decl:{start:{line:251,column:33},end:{line:251,column:34}},loc:{start:{line:251,column:38},end:{line:280,column:3}},line:251},25:{name:"(anonymous_25)",decl:{start:{line:276,column:22},end:{line:276,column:23}},loc:{start:{line:276,column:37},end:{line:279,column:5}},line:276},26:{name:"(anonymous_26)",decl:{start:{line:281,column:32},end:{line:281,column:33}},loc:{start:{line:281,column:37},end:{line:327,column:3}},line:281},27:{name:"(anonymous_27)",decl:{start:{line:298,column:22},end:{line:298,column:23}},loc:{start:{line:298,column:37},end:{line:301,column:5}},line:298},28:{name:"(anonymous_28)",decl:{start:{line:328,column:30},end:{line:328,column:31}},loc:{start:{line:328,column:36},end:{line:328,column:50}},line:328},29:{name:"(anonymous_29)",decl:{start:{line:329,column:27},end:{line:329,column:28}},loc:{start:{line:329,column:33},end:{line:329,column:49}},line:329},30:{name:"(anonymous_30)",decl:{start:{line:330,column:29},end:{line:330,column:30}},loc:{start:{line:330,column:35},end:{line:336,column:3}},line:330},31:{name:"(anonymous_31)",decl:{start:{line:337,column:28},end:{line:337,column:29}},loc:{start:{line:337,column:34},end:{line:337,column:72}},line:337},32:{name:"(anonymous_32)",decl:{start:{line:338,column:36},end:{line:338,column:37}},loc:{start:{line:338,column:41},end:{line:370,column:3}},line:338},33:{name:"(anonymous_33)",decl:{start:{line:371,column:35},end:{line:371,column:36}},loc:{start:{line:371,column:51},end:{line:418,column:3}},line:371},34:{name:"(anonymous_34)",decl:{start:{line:376,column:22},end:{line:376,column:23}},loc:{start:{line:376,column:40},end:{line:417,column:5}},line:376},35:{name:"(anonymous_35)",decl:{start:{line:419,column:34},end:{line:419,column:35}},loc:{start:{line:419,column:39},end:{line:446,column:3}},line:419},36:{name:"(anonymous_36)",decl:{start:{line:447,column:29},end:{line:447,column:30}},loc:{start:{line:447,column:35},end:{line:455,column:3}},line:447},37:{name:"(anonymous_37)",decl:{start:{line:456,column:36},end:{line:456,column:37}},loc:{start:{line:456,column:42},end:{line:464,column:3}},line:456},38:{name:"(anonymous_38)",decl:{start:{line:465,column:36},end:{line:465,column:37}},loc:{start:{line:465,column:42},end:{line:465,column:56}},line:465},39:{name:"(anonymous_39)",decl:{start:{line:466,column:34},end:{line:466,column:35}},loc:{start:{line:466,column:40},end:{line:488,column:3}},line:466},40:{name:"(anonymous_40)",decl:{start:{line:489,column:33},end:{line:489,column:34}},loc:{start:{line:489,column:39},end:{line:497,column:3}},line:489},41:{name:"(anonymous_41)",decl:{start:{line:498,column:31},end:{line:498,column:32}},loc:{start:{line:498,column:37},end:{line:506,column:3}},line:498},42:{name:"(anonymous_42)",decl:{start:{line:507,column:35},end:{line:507,column:36}},loc:{start:{line:507,column:41},end:{line:538,column:3}},line:507},43:{name:"(anonymous_43)",decl:{start:{line:518,column:34},end:{line:518,column:35}},loc:{start:{line:518,column:48},end:{line:536,column:5}},line:518},44:{name:"(anonymous_44)",decl:{start:{line:539,column:33},end:{line:539,column:34}},loc:{start:{line:539,column:39},end:{line:541,column:3}},line:539},45:{name:"(anonymous_45)",decl:{start:{line:542,column:33},end:{line:542,column:34}},loc:{start:{line:542,column:39},end:{line:544,column:3}},line:542},46:{name:"(anonymous_46)",decl:{start:{line:626,column:150},end:{line:626,column:151}},loc:{start:{line:626,column:164},end:{line:631,column:3}},line:626},47:{name:"(anonymous_47)",decl:{start:{line:631,column:107},end:{line:631,column:108}},loc:{start:{line:631,column:121},end:{line:636,column:3}},line:631}},branchMap:{0:{loc:{start:{line:32,column:2},end:{line:32,column:26}},type:"default-arg",locations:[{start:{line:32,column:9},end:{line:32,column:26}}],line:32},1:{loc:{start:{line:87,column:32},end:{line:87,column:62}},type:"cond-expr",locations:[{start:{line:87,column:55},end:{line:87,column:58}},{start:{line:87,column:61},end:{line:87,column:62}}],line:87},2:{loc:{start:{line:87,column:32},end:{line:87,column:52}},type:"binary-expr",locations:[{start:{line:87,column:32},end:{line:87,column:40}},{start:{line:87,column:44},end:{line:87,column:52}}],line:87},3:{loc:{start:{line:89,column:4},end:{line:91,column:5}},type:"if",locations:[{start:{line:89,column:4},end:{line:91,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:89},4:{loc:{start:{line:100,column:4},end:{line:102,column:5}},type:"if",locations:[{start:{line:100,column:4},end:{line:102,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:100},5:{loc:{start:{line:106,column:11},end:{line:106,column:47}},type:"cond-expr",locations:[{start:{line:106,column:25},end:{line:106,column:35}},{start:{line:106,column:38},end:{line:106,column:47}}],line:106},6:{loc:{start:{line:144,column:4},end:{line:146,column:5}},type:"if",locations:[{start:{line:144,column:4},end:{line:146,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:144},7:{loc:{start:{line:144,column:8},end:{line:144,column:44}},type:"binary-expr",locations:[{start:{line:144,column:8},end:{line:144,column:21}},{start:{line:144,column:25},end:{line:144,column:44}}],line:144},8:{loc:{start:{line:150,column:4},end:{line:152,column:5}},type:"if",locations:[{start:{line:150,column:4},end:{line:152,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:150},9:{loc:{start:{line:169,column:4},end:{line:171,column:5}},type:"if",locations:[{start:{line:169,column:4},end:{line:171,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:169},10:{loc:{start:{line:173,column:4},end:{line:175,column:5}},type:"if",locations:[{start:{line:173,column:4},end:{line:175,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:173},11:{loc:{start:{line:181,column:36},end:{line:181,column:68}},type:"binary-expr",locations:[{start:{line:181,column:36},end:{line:181,column:47}},{start:{line:181,column:51},end:{line:181,column:68}}],line:181},12:{loc:{start:{line:184,column:4},end:{line:186,column:5}},type:"if",locations:[{start:{line:184,column:4},end:{line:186,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:184},13:{loc:{start:{line:188,column:4},end:{line:190,column:5}},type:"if",locations:[{start:{line:188,column:4},end:{line:190,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:188},14:{loc:{start:{line:191,column:4},end:{line:193,column:5}},type:"if",locations:[{start:{line:191,column:4},end:{line:193,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:191},15:{loc:{start:{line:198,column:4},end:{line:200,column:5}},type:"if",locations:[{start:{line:198,column:4},end:{line:200,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:198},16:{loc:{start:{line:202,column:4},end:{line:204,column:5}},type:"if",locations:[{start:{line:202,column:4},end:{line:204,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:202},17:{loc:{start:{line:206,column:4},end:{line:208,column:5}},type:"if",locations:[{start:{line:206,column:4},end:{line:208,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:206},18:{loc:{start:{line:209,column:4},end:{line:211,column:5}},type:"if",locations:[{start:{line:209,column:4},end:{line:211,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:209},19:{loc:{start:{line:226,column:24},end:{line:226,column:55}},type:"cond-expr",locations:[{start:{line:226,column:41},end:{line:226,column:42}},{start:{line:226,column:45},end:{line:226,column:55}}],line:226},20:{loc:{start:{line:237,column:4},end:{line:242,column:5}},type:"if",locations:[{start:{line:237,column:4},end:{line:242,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:237},21:{loc:{start:{line:243,column:4},end:{line:248,column:5}},type:"if",locations:[{start:{line:243,column:4},end:{line:248,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:243},22:{loc:{start:{line:257,column:24},end:{line:257,column:73}},type:"cond-expr",locations:[{start:{line:257,column:50},end:{line:257,column:60}},{start:{line:257,column:63},end:{line:257,column:73}}],line:257},23:{loc:{start:{line:263,column:4},end:{line:265,column:5}},type:"if",locations:[{start:{line:263,column:4},end:{line:265,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:263},24:{loc:{start:{line:266,column:4},end:{line:268,column:5}},type:"if",locations:[{start:{line:266,column:4},end:{line:268,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:266},25:{loc:{start:{line:269,column:4},end:{line:271,column:5}},type:"if",locations:[{start:{line:269,column:4},end:{line:271,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:269},26:{loc:{start:{line:283,column:4},end:{line:285,column:5}},type:"if",locations:[{start:{line:283,column:4},end:{line:285,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:283},27:{loc:{start:{line:291,column:24},end:{line:291,column:55}},type:"cond-expr",locations:[{start:{line:291,column:41},end:{line:291,column:42}},{start:{line:291,column:45},end:{line:291,column:55}}],line:291},28:{loc:{start:{line:308,column:4},end:{line:308,column:28}},type:"binary-expr",locations:[{start:{line:308,column:4},end:{line:308,column:12}},{start:{line:308,column:16},end:{line:308,column:28}}],line:308},29:{loc:{start:{line:309,column:4},end:{line:321,column:5}},type:"if",locations:[{start:{line:309,column:4},end:{line:321,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:309},30:{loc:{start:{line:346,column:24},end:{line:346,column:55}},type:"cond-expr",locations:[{start:{line:346,column:41},end:{line:346,column:42}},{start:{line:346,column:45},end:{line:346,column:55}}],line:346},31:{loc:{start:{line:355,column:4},end:{line:369,column:5}},type:"if",locations:[{start:{line:355,column:4},end:{line:369,column:5}},{start:{line:362,column:11},end:{line:369,column:5}}],line:355},32:{loc:{start:{line:356,column:6},end:{line:361,column:7}},type:"if",locations:[{start:{line:356,column:6},end:{line:361,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:356},33:{loc:{start:{line:363,column:6},end:{line:368,column:7}},type:"if",locations:[{start:{line:363,column:6},end:{line:368,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:363},34:{loc:{start:{line:383,column:6},end:{line:416,column:7}},type:"switch",locations:[{start:{line:384,column:8},end:{line:399,column:12}},{start:{line:400,column:8},end:{line:415,column:12}}],line:383},35:{loc:{start:{line:385,column:10},end:{line:389,column:11}},type:"if",locations:[{start:{line:385,column:10},end:{line:389,column:11}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:385},36:{loc:{start:{line:390,column:10},end:{line:395,column:11}},type:"if",locations:[{start:{line:390,column:10},end:{line:395,column:11}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:390},37:{loc:{start:{line:401,column:10},end:{line:405,column:11}},type:"if",locations:[{start:{line:401,column:10},end:{line:405,column:11}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:401},38:{loc:{start:{line:406,column:10},end:{line:410,column:11}},type:"if",locations:[{start:{line:406,column:10},end:{line:410,column:11}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:406},39:{loc:{start:{line:425,column:4},end:{line:427,column:5}},type:"if",locations:[{start:{line:425,column:4},end:{line:427,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:425},40:{loc:{start:{line:429,column:4},end:{line:429,column:28}},type:"binary-expr",locations:[{start:{line:429,column:4},end:{line:429,column:12}},{start:{line:429,column:16},end:{line:429,column:28}}],line:429},41:{loc:{start:{line:430,column:4},end:{line:441,column:5}},type:"if",locations:[{start:{line:430,column:4},end:{line:441,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:430},42:{loc:{start:{line:430,column:8},end:{line:430,column:53}},type:"binary-expr",locations:[{start:{line:430,column:8},end:{line:430,column:19}},{start:{line:430,column:23},end:{line:430,column:40}},{start:{line:430,column:44},end:{line:430,column:53}}],line:430},43:{loc:{start:{line:448,column:4},end:{line:450,column:5}},type:"if",locations:[{start:{line:448,column:4},end:{line:450,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:448},44:{loc:{start:{line:451,column:4},end:{line:453,column:5}},type:"if",locations:[{start:{line:451,column:4},end:{line:453,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:451},45:{loc:{start:{line:457,column:4},end:{line:459,column:5}},type:"if",locations:[{start:{line:457,column:4},end:{line:459,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:457},46:{loc:{start:{line:460,column:4},end:{line:462,column:5}},type:"if",locations:[{start:{line:460,column:4},end:{line:462,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:460},47:{loc:{start:{line:468,column:6},end:{line:470,column:7}},type:"if",locations:[{start:{line:468,column:6},end:{line:470,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:468},48:{loc:{start:{line:471,column:6},end:{line:479,column:7}},type:"if",locations:[{start:{line:471,column:6},end:{line:479,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:471},49:{loc:{start:{line:473,column:8},end:{line:476,column:9}},type:"if",locations:[{start:{line:473,column:8},end:{line:476,column:9}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:473},50:{loc:{start:{line:490,column:4},end:{line:492,column:5}},type:"if",locations:[{start:{line:490,column:4},end:{line:492,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:490},51:{loc:{start:{line:493,column:4},end:{line:495,column:5}},type:"if",locations:[{start:{line:493,column:4},end:{line:495,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:493},52:{loc:{start:{line:493,column:8},end:{line:493,column:28}},type:"binary-expr",locations:[{start:{line:493,column:8},end:{line:493,column:16}},{start:{line:493,column:20},end:{line:493,column:28}}],line:493},53:{loc:{start:{line:496,column:11},end:{line:496,column:62}},type:"cond-expr",locations:[{start:{line:496,column:31},end:{line:496,column:44}},{start:{line:496,column:47},end:{line:496,column:62}}],line:496},54:{loc:{start:{line:499,column:4},end:{line:501,column:5}},type:"if",locations:[{start:{line:499,column:4},end:{line:501,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:499},55:{loc:{start:{line:502,column:4},end:{line:504,column:5}},type:"if",locations:[{start:{line:502,column:4},end:{line:504,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:502},56:{loc:{start:{line:502,column:8},end:{line:502,column:62}},type:"binary-expr",locations:[{start:{line:502,column:8},end:{line:502,column:32}},{start:{line:502,column:36},end:{line:502,column:62}}],line:502},57:{loc:{start:{line:510,column:4},end:{line:512,column:5}},type:"if",locations:[{start:{line:510,column:4},end:{line:512,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:510},58:{loc:{start:{line:510,column:8},end:{line:510,column:105}},type:"binary-expr",locations:[{start:{line:510,column:8},end:{line:510,column:16}},{start:{line:510,column:20},end:{line:510,column:28}},{start:{line:510,column:32},end:{line:510,column:71}},{start:{line:510,column:75},end:{line:510,column:83}},{start:{line:510,column:87},end:{line:510,column:105}}],line:510},59:{loc:{start:{line:520,column:6},end:{line:523,column:7}},type:"if",locations:[{start:{line:520,column:6},end:{line:523,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:520},60:{loc:{start:{line:520,column:10},end:{line:520,column:84}},type:"binary-expr",locations:[{start:{line:520,column:10},end:{line:520,column:50}},{start:{line:520,column:54},end:{line:520,column:84}}],line:520},61:{loc:{start:{line:524,column:6},end:{line:526,column:7}},type:"if",locations:[{start:{line:524,column:6},end:{line:526,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:524},62:{loc:{start:{line:527,column:6},end:{line:530,column:7}},type:"if",locations:[{start:{line:527,column:6},end:{line:530,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:527},63:{loc:{start:{line:531,column:6},end:{line:534,column:7}},type:"if",locations:[{start:{line:531,column:6},end:{line:534,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:531},64:{loc:{start:{line:535,column:34},end:{line:535,column:91}},type:"cond-expr",locations:[{start:{line:535,column:64},end:{line:535,column:73}},{start:{line:535,column:76},end:{line:535,column:91}}],line:535},65:{loc:{start:{line:590,column:7},end:{line:599,column:4}},type:"binary-expr",locations:[{start:{line:590,column:7},end:{line:590,column:19}},{start:{line:590,column:36},end:{line:599,column:4}}],line:590},66:{loc:{start:{line:599,column:6},end:{line:608,column:4}},type:"binary-expr",locations:[{start:{line:599,column:6},end:{line:599,column:18}},{start:{line:599,column:35},end:{line:608,column:4}}],line:599},67:{loc:{start:{line:608,column:6},end:{line:617,column:4}},type:"binary-expr",locations:[{start:{line:608,column:6},end:{line:608,column:18}},{start:{line:608,column:35},end:{line:617,column:4}}],line:608},68:{loc:{start:{line:617,column:6},end:{line:626,column:4}},type:"binary-expr",locations:[{start:{line:617,column:6},end:{line:617,column:23}},{start:{line:617,column:40},end:{line:626,column:4}}],line:617},69:{loc:{start:{line:618,column:10},end:{line:618,column:58}},type:"cond-expr",locations:[{start:{line:618,column:38},end:{line:618,column:45}},{start:{line:618,column:48},end:{line:618,column:58}}],line:618},70:{loc:{start:{line:626,column:53},end:{line:631,column:5}},type:"binary-expr",locations:[{start:{line:626,column:53},end:{line:626,column:61}},{start:{line:626,column:65},end:{line:626,column:80}},{start:{line:626,column:97},end:{line:631,column:5}}],line:626},71:{loc:{start:{line:631,column:7},end:{line:636,column:5}},type:"binary-expr",locations:[{start:{line:631,column:7},end:{line:631,column:16}},{start:{line:631,column:20},end:{line:631,column:36}},{start:{line:631,column:53},end:{line:636,column:5}}],line:631}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0,81:0,82:0,83:0,84:0,85:0,86:0,87:0,88:0,89:0,90:0,91:0,92:0,93:0,94:0,95:0,96:0,97:0,98:0,99:0,100:0,101:0,102:0,103:0,104:0,105:0,106:0,107:0,108:0,109:0,110:0,111:0,112:0,113:0,114:0,115:0,116:0,117:0,118:0,119:0,120:0,121:0,122:0,123:0,124:0,125:0,126:0,127:0,128:0,129:0,130:0,131:0,132:0,133:0,134:0,135:0,136:0,137:0,138:0,139:0,140:0,141:0,142:0,143:0,144:0,145:0,146:0,147:0,148:0,149:0,150:0,151:0,152:0,153:0,154:0,155:0,156:0,157:0,158:0,159:0,160:0,161:0,162:0,163:0,164:0,165:0,166:0,167:0,168:0,169:0,170:0,171:0,172:0,173:0,174:0,175:0,176:0,177:0,178:0,179:0,180:0,181:0,182:0,183:0,184:0,185:0,186:0,187:0,188:0,189:0,190:0,191:0,192:0,193:0,194:0,195:0,196:0,197:0,198:0,199:0,200:0,201:0,202:0,203:0,204:0,205:0,206:0,207:0,208:0,209:0,210:0,211:0,212:0,213:0,214:0,215:0,216:0,217:0,218:0,219:0,220:0,221:0,222:0,223:0,224:0,225:0,226:0,227:0,228:0,229:0,230:0,231:0,232:0,233:0,234:0,235:0,236:0,237:0,238:0,239:0,240:0,241:0,242:0,243:0,244:0,245:0,246:0,247:0,248:0,249:0,250:0,251:0,252:0,253:0,254:0,255:0,256:0,257:0,258:0,259:0,260:0,261:0,262:0,263:0,264:0,265:0,266:0,267:0,268:0,269:0,270:0,271:0,272:0,273:0,274:0,275:0,276:0,277:0,278:0,279:0,280:0,281:0,282:0,283:0,284:0,285:0,286:0,287:0,288:0,289:0,290:0,291:0,292:0,293:0,294:0,295:0,296:0,297:0,298:0,299:0,300:0,301:0,302:0,303:0,304:0,305:0,306:0,307:0,308:0,309:0,310:0,311:0,312:0,313:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0},b:{0:[0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0],15:[0,0],16:[0,0],17:[0,0],18:[0,0],19:[0,0],20:[0,0],21:[0,0],22:[0,0],23:[0,0],24:[0,0],25:[0,0],26:[0,0],27:[0,0],28:[0,0],29:[0,0],30:[0,0],31:[0,0],32:[0,0],33:[0,0],34:[0,0],35:[0,0],36:[0,0],37:[0,0],38:[0,0],39:[0,0],40:[0,0],41:[0,0],42:[0,0,0],43:[0,0],44:[0,0],45:[0,0],46:[0,0],47:[0,0],48:[0,0],49:[0,0],50:[0,0],51:[0,0],52:[0,0],53:[0,0],54:[0,0],55:[0,0],56:[0,0],57:[0,0],58:[0,0,0,0,0],59:[0,0],60:[0,0],61:[0,0],62:[0,0],63:[0,0],64:[0,0],65:[0,0],66:[0,0],67:[0,0],68:[0,0],69:[0,0],70:[0,0,0],71:[0,0,0]},inputSourceMap:{version:3,names:["React","memo","useCallback","useEffect","useMemo","useState","Group","Rect","useStrictMode","enableStrictMode","DateTime","Duration","KonvaText","findResourceByCoordinate","findResourceIndexByCoordinate","useTimelineContext","getContrastColor","getRGB","getRGBA","RGBFromRGBA","getLineData","LINE_OFFSET","connectedTasks","getTaskYCoordinate","onEndTimeRange","TASK_BORDER_RADIUS","TASK_HEIGHT_OFFSET","TASK_OFFSET_Y","LineKonva","TaskResizeHandle","TASK_DEFAULT_FILL","INVALIDFILL_TASK_DEFAULT_FILL","DISABLED_TASK_DEFAULT_FILL","TASK_DEFAULT_STROKE_WIDTH","TASK_DEFAULT_STROKE_FILL","TaskLine","data","fill","onLeave","onOver","x","y","width","fillToComplete","disabled","onTaskEvent","workLine","columnWidth","displayTasksLabel","dragResolution","sizeInUnits","dragSizeInUnits","unit","dragUnit","enableDrag","enableResize","interval","onTaskClick","onTaskChange","resolution","resources","rowHeight","drawRange","enableTaskPattern","allValidTasks","enableLines","validLine","externalRangeInMillis","id","taskId","completedPercentage","dragging","setDragging","resizing","setResizing","frontLine","setFrontLine","backLine","setBackLine","anchorPointFront","setAnchorPointFront","anchorPointBack","setAnchorPointBack","connectFrontLine","result","filter","i","startId","connectBackLine","endId","opacity","mainColor","rgb","r","g","b","error","mainStroke","secondaryStroke","initialTaskDimensions","row","taskHeight","taskDimensions","setTaskDimensions","finalPoint","timeStart","fromMillis","end","startOffsetInUnit","diff","start","as","startPoint","dragSnapInPX","resolutionInSnapUnit","fromObject","dragSnapInResUnit","dragSnapInPx","isNaN","taskHandlerBorder","getDragPoint","e","target","dragX","dragY","onTaskMouseEvent","callback","stage","getStage","point","getPointerPosition","onClick","onTaskLeave","cancelBubble","container","style","cursor","onTaskOver","getXCoordinate","offset","getTaskXCoordinate","startTime","onDragStart","dragFinalX","Math","ceil","xCoordinate","resourceIndex","yCoordinate","workLineArr","lineData","anchorArr","push","onDragMove","minY","maxY","length","taskFinalPoint","controlledY","controlledX","dimensions","onDragEnd","resourceId","time","relatedTasks","addTime","tasksId","allKLine","maxAddTime","textOffsets","textSize","textStroke","textWidth","onResizeStart","onResizeMove","handler","taskX","taskWidth","handlerX","taskEndX","onResizeEnd","percentage","offsetPercentageX","offsetPercentageY","incompleteColor","colorToComplete","a","rgba","noPatternColor","isPercentage","arrGradientColor","colors","mainColorLineNumber","Number","toFixed","incompleteColorLineNumber","mainLineColorCount","incompleteLineColorCount","newColor","Array","forEach","_","index","gradientNumber","finalGradientX","cos","finalGradientY","sin","createElement","draggable","cornerRadius","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","height","stroke","strokeWidth","onMouseLeave","onMouseMove","onMouseOver","ellipsis","fontSize","text","wrap","position","label","map","key","points","TaskDocs"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/TaskLine/index.tsx"],sourcesContent:['import React, { memo, useCallback, useEffect, useMemo, useState } from "react";\nimport { Group, Rect, useStrictMode as enableStrictMode } from "react-konva";\nimport { KonvaEventObject } from "konva/lib/Node";\nimport { DateTime, Duration } from "luxon";\n\nimport { KonvaText } from "../../../@konva";\nimport { findResourceByCoordinate, findResourceIndexByCoordinate } from "../../../resources/utils/resources";\nimport { useTimelineContext } from "../../../timeline/TimelineContext";\nimport { KonvaDrawable, KonvaPoint } from "../../../utils/konva";\nimport { getContrastColor, getRGB, getRGBA, RGBFromRGBA } from "../../../utils/theme";\nimport { AnchorPoint, getLineData, LINE_OFFSET } from "../../utils/line";\nimport {\n  connectedTasks,\n  getTaskYCoordinate,\n  onEndTimeRange,\n  TASK_BORDER_RADIUS,\n  TASK_HEIGHT_OFFSET,\n  TASK_OFFSET_Y,\n  TaskData,\n  TaskDimensions,\n} from "../../utils/tasks";\nimport LineKonva from "../Line";\nimport TaskResizeHandle from "../TaskResizeHandle";\n\ntype TaskMouseEventHandler = (taskId: string, point: KonvaPoint) => void;\n\ntype TaskProps = KonvaDrawable &\n  KonvaPoint & {\n    /**\n     * Task data (id, label, resourceId, time)\n     */\n    data: TaskData;\n    /**\n     * On mouse leave event handler\n     */\n    onLeave: TaskMouseEventHandler;\n    /**\n     * On mouse over event handler\n     */\n    onOver: TaskMouseEventHandler;\n    /**\n     * The width of the task\n     */\n    width: number;\n    /**\n     * Prop that indicate disabled item\n     */\n    disabled?: boolean;\n    /**\n     * Prop that indicate an event is executing\n     */\n    onTaskEvent: (value: boolean) => void;\n    workLine: (id: string[]) => void;\n  };\n\nconst TASK_DEFAULT_FILL = "#000080";\nconst INVALIDFILL_TASK_DEFAULT_FILL = "rgb(255,0,0)";\nconst DISABLED_TASK_DEFAULT_FILL = "rgba(96,96,96, 0.8)";\nconst TASK_DEFAULT_STROKE_WIDTH = 2;\nconst TASK_DEFAULT_STROKE_FILL = "rgb(0,0,0)";\n\nenableStrictMode(true);\n\n/**\n * This component renders a simple task as a rectangle inside a canvas.\n * Each task is rendered by `TasksLayer` component, with a loop on each task provided to `KonvaTimeline`.\n * `TasksLayer` is also responsible of handling callback for task components.\n *\n * Supported events (click, leave, over) respond with callbacks of type:\n * <br />\n *  `(taskId: string, point: KonvaPoint) => void`\n *\n * The playground has a simulated canvas with height: 200px and width: 100%\n */\nconst TaskLine = ({\n  data,\n  fill = TASK_DEFAULT_FILL,\n  onLeave,\n  onOver,\n  x,\n  y,\n  width,\n  fillToComplete,\n  disabled,\n  onTaskEvent,\n  workLine,\n}: TaskProps) => {\n  const {\n    columnWidth,\n    displayTasksLabel,\n    dragResolution: { sizeInUnits: dragSizeInUnits, unit: dragUnit },\n    enableDrag,\n    enableResize,\n    interval,\n    onTaskClick,\n    onTaskChange,\n    resolution,\n    resources,\n    rowHeight,\n    drawRange,\n    enableTaskPattern,\n    allValidTasks,\n    enableLines,\n    validLine,\n    externalRangeInMillis,\n  } = useTimelineContext();\n\n  const { id: taskId, completedPercentage } = data;\n  const { sizeInUnits, unit } = resolution;\n\n  const [dragging, setDragging] = useState(false);\n  const [resizing, setResizing] = useState(false);\n  const [frontLine, setFrontLine] = useState(false);\n  const [backLine, setBackLine] = useState(false);\n  const [anchorPointFront, setAnchorPointFront] = useState<AnchorPoint[]>();\n  const [anchorPointBack, setAnchorPointBack] = useState<AnchorPoint[]>();\n\n  const connectFrontLine = useMemo(() => {\n    const result = validLine?.filter((i) => i.startId === data.id);\n    return result;\n  }, [validLine, data]);\n\n  const connectBackLine = useMemo(() => {\n    const result = validLine?.filter((i) => i.endId === data.id);\n    return result;\n  }, [validLine, data]);\n\n  const opacity = useMemo(() => (dragging || resizing ? 0.5 : 1), [dragging, resizing]);\n\n  const mainColor = useMemo(() => {\n    if (disabled) {\n      return DISABLED_TASK_DEFAULT_FILL;\n    }\n    try {\n      const rgb = getRGB(fill);\n      return ` rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n    } catch (error) {\n      return INVALIDFILL_TASK_DEFAULT_FILL;\n    }\n  }, [fill, disabled]);\n\n  const mainStroke = useMemo(() => {\n    if (disabled) {\n      return DISABLED_TASK_DEFAULT_FILL;\n    }\n    return TASK_DEFAULT_STROKE_FILL;\n  }, [disabled]);\n\n  const secondaryStroke = useMemo(() => {\n    return opacity < 1 ? mainStroke : mainColor;\n  }, [opacity, mainColor, mainStroke]);\n\n  const initialTaskDimensions = useMemo((): TaskDimensions => {\n    const row = findResourceIndexByCoordinate(y, rowHeight, resources);\n    return { row, width, x, y };\n  }, [resources, rowHeight, width, x, y]);\n\n  const taskHeight = useMemo(() => rowHeight * TASK_HEIGHT_OFFSET, [rowHeight]);\n\n  const [taskDimensions, setTaskDimensions] = useState(initialTaskDimensions);\n\n  const finalPoint = useMemo(() => {\n    const timeStart = DateTime.fromMillis(externalRangeInMillis.end);\n    const startOffsetInUnit = timeStart.diff(interval.start!).as(resolution.unit);\n    return (startOffsetInUnit * columnWidth) / resolution.sizeInUnits;\n  }, [externalRangeInMillis, columnWidth, resolution, interval]);\n\n  const startPoint = useMemo(() => {\n    const timeStart = DateTime.fromMillis(externalRangeInMillis.start);\n    const startOffsetInUnit = timeStart.diff(interval.start!).as(resolution.unit);\n    return (startOffsetInUnit * columnWidth) / resolution.sizeInUnits;\n  }, [externalRangeInMillis, columnWidth, resolution, interval]);\n\n  useEffect(() => {\n    const row = findResourceIndexByCoordinate(y, rowHeight, resources);\n    setTaskDimensions({ row, width, x, y });\n  }, [resources, rowHeight, width, x, y]);\n\n  const dragSnapInPX = useMemo(() => {\n    const resolutionInSnapUnit = Duration.fromObject({ [unit]: sizeInUnits }).as(dragUnit);\n    const dragSnapInResUnit = dragSizeInUnits / resolutionInSnapUnit;\n    const dragSnapInPx = dragSnapInResUnit * columnWidth;\n    if (!dragSnapInPx || isNaN(dragSnapInPx)) {\n      return 1;\n    }\n    return dragSnapInPx;\n  }, [columnWidth, dragUnit, dragSizeInUnits, sizeInUnits, unit]);\n\n  const taskHandlerBorder = useMemo(() => {\n    if (taskDimensions.x + taskDimensions.width >= finalPoint) {\n      return 2;\n    }\n    return 0;\n  }, [taskDimensions, finalPoint]);\n\n  const getDragPoint = useCallback((e: KonvaEventObject<DragEvent>): KonvaPoint => {\n    const { target } = e;\n    const dragX = target.x();\n    const dragY = target.y();\n\n    return { x: dragX, y: dragY };\n  }, []);\n\n  const onTaskMouseEvent = useCallback(\n    (e: KonvaEventObject<MouseEvent>, callback: TaskMouseEventHandler) => {\n      onTaskEvent(true);\n      const stage = e.target.getStage();\n      if (!stage) {\n        return;\n      }\n\n      const point = stage.getPointerPosition();\n      if (!point) {\n        return;\n      }\n      callback(taskId, { ...point, x: point.x + drawRange.start });\n    },\n    [taskId, drawRange, onTaskEvent]\n  );\n\n  const onClick = useCallback(() => onTaskClick && onTaskClick(data), [data, onTaskClick]);\n\n  const onTaskLeave = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      e.cancelBubble = true;\n      if (resizing) {\n        return;\n      }\n\n      const stage = e.target.getStage();\n      if (!stage) {\n        return;\n      }\n\n      if (enableDrag) {\n        stage.container().style.cursor = "default";\n      }\n\n      onTaskMouseEvent(e, onLeave);\n      onTaskEvent(false);\n    },\n    [enableDrag, onLeave, onTaskMouseEvent, resizing, onTaskEvent]\n  );\n\n  const onTaskOver = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (disabled) {\n        return;\n      }\n      e.cancelBubble = true;\n      if (resizing) {\n        return;\n      }\n\n      const stage = e.target.getStage();\n      if (!stage) {\n        return;\n      }\n\n      if (enableDrag) {\n        stage.container().style.cursor = "move";\n      }\n\n      onTaskMouseEvent(e, onOver);\n    },\n    [enableDrag, onOver, onTaskMouseEvent, resizing, disabled]\n  );\n\n  const getXCoordinate = useCallback(\n    (offset: number) => (offset * columnWidth) / resolution.sizeInUnits,\n    [columnWidth, resolution.sizeInUnits]\n  );\n\n  const getTaskXCoordinate = useCallback(\n    (startTime: number) => {\n      const timeStart = DateTime.fromMillis(startTime);\n      const startOffsetInUnit = timeStart.diff(interval.start!).as(resolution.unit);\n      return getXCoordinate(startOffsetInUnit);\n    },\n    [getXCoordinate, interval, resolution.unit]\n  );\n\n  const onDragStart = useCallback(\n    (e: KonvaEventObject<DragEvent>) => {\n      const { x, y } = getDragPoint(e);\n      const dragFinalX = Math.ceil(x / dragSnapInPX) * dragSnapInPX;\n      const xCoordinate = dragFinalX < 0 ? 0 : dragFinalX;\n      const resourceIndex = findResourceIndexByCoordinate(y, rowHeight, resources);\n      const yCoordinate = getTaskYCoordinate(resourceIndex, rowHeight);\n      const point = { x: xCoordinate, y: yCoordinate };\n      ///ToolTip disappears\n      onLeave(taskId, point);\n      setDragging(true);\n      const workLineArr = [];\n      if (connectFrontLine) {\n        setFrontLine(true);\n        const lineData = getLineData(connectFrontLine, rowHeight, getTaskXCoordinate, getTaskYCoordinate, "front");\n        setAnchorPointFront(lineData.anchorArr);\n        workLineArr.push(...lineData.workLineArr);\n      }\n      if (connectBackLine) {\n        setBackLine(true);\n        const lineData = getLineData(connectBackLine, rowHeight, getTaskXCoordinate, getTaskYCoordinate, "back");\n        setAnchorPointBack(lineData.anchorArr);\n        workLineArr.push(...lineData.workLineArr);\n      }\n      workLine(workLineArr);\n    },\n    [\n      getDragPoint,\n      onLeave,\n      resources,\n      rowHeight,\n      taskId,\n      dragSnapInPX,\n      workLine,\n      getTaskXCoordinate,\n      connectBackLine,\n      connectFrontLine,\n    ]\n  );\n\n  const onDragMove = useCallback(\n    (e: KonvaEventObject<DragEvent>) => {\n      const { x, y } = getDragPoint(e);\n      const dragFinalX = Math.ceil(x / dragSnapInPX) * dragSnapInPX;\n      const xCoordinate = dragFinalX < startPoint ? startPoint : dragFinalX;\n      const minY = rowHeight + rowHeight * TASK_OFFSET_Y;\n      const maxY = rowHeight * (resources.length - 1) + rowHeight * TASK_OFFSET_Y;\n      const taskFinalPoint = finalPoint - taskDimensions.width;\n      let controlledY = y;\n      let controlledX = xCoordinate;\n      if (controlledY < minY) {\n        controlledY = minY;\n      }\n      if (controlledY > maxY) {\n        controlledY = maxY;\n      }\n\n      if (dragFinalX >= taskFinalPoint) {\n        controlledX = taskFinalPoint;\n      }\n\n      const point = { x: controlledX, y: controlledY };\n\n      setTaskDimensions((dimensions) => ({ ...dimensions, ...point }));\n    },\n    [dragSnapInPX, getDragPoint, resources, finalPoint, rowHeight, taskDimensions, startPoint]\n  );\n\n  const onDragEnd = useCallback(\n    (e: KonvaEventObject<DragEvent>) => {\n      setDragging(false);\n      if (!onTaskChange) {\n        return;\n      }\n\n      const { x, y } = getDragPoint(e);\n      const dragFinalX = Math.ceil(x / dragSnapInPX) * dragSnapInPX;\n      const xCoordinate = dragFinalX < 0 ? 0 : dragFinalX;\n      const resourceIndex = findResourceIndexByCoordinate(y + taskHeight / 2, rowHeight, resources);\n      const yCoordinate = getTaskYCoordinate(resourceIndex, rowHeight);\n      const point = { x: xCoordinate, y: yCoordinate };\n      setTaskDimensions((dimensions) => ({ ...dimensions, ...point }));\n\n      const { id: resourceId } = findResourceByCoordinate(y, rowHeight, resources);\n      const time = onEndTimeRange(taskDimensions, resolution, columnWidth, interval);\n      setFrontLine(false);\n      setBackLine(false);\n      workLine && workLine([]);\n      if (data.relatedTasks) {\n        const addTime = +time.end - +data.time.end;\n        const tasksId = connectedTasks(data, allValidTasks, addTime, externalRangeInMillis);\n        onTaskChange({ ...data, resourceId, time }, { tasksId: tasksId.allKLine, addTime: tasksId.maxAddTime });\n        return;\n      }\n      onTaskChange({ ...data, resourceId, time });\n    },\n    [\n      rowHeight,\n      resources,\n      onTaskChange,\n      data,\n      dragSnapInPX,\n      getDragPoint,\n      taskHeight,\n      taskDimensions,\n      resolution,\n      columnWidth,\n      interval,\n      workLine,\n      allValidTasks,\n      externalRangeInMillis,\n    ]\n  );\n\n  const textOffsets = useMemo(() => taskHeight / 3, [taskHeight]);\n\n  const textSize = useMemo(() => taskHeight / 2.5, [taskHeight]);\n\n  const textStroke = useMemo(() => {\n    try {\n      return getContrastColor(fill);\n    } catch (error) {\n      return "rgb(0,0,0)";\n    }\n  }, [fill]);\n\n  const textWidth = useMemo(() => taskDimensions.width - textOffsets * 2, [taskDimensions, textOffsets]);\n\n  const onResizeStart = useCallback(\n    (e: KonvaEventObject<DragEvent>) => {\n      onTaskEvent(true);\n      e.cancelBubble = true;\n      const { x, y } = getDragPoint(e);\n      const dragFinalX = Math.ceil(x / dragSnapInPX) * dragSnapInPX;\n      const xCoordinate = dragFinalX < 0 ? 0 : dragFinalX;\n      const resourceIndex = findResourceIndexByCoordinate(y, rowHeight, resources);\n      const yCoordinate = getTaskYCoordinate(resourceIndex, rowHeight);\n      const point = { x: xCoordinate, y: yCoordinate };\n      onLeave(taskId, point);\n      setResizing(true);\n      if (x > 0) {\n        if (connectFrontLine) {\n          setFrontLine(true);\n          const lineData = getLineData(connectFrontLine, rowHeight, getTaskXCoordinate, getTaskYCoordinate, "front");\n          setAnchorPointFront(lineData.anchorArr);\n          workLine(lineData.workLineArr);\n        }\n      } else {\n        if (connectBackLine) {\n          setBackLine(true);\n          const lineData = getLineData(connectBackLine, rowHeight, getTaskXCoordinate, getTaskYCoordinate, "back");\n          setAnchorPointBack(lineData.anchorArr);\n          workLine(lineData.workLineArr);\n        }\n      }\n    },\n    [\n      dragSnapInPX,\n      getDragPoint,\n      onLeave,\n      resources,\n      rowHeight,\n      taskId,\n      onTaskEvent,\n      workLine,\n      getTaskXCoordinate,\n      connectBackLine,\n      connectFrontLine,\n    ]\n  );\n\n  const onResizeMove = useCallback(\n    (e: KonvaEventObject<DragEvent>, handler: "lx" | "rx") => {\n      e.cancelBubble = true;\n      const { x: dragX } = getDragPoint(e);\n      setTaskDimensions((taskDimensions) => {\n        const { x: taskX, width: taskWidth } = taskDimensions;\n        const handlerX = taskX + dragX;\n        const taskEndX = taskX + taskWidth;\n\n        switch (handler) {\n          case "rx":\n            if (handlerX <= taskX + TASK_BORDER_RADIUS) {\n              return { ...taskDimensions };\n            }\n            if (handlerX >= finalPoint) {\n              return { ...taskDimensions, width: finalPoint - taskX };\n            }\n\n            return { ...taskDimensions, width: handlerX - taskX };\n          case "lx":\n            if (handlerX >= taskEndX - TASK_BORDER_RADIUS) {\n              return { ...taskDimensions };\n            }\n            if (handlerX <= startPoint) {\n              return { ...taskDimensions };\n            }\n            return { ...taskDimensions, x: handlerX, width: taskEndX - handlerX };\n        }\n      });\n    },\n    [getDragPoint, finalPoint, startPoint]\n  );\n\n  const onResizeEnd = useCallback(\n    (e: KonvaEventObject<DragEvent>) => {\n      setBackLine(false);\n      setFrontLine(false);\n      onTaskEvent(false);\n      e.cancelBubble = true;\n      setResizing(false);\n      if (!onTaskChange) {\n        return;\n      }\n      const time = onEndTimeRange(taskDimensions, resolution, columnWidth, interval);\n      workLine && workLine([]);\n      if (enableLines && data.relatedTasks && frontLine) {\n        const addTime = +time.end - +data.time.end;\n        const tasksId = connectedTasks(data, allValidTasks, addTime, externalRangeInMillis);\n        onTaskChange({ ...data, time }, { tasksId: tasksId.allKLine, addTime: tasksId.maxAddTime });\n        return;\n      }\n      onTaskChange({ ...data, time });\n    },\n    [\n      onTaskChange,\n      data,\n      taskDimensions,\n      resolution,\n      columnWidth,\n      interval,\n      onTaskEvent,\n      enableLines,\n      allValidTasks,\n      workLine,\n      frontLine,\n      externalRangeInMillis,\n    ]\n  );\n  const percentage = useMemo(() => {\n    if (completedPercentage === 0) {\n      return 0.1;\n    }\n    if (completedPercentage) {\n      return (taskDimensions.width / 100) * completedPercentage;\n    }\n    return taskDimensions.width;\n  }, [taskDimensions, completedPercentage]);\n\n  const offsetPercentageX = useMemo(() => {\n    if (percentage < 22) {\n      return percentage;\n    }\n    if (completedPercentage! === 100) {\n      return 30;\n    }\n    return 20;\n  }, [completedPercentage, percentage]);\n\n  const offsetPercentageY = useMemo(() => taskHeight / 4, [taskHeight]);\n\n  const incompleteColor = useMemo(() => {\n    try {\n      if (disabled) {\n        return DISABLED_TASK_DEFAULT_FILL;\n      }\n      if (fillToComplete) {\n        const colorToComplete = getRGBA(fillToComplete);\n        if (colorToComplete.a) {\n          const rgba = ` rgba(${colorToComplete.r}, ${colorToComplete.g}, ${colorToComplete.b},${colorToComplete.a})`;\n          return rgba;\n        }\n        const rgb = ` rgb(${colorToComplete.r}, ${colorToComplete.g}, ${colorToComplete.b})`;\n        return rgb;\n      }\n      const opacity = 0.6;\n      const rgb = getRGB(fill);\n      //const rgba = ` rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${opacity})`;\n      //return rgba;\n      return RGBFromRGBA(opacity, rgb);\n    } catch (error) {\n      return "rgba(255, 0, 0, 0.6)";\n    }\n  }, [fill, fillToComplete, disabled]);\n\n  const noPatternColor = useMemo(() => {\n    if (disabled) {\n      return DISABLED_TASK_DEFAULT_FILL;\n    }\n    if (dragging || resizing) {\n      return incompleteColor;\n    }\n    return enableTaskPattern ? "transparent" : incompleteColor;\n  }, [incompleteColor, enableTaskPattern, disabled, dragging, resizing]);\n\n  const isPercentage = useMemo(() => {\n    if (typeof completedPercentage !== "number") {\n      return false;\n    }\n    if (completedPercentage >= 0 && completedPercentage <= 100) {\n      return true;\n    }\n    return false;\n  }, [completedPercentage]);\n\n  const arrGradientColor: (number | string)[] = useMemo(() => {\n    const colors: (number | string)[] = [];\n    const length = 300;\n    if (dragging || resizing || typeof completedPercentage !== "number" || disabled || !enableTaskPattern) {\n      return [];\n    }\n    const mainColorLineNumber = Number((11 / (taskDimensions.width / 300)).toFixed(0));\n    const incompleteColorLineNumber = Number((16 / (taskDimensions.width / 300)).toFixed(0));\n    let mainLineColorCount = 0;\n    let incompleteLineColorCount = 0;\n    let newColor: number = 0;\n    Array(length)\n      .fill(0)\n      .forEach((_, index) => {\n        const gradientNumber = index * 0.0033;\n        if (mainLineColorCount < mainColorLineNumber && incompleteLineColorCount === 0) {\n          newColor = gradientNumber;\n          mainLineColorCount++;\n        }\n        if (incompleteLineColorCount !== 0) {\n          incompleteLineColorCount++;\n        }\n        if (mainLineColorCount === mainColorLineNumber) {\n          incompleteLineColorCount++;\n          mainLineColorCount = 0;\n        }\n        if (incompleteLineColorCount === incompleteColorLineNumber) {\n          incompleteLineColorCount = 0;\n          mainLineColorCount = 0;\n        }\n        colors.push(gradientNumber, newColor === gradientNumber ? mainColor : incompleteColor);\n      });\n    return colors;\n  }, [\n    mainColor,\n    incompleteColor,\n    dragging,\n    resizing,\n    taskDimensions,\n    completedPercentage,\n    disabled,\n    enableTaskPattern,\n  ]);\n\n  const finalGradientX = useMemo(() => {\n    return taskDimensions.width * Math.cos(45);\n  }, [taskDimensions]);\n  const finalGradientY = useMemo(() => {\n    return taskDimensions.width * Math.sin(45);\n  }, [taskDimensions]);\n\n  return (\n    <Group>\n      <Group\n        x={taskDimensions.x}\n        y={taskDimensions.y}\n        draggable={enableDrag}\n        onClick={onClick}\n        onDragEnd={onDragEnd}\n        onDragMove={onDragMove}\n        onDragStart={onDragStart}\n      >\n        <Group>\n          <Rect\n            id={taskId}\n            cornerRadius={TASK_BORDER_RADIUS}\n            fillLinearGradientStartPoint={{ x: 0, y: 0 }}\n            fillLinearGradientEndPoint={{ x: finalGradientX, y: finalGradientY }}\n            fillLinearGradientColorStops={arrGradientColor}\n            height={taskHeight}\n            opacity={opacity}\n            stroke={secondaryStroke}\n            strokeWidth={TASK_DEFAULT_STROKE_WIDTH}\n            width={taskDimensions.width}\n          />\n          <Rect\n            id={taskId}\n            cornerRadius={TASK_BORDER_RADIUS}\n            fillLinearGradientStartPoint={{ x: 0, y: 0 }}\n            fillLinearGradientEndPoint={{ x: percentage, y: 0 }}\n            fillLinearGradientColorStops={[1, mainColor, 1, noPatternColor]}\n            height={taskHeight}\n            onMouseLeave={onTaskLeave}\n            onMouseMove={onTaskOver}\n            onMouseOver={onTaskOver}\n            opacity={opacity}\n            stroke={mainStroke}\n            strokeWidth={1}\n            width={taskDimensions.width}\n          />\n        </Group>\n        {isPercentage && (\n          <KonvaText\n            fill={textStroke}\n            ellipsis\n            fontSize={10}\n            text={completedPercentage + "%"}\n            width={textWidth}\n            wrap="none"\n            x={1 + percentage - offsetPercentageX}\n            y={taskHeight - offsetPercentageY}\n          />\n        )}\n        {enableResize && (\n          <TaskResizeHandle\n            height={taskHeight}\n            onResizeStart={onResizeStart}\n            onResizeMove={onResizeMove}\n            onResizeEnd={onResizeEnd}\n            opacity={opacity}\n            position="lx"\n            taskId={taskId}\n            xCoordinate={-1}\n          />\n        )}\n        {enableResize && (\n          <TaskResizeHandle\n            height={taskHeight}\n            onResizeStart={onResizeStart}\n            onResizeMove={onResizeMove}\n            onResizeEnd={onResizeEnd}\n            opacity={opacity}\n            position="rx"\n            taskId={taskId}\n            xCoordinate={taskDimensions.width - taskHandlerBorder}\n          />\n        )}\n        {displayTasksLabel && (\n          <KonvaText\n            fill={completedPercentage === 0 ? "black" : textStroke}\n            ellipsis\n            fontSize={textSize}\n            text={data.label}\n            width={textWidth}\n            wrap="none"\n            x={textOffsets}\n            y={textOffsets - offsetPercentageY}\n          />\n        )}\n      </Group>\n      <Group>\n        {backLine && anchorPointBack && (\n          <Group>\n            {anchorPointBack.map((i, index) => {\n              return (\n                <LineKonva\n                  key={"AB" + index}\n                  points={[\n                    i.x,\n                    i.y,\n                    i.x + 20,\n                    i.y,\n                    taskDimensions.x - 20,\n                    taskDimensions.y + taskHeight / 2,\n                    taskDimensions.x,\n                    taskDimensions.y + taskHeight / 2,\n                  ]}\n                />\n              );\n            })}\n          </Group>\n        )}\n        {frontLine && anchorPointFront && (\n          <Group>\n            {anchorPointFront.map((i, index) => {\n              return (\n                <LineKonva\n                  key={"AF" + index}\n                  points={[\n                    taskDimensions.x + taskDimensions.width,\n                    taskDimensions.y + taskHeight / 2,\n                    taskDimensions.x + taskDimensions.width + LINE_OFFSET,\n                    taskDimensions.y + taskHeight / 2,\n                    i.x - LINE_OFFSET,\n                    i.y,\n                    i.x,\n                    i.y,\n                  ]}\n                />\n              );\n            })}\n          </Group>\n        )}\n      </Group>\n    </Group>\n  );\n};\n\nexport const TaskDocs = TaskLine;\n\nexport default memo(TaskLine);\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"37a0a1a801eb24966a57dfdd8756fa28bf38e458"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"37a0a1a801eb24966a57dfdd8756fa28bf38e458"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_2me5p12icw=function(){return actualCoverage},actualCoverage}cov_2me5p12icw();const TASK_DEFAULT_FILL=(cov_2me5p12icw().s[0]++,"#000080"),INVALIDFILL_TASK_DEFAULT_FILL=(cov_2me5p12icw().s[1]++,"rgb(255,0,0)"),DISABLED_TASK_DEFAULT_FILL=(cov_2me5p12icw().s[2]++,"rgba(96,96,96, 0.8)"),TASK_DEFAULT_STROKE_WIDTH=(cov_2me5p12icw().s[3]++,2),TASK_DEFAULT_STROKE_FILL=(cov_2me5p12icw().s[4]++,"rgb(0,0,0)");cov_2me5p12icw().s[5]++,(0,ReactKonva.eD)(!0),cov_2me5p12icw().s[6]++;const TaskLine=({data:data,fill:fill=(cov_2me5p12icw().b[0][0]++,TASK_DEFAULT_FILL),onLeave:onLeave,onOver:onOver,x:x,y:y,width:width,fillToComplete:fillToComplete,disabled:disabled,onTaskEvent:onTaskEvent,workLine:workLine})=>{cov_2me5p12icw().f[0]++;const{columnWidth:columnWidth,displayTasksLabel:displayTasksLabel,dragResolution:{sizeInUnits:dragSizeInUnits,unit:dragUnit},enableDrag:enableDrag,enableResize:enableResize,interval:interval,onTaskClick:onTaskClick,onTaskChange:onTaskChange,resolution:resolution,resources:resources,rowHeight:rowHeight,drawRange:drawRange,enableTaskPattern:enableTaskPattern,allValidTasks:allValidTasks,enableLines:enableLines,validLine:validLine,externalRangeInMillis:externalRangeInMillis}=(cov_2me5p12icw().s[7]++,(0,TimelineContext._)()),{id:taskId,completedPercentage:completedPercentage}=(cov_2me5p12icw().s[8]++,data),{sizeInUnits:sizeInUnits,unit:unit}=(cov_2me5p12icw().s[9]++,resolution),[dragging,setDragging]=(cov_2me5p12icw().s[10]++,(0,react.useState)(!1)),[resizing,setResizing]=(cov_2me5p12icw().s[11]++,(0,react.useState)(!1)),[frontLine,setFrontLine]=(cov_2me5p12icw().s[12]++,(0,react.useState)(!1)),[backLine,setBackLine]=(cov_2me5p12icw().s[13]++,(0,react.useState)(!1)),[anchorPointFront,setAnchorPointFront]=(cov_2me5p12icw().s[14]++,(0,react.useState)()),[anchorPointBack,setAnchorPointBack]=(cov_2me5p12icw().s[15]++,(0,react.useState)()),connectFrontLine=(cov_2me5p12icw().s[16]++,(0,react.useMemo)((()=>{cov_2me5p12icw().f[1]++;const result=(cov_2me5p12icw().s[17]++,validLine?.filter((i=>(cov_2me5p12icw().f[2]++,cov_2me5p12icw().s[18]++,i.startId===data.id))));return cov_2me5p12icw().s[19]++,result}),[validLine,data])),connectBackLine=(cov_2me5p12icw().s[20]++,(0,react.useMemo)((()=>{cov_2me5p12icw().f[3]++;const result=(cov_2me5p12icw().s[21]++,validLine?.filter((i=>(cov_2me5p12icw().f[4]++,cov_2me5p12icw().s[22]++,i.endId===data.id))));return cov_2me5p12icw().s[23]++,result}),[validLine,data])),opacity=(cov_2me5p12icw().s[24]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[5]++,cov_2me5p12icw().s[25]++,cov_2me5p12icw().b[2][0]++,dragging||(cov_2me5p12icw().b[2][1]++,resizing)?(cov_2me5p12icw().b[1][0]++,.5):(cov_2me5p12icw().b[1][1]++,1))),[dragging,resizing])),mainColor=(cov_2me5p12icw().s[26]++,(0,react.useMemo)((()=>{if(cov_2me5p12icw().f[6]++,cov_2me5p12icw().s[27]++,disabled)return cov_2me5p12icw().b[3][0]++,cov_2me5p12icw().s[28]++,DISABLED_TASK_DEFAULT_FILL;cov_2me5p12icw().b[3][1]++,cov_2me5p12icw().s[29]++;try{const rgb=(cov_2me5p12icw().s[30]++,(0,theme.S9)(fill));return cov_2me5p12icw().s[31]++,` rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`}catch(error){return cov_2me5p12icw().s[32]++,INVALIDFILL_TASK_DEFAULT_FILL}}),[fill,disabled])),mainStroke=(cov_2me5p12icw().s[33]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[7]++,cov_2me5p12icw().s[34]++,disabled?(cov_2me5p12icw().b[4][0]++,cov_2me5p12icw().s[35]++,DISABLED_TASK_DEFAULT_FILL):(cov_2me5p12icw().b[4][1]++,cov_2me5p12icw().s[36]++,TASK_DEFAULT_STROKE_FILL))),[disabled])),secondaryStroke=(cov_2me5p12icw().s[37]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[8]++,cov_2me5p12icw().s[38]++,opacity<1?(cov_2me5p12icw().b[5][0]++,mainStroke):(cov_2me5p12icw().b[5][1]++,mainColor))),[opacity,mainColor,mainStroke])),initialTaskDimensions=(cov_2me5p12icw().s[39]++,(0,react.useMemo)((()=>{cov_2me5p12icw().f[9]++;const row=(cov_2me5p12icw().s[40]++,(0,utils_resources.bd)(y,rowHeight,resources));return cov_2me5p12icw().s[41]++,{row:row,width:width,x:x,y:y}}),[resources,rowHeight,width,x,y])),taskHeight=(cov_2me5p12icw().s[42]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[10]++,cov_2me5p12icw().s[43]++,rowHeight*utils_tasks.yu)),[rowHeight])),[taskDimensions,setTaskDimensions]=(cov_2me5p12icw().s[44]++,(0,react.useState)(initialTaskDimensions)),finalPoint=(cov_2me5p12icw().s[45]++,(0,react.useMemo)((()=>{cov_2me5p12icw().f[11]++;const timeStart=(cov_2me5p12icw().s[46]++,luxon.c9.fromMillis(externalRangeInMillis.end)),startOffsetInUnit=(cov_2me5p12icw().s[47]++,timeStart.diff(interval.start).as(resolution.unit));return cov_2me5p12icw().s[48]++,startOffsetInUnit*columnWidth/resolution.sizeInUnits}),[externalRangeInMillis,columnWidth,resolution,interval])),startPoint=(cov_2me5p12icw().s[49]++,(0,react.useMemo)((()=>{cov_2me5p12icw().f[12]++;const timeStart=(cov_2me5p12icw().s[50]++,luxon.c9.fromMillis(externalRangeInMillis.start)),startOffsetInUnit=(cov_2me5p12icw().s[51]++,timeStart.diff(interval.start).as(resolution.unit));return cov_2me5p12icw().s[52]++,startOffsetInUnit*columnWidth/resolution.sizeInUnits}),[externalRangeInMillis,columnWidth,resolution,interval]));cov_2me5p12icw().s[53]++,(0,react.useEffect)((()=>{cov_2me5p12icw().f[13]++;const row=(cov_2me5p12icw().s[54]++,(0,utils_resources.bd)(y,rowHeight,resources));cov_2me5p12icw().s[55]++,setTaskDimensions({row:row,width:width,x:x,y:y})}),[resources,rowHeight,width,x,y]);const dragSnapInPX=(cov_2me5p12icw().s[56]++,(0,react.useMemo)((()=>{cov_2me5p12icw().f[14]++;const resolutionInSnapUnit=(cov_2me5p12icw().s[57]++,luxon.dw.fromObject({[unit]:sizeInUnits}).as(dragUnit)),dragSnapInResUnit=(cov_2me5p12icw().s[58]++,dragSizeInUnits/resolutionInSnapUnit),dragSnapInPx=(cov_2me5p12icw().s[59]++,dragSnapInResUnit*columnWidth);return cov_2me5p12icw().s[60]++,cov_2me5p12icw().b[7][0]++,!dragSnapInPx||(cov_2me5p12icw().b[7][1]++,isNaN(dragSnapInPx))?(cov_2me5p12icw().b[6][0]++,cov_2me5p12icw().s[61]++,1):(cov_2me5p12icw().b[6][1]++,cov_2me5p12icw().s[62]++,dragSnapInPx)}),[columnWidth,dragUnit,dragSizeInUnits,sizeInUnits,unit])),taskHandlerBorder=(cov_2me5p12icw().s[63]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[15]++,cov_2me5p12icw().s[64]++,taskDimensions.x+taskDimensions.width>=finalPoint?(cov_2me5p12icw().b[8][0]++,cov_2me5p12icw().s[65]++,2):(cov_2me5p12icw().b[8][1]++,cov_2me5p12icw().s[66]++,0))),[taskDimensions,finalPoint])),getDragPoint=(cov_2me5p12icw().s[67]++,(0,react.useCallback)((e=>{cov_2me5p12icw().f[16]++;const{target:target}=(cov_2me5p12icw().s[68]++,e),dragX=(cov_2me5p12icw().s[69]++,target.x()),dragY=(cov_2me5p12icw().s[70]++,target.y());return cov_2me5p12icw().s[71]++,{x:dragX,y:dragY}}),[])),onTaskMouseEvent=(cov_2me5p12icw().s[72]++,(0,react.useCallback)(((e,callback)=>{cov_2me5p12icw().f[17]++,cov_2me5p12icw().s[73]++,onTaskEvent(!0);const stage=(cov_2me5p12icw().s[74]++,e.target.getStage());if(cov_2me5p12icw().s[75]++,!stage)return cov_2me5p12icw().b[9][0]++,void cov_2me5p12icw().s[76]++;cov_2me5p12icw().b[9][1]++;const point=(cov_2me5p12icw().s[77]++,stage.getPointerPosition());if(cov_2me5p12icw().s[78]++,!point)return cov_2me5p12icw().b[10][0]++,void cov_2me5p12icw().s[79]++;cov_2me5p12icw().b[10][1]++,cov_2me5p12icw().s[80]++,callback(taskId,{...point,x:point.x+drawRange.start})}),[taskId,drawRange,onTaskEvent])),onClick=(cov_2me5p12icw().s[81]++,(0,react.useCallback)((()=>(cov_2me5p12icw().f[18]++,cov_2me5p12icw().s[82]++,cov_2me5p12icw().b[11][0]++,onTaskClick&&(cov_2me5p12icw().b[11][1]++,onTaskClick(data)))),[data,onTaskClick])),onTaskLeave=(cov_2me5p12icw().s[83]++,(0,react.useCallback)((e=>{if(cov_2me5p12icw().f[19]++,cov_2me5p12icw().s[84]++,e.cancelBubble=!0,cov_2me5p12icw().s[85]++,resizing)return cov_2me5p12icw().b[12][0]++,void cov_2me5p12icw().s[86]++;cov_2me5p12icw().b[12][1]++;const stage=(cov_2me5p12icw().s[87]++,e.target.getStage());if(cov_2me5p12icw().s[88]++,!stage)return cov_2me5p12icw().b[13][0]++,void cov_2me5p12icw().s[89]++;cov_2me5p12icw().b[13][1]++,cov_2me5p12icw().s[90]++,enableDrag?(cov_2me5p12icw().b[14][0]++,cov_2me5p12icw().s[91]++,stage.container().style.cursor="default"):cov_2me5p12icw().b[14][1]++,cov_2me5p12icw().s[92]++,onTaskMouseEvent(e,onLeave),cov_2me5p12icw().s[93]++,onTaskEvent(!1)}),[enableDrag,onLeave,onTaskMouseEvent,resizing,onTaskEvent])),onTaskOver=(cov_2me5p12icw().s[94]++,(0,react.useCallback)((e=>{if(cov_2me5p12icw().f[20]++,cov_2me5p12icw().s[95]++,disabled)return cov_2me5p12icw().b[15][0]++,void cov_2me5p12icw().s[96]++;if(cov_2me5p12icw().b[15][1]++,cov_2me5p12icw().s[97]++,e.cancelBubble=!0,cov_2me5p12icw().s[98]++,resizing)return cov_2me5p12icw().b[16][0]++,void cov_2me5p12icw().s[99]++;cov_2me5p12icw().b[16][1]++;const stage=(cov_2me5p12icw().s[100]++,e.target.getStage());if(cov_2me5p12icw().s[101]++,!stage)return cov_2me5p12icw().b[17][0]++,void cov_2me5p12icw().s[102]++;cov_2me5p12icw().b[17][1]++,cov_2me5p12icw().s[103]++,enableDrag?(cov_2me5p12icw().b[18][0]++,cov_2me5p12icw().s[104]++,stage.container().style.cursor="move"):cov_2me5p12icw().b[18][1]++,cov_2me5p12icw().s[105]++,onTaskMouseEvent(e,onOver)}),[enableDrag,onOver,onTaskMouseEvent,resizing,disabled])),getXCoordinate=(cov_2me5p12icw().s[106]++,(0,react.useCallback)((offset=>(cov_2me5p12icw().f[21]++,cov_2me5p12icw().s[107]++,offset*columnWidth/resolution.sizeInUnits)),[columnWidth,resolution.sizeInUnits])),getTaskXCoordinate=(cov_2me5p12icw().s[108]++,(0,react.useCallback)((startTime=>{cov_2me5p12icw().f[22]++;const timeStart=(cov_2me5p12icw().s[109]++,luxon.c9.fromMillis(startTime)),startOffsetInUnit=(cov_2me5p12icw().s[110]++,timeStart.diff(interval.start).as(resolution.unit));return cov_2me5p12icw().s[111]++,getXCoordinate(startOffsetInUnit)}),[getXCoordinate,interval,resolution.unit])),onDragStart=(cov_2me5p12icw().s[112]++,(0,react.useCallback)((e=>{cov_2me5p12icw().f[23]++;const{x:x,y:y}=(cov_2me5p12icw().s[113]++,getDragPoint(e)),dragFinalX=(cov_2me5p12icw().s[114]++,Math.ceil(x/dragSnapInPX)*dragSnapInPX),xCoordinate=(cov_2me5p12icw().s[115]++,dragFinalX<0?(cov_2me5p12icw().b[19][0]++,0):(cov_2me5p12icw().b[19][1]++,dragFinalX)),resourceIndex=(cov_2me5p12icw().s[116]++,(0,utils_resources.bd)(y,rowHeight,resources)),yCoordinate=(cov_2me5p12icw().s[117]++,(0,utils_tasks.XO)(resourceIndex,rowHeight)),point=(cov_2me5p12icw().s[118]++,{x:xCoordinate,y:yCoordinate});cov_2me5p12icw().s[119]++,onLeave(taskId,point),cov_2me5p12icw().s[120]++,setDragging(!0);const workLineArr=(cov_2me5p12icw().s[121]++,[]);if(cov_2me5p12icw().s[122]++,connectFrontLine){cov_2me5p12icw().b[20][0]++,cov_2me5p12icw().s[123]++,setFrontLine(!0);const lineData=(cov_2me5p12icw().s[124]++,getLineData(connectFrontLine,rowHeight,getTaskXCoordinate,utils_tasks.XO,"front"));cov_2me5p12icw().s[125]++,setAnchorPointFront(lineData.anchorArr),cov_2me5p12icw().s[126]++,workLineArr.push(...lineData.workLineArr)}else cov_2me5p12icw().b[20][1]++;if(cov_2me5p12icw().s[127]++,connectBackLine){cov_2me5p12icw().b[21][0]++,cov_2me5p12icw().s[128]++,setBackLine(!0);const lineData=(cov_2me5p12icw().s[129]++,getLineData(connectBackLine,rowHeight,getTaskXCoordinate,utils_tasks.XO,"back"));cov_2me5p12icw().s[130]++,setAnchorPointBack(lineData.anchorArr),cov_2me5p12icw().s[131]++,workLineArr.push(...lineData.workLineArr)}else cov_2me5p12icw().b[21][1]++;cov_2me5p12icw().s[132]++,workLine(workLineArr)}),[getDragPoint,onLeave,resources,rowHeight,taskId,dragSnapInPX,workLine,getTaskXCoordinate,connectBackLine,connectFrontLine])),onDragMove=(cov_2me5p12icw().s[133]++,(0,react.useCallback)((e=>{cov_2me5p12icw().f[24]++;const{x:x,y:y}=(cov_2me5p12icw().s[134]++,getDragPoint(e)),dragFinalX=(cov_2me5p12icw().s[135]++,Math.ceil(x/dragSnapInPX)*dragSnapInPX),xCoordinate=(cov_2me5p12icw().s[136]++,dragFinalX<startPoint?(cov_2me5p12icw().b[22][0]++,startPoint):(cov_2me5p12icw().b[22][1]++,dragFinalX)),minY=(cov_2me5p12icw().s[137]++,rowHeight+rowHeight*utils_tasks.iF),maxY=(cov_2me5p12icw().s[138]++,rowHeight*(resources.length-1)+rowHeight*utils_tasks.iF),taskFinalPoint=(cov_2me5p12icw().s[139]++,finalPoint-taskDimensions.width);let controlledY=(cov_2me5p12icw().s[140]++,y),controlledX=(cov_2me5p12icw().s[141]++,xCoordinate);cov_2me5p12icw().s[142]++,controlledY<minY?(cov_2me5p12icw().b[23][0]++,cov_2me5p12icw().s[143]++,controlledY=minY):cov_2me5p12icw().b[23][1]++,cov_2me5p12icw().s[144]++,controlledY>maxY?(cov_2me5p12icw().b[24][0]++,cov_2me5p12icw().s[145]++,controlledY=maxY):cov_2me5p12icw().b[24][1]++,cov_2me5p12icw().s[146]++,dragFinalX>=taskFinalPoint?(cov_2me5p12icw().b[25][0]++,cov_2me5p12icw().s[147]++,controlledX=taskFinalPoint):cov_2me5p12icw().b[25][1]++;const point=(cov_2me5p12icw().s[148]++,{x:controlledX,y:controlledY});cov_2me5p12icw().s[149]++,setTaskDimensions((dimensions=>(cov_2me5p12icw().f[25]++,cov_2me5p12icw().s[150]++,{...dimensions,...point})))}),[dragSnapInPX,getDragPoint,resources,finalPoint,rowHeight,taskDimensions,startPoint])),onDragEnd=(cov_2me5p12icw().s[151]++,(0,react.useCallback)((e=>{if(cov_2me5p12icw().f[26]++,cov_2me5p12icw().s[152]++,setDragging(!1),cov_2me5p12icw().s[153]++,!onTaskChange)return cov_2me5p12icw().b[26][0]++,void cov_2me5p12icw().s[154]++;cov_2me5p12icw().b[26][1]++;const{x:x,y:y}=(cov_2me5p12icw().s[155]++,getDragPoint(e)),dragFinalX=(cov_2me5p12icw().s[156]++,Math.ceil(x/dragSnapInPX)*dragSnapInPX),xCoordinate=(cov_2me5p12icw().s[157]++,dragFinalX<0?(cov_2me5p12icw().b[27][0]++,0):(cov_2me5p12icw().b[27][1]++,dragFinalX)),resourceIndex=(cov_2me5p12icw().s[158]++,(0,utils_resources.bd)(y+taskHeight/2,rowHeight,resources)),yCoordinate=(cov_2me5p12icw().s[159]++,(0,utils_tasks.XO)(resourceIndex,rowHeight)),point=(cov_2me5p12icw().s[160]++,{x:xCoordinate,y:yCoordinate});cov_2me5p12icw().s[161]++,setTaskDimensions((dimensions=>(cov_2me5p12icw().f[27]++,cov_2me5p12icw().s[162]++,{...dimensions,...point})));const{id:resourceId}=(cov_2me5p12icw().s[163]++,(0,utils_resources.Ld)(y,rowHeight,resources)),time=(cov_2me5p12icw().s[164]++,(0,utils_tasks.jt)(taskDimensions,resolution,columnWidth,interval));if(cov_2me5p12icw().s[165]++,setFrontLine(!1),cov_2me5p12icw().s[166]++,setBackLine(!1),cov_2me5p12icw().s[167]++,cov_2me5p12icw().b[28][0]++,workLine&&(cov_2me5p12icw().b[28][1]++,workLine([])),cov_2me5p12icw().s[168]++,data.relatedTasks){cov_2me5p12icw().b[29][0]++;const addTime=(cov_2me5p12icw().s[169]++,+time.end-+data.time.end),tasksId=(cov_2me5p12icw().s[170]++,(0,utils_tasks.QY)(data,allValidTasks,addTime,externalRangeInMillis));return cov_2me5p12icw().s[171]++,onTaskChange({...data,resourceId:resourceId,time:time},{tasksId:tasksId.allKLine,addTime:tasksId.maxAddTime}),void cov_2me5p12icw().s[172]++}cov_2me5p12icw().b[29][1]++,cov_2me5p12icw().s[173]++,onTaskChange({...data,resourceId:resourceId,time:time})}),[rowHeight,resources,onTaskChange,data,dragSnapInPX,getDragPoint,taskHeight,taskDimensions,resolution,columnWidth,interval,workLine,allValidTasks,externalRangeInMillis])),textOffsets=(cov_2me5p12icw().s[174]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[28]++,cov_2me5p12icw().s[175]++,taskHeight/3)),[taskHeight])),textSize=(cov_2me5p12icw().s[176]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[29]++,cov_2me5p12icw().s[177]++,taskHeight/2.5)),[taskHeight])),textStroke=(cov_2me5p12icw().s[178]++,(0,react.useMemo)((()=>{cov_2me5p12icw().f[30]++,cov_2me5p12icw().s[179]++;try{return cov_2me5p12icw().s[180]++,(0,theme.w5)(fill)}catch(error){return cov_2me5p12icw().s[181]++,"rgb(0,0,0)"}}),[fill])),textWidth=(cov_2me5p12icw().s[182]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[31]++,cov_2me5p12icw().s[183]++,taskDimensions.width-2*textOffsets)),[taskDimensions,textOffsets])),onResizeStart=(cov_2me5p12icw().s[184]++,(0,react.useCallback)((e=>{cov_2me5p12icw().f[32]++,cov_2me5p12icw().s[185]++,onTaskEvent(!0),cov_2me5p12icw().s[186]++,e.cancelBubble=!0;const{x:x,y:y}=(cov_2me5p12icw().s[187]++,getDragPoint(e)),dragFinalX=(cov_2me5p12icw().s[188]++,Math.ceil(x/dragSnapInPX)*dragSnapInPX),xCoordinate=(cov_2me5p12icw().s[189]++,dragFinalX<0?(cov_2me5p12icw().b[30][0]++,0):(cov_2me5p12icw().b[30][1]++,dragFinalX)),resourceIndex=(cov_2me5p12icw().s[190]++,(0,utils_resources.bd)(y,rowHeight,resources)),yCoordinate=(cov_2me5p12icw().s[191]++,(0,utils_tasks.XO)(resourceIndex,rowHeight)),point=(cov_2me5p12icw().s[192]++,{x:xCoordinate,y:yCoordinate});if(cov_2me5p12icw().s[193]++,onLeave(taskId,point),cov_2me5p12icw().s[194]++,setResizing(!0),cov_2me5p12icw().s[195]++,x>0)if(cov_2me5p12icw().b[31][0]++,cov_2me5p12icw().s[196]++,connectFrontLine){cov_2me5p12icw().b[32][0]++,cov_2me5p12icw().s[197]++,setFrontLine(!0);const lineData=(cov_2me5p12icw().s[198]++,getLineData(connectFrontLine,rowHeight,getTaskXCoordinate,utils_tasks.XO,"front"));cov_2me5p12icw().s[199]++,setAnchorPointFront(lineData.anchorArr),cov_2me5p12icw().s[200]++,workLine(lineData.workLineArr)}else cov_2me5p12icw().b[32][1]++;else if(cov_2me5p12icw().b[31][1]++,cov_2me5p12icw().s[201]++,connectBackLine){cov_2me5p12icw().b[33][0]++,cov_2me5p12icw().s[202]++,setBackLine(!0);const lineData=(cov_2me5p12icw().s[203]++,getLineData(connectBackLine,rowHeight,getTaskXCoordinate,utils_tasks.XO,"back"));cov_2me5p12icw().s[204]++,setAnchorPointBack(lineData.anchorArr),cov_2me5p12icw().s[205]++,workLine(lineData.workLineArr)}else cov_2me5p12icw().b[33][1]++}),[dragSnapInPX,getDragPoint,onLeave,resources,rowHeight,taskId,onTaskEvent,workLine,getTaskXCoordinate,connectBackLine,connectFrontLine])),onResizeMove=(cov_2me5p12icw().s[206]++,(0,react.useCallback)(((e,handler)=>{cov_2me5p12icw().f[33]++,cov_2me5p12icw().s[207]++,e.cancelBubble=!0;const{x:dragX}=(cov_2me5p12icw().s[208]++,getDragPoint(e));cov_2me5p12icw().s[209]++,setTaskDimensions((taskDimensions=>{cov_2me5p12icw().f[34]++;const{x:taskX,width:taskWidth}=(cov_2me5p12icw().s[210]++,taskDimensions),handlerX=(cov_2me5p12icw().s[211]++,taskX+dragX),taskEndX=(cov_2me5p12icw().s[212]++,taskX+taskWidth);switch(cov_2me5p12icw().s[213]++,handler){case"rx":return cov_2me5p12icw().b[34][0]++,cov_2me5p12icw().s[214]++,handlerX<=taskX+utils_tasks.wK?(cov_2me5p12icw().b[35][0]++,cov_2me5p12icw().s[215]++,{...taskDimensions}):(cov_2me5p12icw().b[35][1]++,cov_2me5p12icw().s[216]++,handlerX>=finalPoint?(cov_2me5p12icw().b[36][0]++,cov_2me5p12icw().s[217]++,{...taskDimensions,width:finalPoint-taskX}):(cov_2me5p12icw().b[36][1]++,cov_2me5p12icw().s[218]++,{...taskDimensions,width:handlerX-taskX}));case"lx":return cov_2me5p12icw().b[34][1]++,cov_2me5p12icw().s[219]++,handlerX>=taskEndX-utils_tasks.wK?(cov_2me5p12icw().b[37][0]++,cov_2me5p12icw().s[220]++,{...taskDimensions}):(cov_2me5p12icw().b[37][1]++,cov_2me5p12icw().s[221]++,handlerX<=startPoint?(cov_2me5p12icw().b[38][0]++,cov_2me5p12icw().s[222]++,{...taskDimensions}):(cov_2me5p12icw().b[38][1]++,cov_2me5p12icw().s[223]++,{...taskDimensions,x:handlerX,width:taskEndX-handlerX}))}}))}),[getDragPoint,finalPoint,startPoint])),onResizeEnd=(cov_2me5p12icw().s[224]++,(0,react.useCallback)((e=>{if(cov_2me5p12icw().f[35]++,cov_2me5p12icw().s[225]++,setBackLine(!1),cov_2me5p12icw().s[226]++,setFrontLine(!1),cov_2me5p12icw().s[227]++,onTaskEvent(!1),cov_2me5p12icw().s[228]++,e.cancelBubble=!0,cov_2me5p12icw().s[229]++,setResizing(!1),cov_2me5p12icw().s[230]++,!onTaskChange)return cov_2me5p12icw().b[39][0]++,void cov_2me5p12icw().s[231]++;cov_2me5p12icw().b[39][1]++;const time=(cov_2me5p12icw().s[232]++,(0,utils_tasks.jt)(taskDimensions,resolution,columnWidth,interval));if(cov_2me5p12icw().s[233]++,cov_2me5p12icw().b[40][0]++,workLine&&(cov_2me5p12icw().b[40][1]++,workLine([])),cov_2me5p12icw().s[234]++,cov_2me5p12icw().b[42][0]++,enableLines&&(cov_2me5p12icw().b[42][1]++,data.relatedTasks)&&(cov_2me5p12icw().b[42][2]++,frontLine)){cov_2me5p12icw().b[41][0]++;const addTime=(cov_2me5p12icw().s[235]++,+time.end-+data.time.end),tasksId=(cov_2me5p12icw().s[236]++,(0,utils_tasks.QY)(data,allValidTasks,addTime,externalRangeInMillis));return cov_2me5p12icw().s[237]++,onTaskChange({...data,time:time},{tasksId:tasksId.allKLine,addTime:tasksId.maxAddTime}),void cov_2me5p12icw().s[238]++}cov_2me5p12icw().b[41][1]++,cov_2me5p12icw().s[239]++,onTaskChange({...data,time:time})}),[onTaskChange,data,taskDimensions,resolution,columnWidth,interval,onTaskEvent,enableLines,allValidTasks,workLine,frontLine,externalRangeInMillis])),percentage=(cov_2me5p12icw().s[240]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[36]++,cov_2me5p12icw().s[241]++,0===completedPercentage?(cov_2me5p12icw().b[43][0]++,cov_2me5p12icw().s[242]++,.1):(cov_2me5p12icw().b[43][1]++,cov_2me5p12icw().s[243]++,completedPercentage?(cov_2me5p12icw().b[44][0]++,cov_2me5p12icw().s[244]++,taskDimensions.width/100*completedPercentage):(cov_2me5p12icw().b[44][1]++,cov_2me5p12icw().s[245]++,taskDimensions.width)))),[taskDimensions,completedPercentage])),offsetPercentageX=(cov_2me5p12icw().s[246]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[37]++,cov_2me5p12icw().s[247]++,percentage<22?(cov_2me5p12icw().b[45][0]++,cov_2me5p12icw().s[248]++,percentage):(cov_2me5p12icw().b[45][1]++,cov_2me5p12icw().s[249]++,100===completedPercentage?(cov_2me5p12icw().b[46][0]++,cov_2me5p12icw().s[250]++,30):(cov_2me5p12icw().b[46][1]++,cov_2me5p12icw().s[251]++,20)))),[completedPercentage,percentage])),offsetPercentageY=(cov_2me5p12icw().s[252]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[38]++,cov_2me5p12icw().s[253]++,taskHeight/4)),[taskHeight])),incompleteColor=(cov_2me5p12icw().s[254]++,(0,react.useMemo)((()=>{cov_2me5p12icw().f[39]++,cov_2me5p12icw().s[255]++;try{if(cov_2me5p12icw().s[256]++,disabled)return cov_2me5p12icw().b[47][0]++,cov_2me5p12icw().s[257]++,DISABLED_TASK_DEFAULT_FILL;if(cov_2me5p12icw().b[47][1]++,cov_2me5p12icw().s[258]++,fillToComplete){cov_2me5p12icw().b[48][0]++;const colorToComplete=(cov_2me5p12icw().s[259]++,(0,theme.Hz)(fillToComplete));if(cov_2me5p12icw().s[260]++,colorToComplete.a){cov_2me5p12icw().b[49][0]++;const rgba=(cov_2me5p12icw().s[261]++,` rgba(${colorToComplete.r}, ${colorToComplete.g}, ${colorToComplete.b},${colorToComplete.a})`);return cov_2me5p12icw().s[262]++,rgba}cov_2me5p12icw().b[49][1]++;const rgb=(cov_2me5p12icw().s[263]++,` rgb(${colorToComplete.r}, ${colorToComplete.g}, ${colorToComplete.b})`);return cov_2me5p12icw().s[264]++,rgb}cov_2me5p12icw().b[48][1]++;const opacity=(cov_2me5p12icw().s[265]++,.6),rgb=(cov_2me5p12icw().s[266]++,(0,theme.S9)(fill));return cov_2me5p12icw().s[267]++,(0,theme.Ue)(opacity,rgb)}catch(error){return cov_2me5p12icw().s[268]++,"rgba(255, 0, 0, 0.6)"}}),[fill,fillToComplete,disabled])),noPatternColor=(cov_2me5p12icw().s[269]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[40]++,cov_2me5p12icw().s[270]++,disabled?(cov_2me5p12icw().b[50][0]++,cov_2me5p12icw().s[271]++,DISABLED_TASK_DEFAULT_FILL):(cov_2me5p12icw().b[50][1]++,cov_2me5p12icw().s[272]++,cov_2me5p12icw().b[52][0]++,dragging||(cov_2me5p12icw().b[52][1]++,resizing)?(cov_2me5p12icw().b[51][0]++,cov_2me5p12icw().s[273]++,incompleteColor):(cov_2me5p12icw().b[51][1]++,cov_2me5p12icw().s[274]++,enableTaskPattern?(cov_2me5p12icw().b[53][0]++,"transparent"):(cov_2me5p12icw().b[53][1]++,incompleteColor))))),[incompleteColor,enableTaskPattern,disabled,dragging,resizing])),isPercentage=(cov_2me5p12icw().s[275]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[41]++,cov_2me5p12icw().s[276]++,"number"!=typeof completedPercentage?(cov_2me5p12icw().b[54][0]++,cov_2me5p12icw().s[277]++,!1):(cov_2me5p12icw().b[54][1]++,cov_2me5p12icw().s[278]++,cov_2me5p12icw().b[56][0]++,completedPercentage>=0&&(cov_2me5p12icw().b[56][1]++,completedPercentage<=100)?(cov_2me5p12icw().b[55][0]++,cov_2me5p12icw().s[279]++,!0):(cov_2me5p12icw().b[55][1]++,cov_2me5p12icw().s[280]++,!1)))),[completedPercentage])),arrGradientColor=(cov_2me5p12icw().s[281]++,(0,react.useMemo)((()=>{cov_2me5p12icw().f[42]++;const colors=(cov_2me5p12icw().s[282]++,[]),length=(cov_2me5p12icw().s[283]++,300);if(cov_2me5p12icw().s[284]++,cov_2me5p12icw().b[58][0]++,dragging||(cov_2me5p12icw().b[58][1]++,resizing)||(cov_2me5p12icw().b[58][2]++,"number"!=typeof completedPercentage)||(cov_2me5p12icw().b[58][3]++,disabled)||(cov_2me5p12icw().b[58][4]++,!enableTaskPattern))return cov_2me5p12icw().b[57][0]++,cov_2me5p12icw().s[285]++,[];cov_2me5p12icw().b[57][1]++;const mainColorLineNumber=(cov_2me5p12icw().s[286]++,Number((11/(taskDimensions.width/300)).toFixed(0))),incompleteColorLineNumber=(cov_2me5p12icw().s[287]++,Number((16/(taskDimensions.width/300)).toFixed(0)));let mainLineColorCount=(cov_2me5p12icw().s[288]++,0),incompleteLineColorCount=(cov_2me5p12icw().s[289]++,0),newColor=(cov_2me5p12icw().s[290]++,0);return cov_2me5p12icw().s[291]++,Array(length).fill(0).forEach(((_,index)=>{cov_2me5p12icw().f[43]++;const gradientNumber=(cov_2me5p12icw().s[292]++,.0033*index);cov_2me5p12icw().s[293]++,cov_2me5p12icw().b[60][0]++,mainLineColorCount<mainColorLineNumber&&(cov_2me5p12icw().b[60][1]++,0===incompleteLineColorCount)?(cov_2me5p12icw().b[59][0]++,cov_2me5p12icw().s[294]++,newColor=gradientNumber,cov_2me5p12icw().s[295]++,mainLineColorCount++):cov_2me5p12icw().b[59][1]++,cov_2me5p12icw().s[296]++,0!==incompleteLineColorCount?(cov_2me5p12icw().b[61][0]++,cov_2me5p12icw().s[297]++,incompleteLineColorCount++):cov_2me5p12icw().b[61][1]++,cov_2me5p12icw().s[298]++,mainLineColorCount===mainColorLineNumber?(cov_2me5p12icw().b[62][0]++,cov_2me5p12icw().s[299]++,incompleteLineColorCount++,cov_2me5p12icw().s[300]++,mainLineColorCount=0):cov_2me5p12icw().b[62][1]++,cov_2me5p12icw().s[301]++,incompleteLineColorCount===incompleteColorLineNumber?(cov_2me5p12icw().b[63][0]++,cov_2me5p12icw().s[302]++,incompleteLineColorCount=0,cov_2me5p12icw().s[303]++,mainLineColorCount=0):cov_2me5p12icw().b[63][1]++,cov_2me5p12icw().s[304]++,colors.push(gradientNumber,newColor===gradientNumber?(cov_2me5p12icw().b[64][0]++,mainColor):(cov_2me5p12icw().b[64][1]++,incompleteColor))})),cov_2me5p12icw().s[305]++,colors}),[mainColor,incompleteColor,dragging,resizing,taskDimensions,completedPercentage,disabled,enableTaskPattern])),finalGradientX=(cov_2me5p12icw().s[306]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[44]++,cov_2me5p12icw().s[307]++,taskDimensions.width*Math.cos(45))),[taskDimensions])),finalGradientY=(cov_2me5p12icw().s[308]++,(0,react.useMemo)((()=>(cov_2me5p12icw().f[45]++,cov_2me5p12icw().s[309]++,taskDimensions.width*Math.sin(45))),[taskDimensions]));return cov_2me5p12icw().s[310]++,react.createElement(ReactKonva.YJ,null,react.createElement(ReactKonva.YJ,{x:taskDimensions.x,y:taskDimensions.y,draggable:enableDrag,onClick:onClick,onDragEnd:onDragEnd,onDragMove:onDragMove,onDragStart:onDragStart},react.createElement(ReactKonva.YJ,null,react.createElement(ReactKonva.rw,{id:taskId,cornerRadius:utils_tasks.wK,fillLinearGradientStartPoint:{x:0,y:0},fillLinearGradientEndPoint:{x:finalGradientX,y:finalGradientY},fillLinearGradientColorStops:arrGradientColor,height:taskHeight,opacity:opacity,stroke:secondaryStroke,strokeWidth:TASK_DEFAULT_STROKE_WIDTH,width:taskDimensions.width}),react.createElement(ReactKonva.rw,{id:taskId,cornerRadius:utils_tasks.wK,fillLinearGradientStartPoint:{x:0,y:0},fillLinearGradientEndPoint:{x:percentage,y:0},fillLinearGradientColorStops:[1,mainColor,1,noPatternColor],height:taskHeight,onMouseLeave:onTaskLeave,onMouseMove:onTaskOver,onMouseOver:onTaskOver,opacity:opacity,stroke:mainStroke,strokeWidth:1,width:taskDimensions.width})),(cov_2me5p12icw().b[65][0]++,isPercentage&&(cov_2me5p12icw().b[65][1]++,react.createElement(_konva.ty,{fill:textStroke,ellipsis:!0,fontSize:10,text:completedPercentage+"%",width:textWidth,wrap:"none",x:1+percentage-offsetPercentageX,y:taskHeight-offsetPercentageY}))),(cov_2me5p12icw().b[66][0]++,enableResize&&(cov_2me5p12icw().b[66][1]++,react.createElement(TaskResizeHandle.A,{height:taskHeight,onResizeStart:onResizeStart,onResizeMove:onResizeMove,onResizeEnd:onResizeEnd,opacity:opacity,position:"lx",taskId:taskId,xCoordinate:-1}))),(cov_2me5p12icw().b[67][0]++,enableResize&&(cov_2me5p12icw().b[67][1]++,react.createElement(TaskResizeHandle.A,{height:taskHeight,onResizeStart:onResizeStart,onResizeMove:onResizeMove,onResizeEnd:onResizeEnd,opacity:opacity,position:"rx",taskId:taskId,xCoordinate:taskDimensions.width-taskHandlerBorder}))),(cov_2me5p12icw().b[68][0]++,displayTasksLabel&&(cov_2me5p12icw().b[68][1]++,react.createElement(_konva.ty,{fill:0===completedPercentage?(cov_2me5p12icw().b[69][0]++,"black"):(cov_2me5p12icw().b[69][1]++,textStroke),ellipsis:!0,fontSize:textSize,text:data.label,width:textWidth,wrap:"none",x:textOffsets,y:textOffsets-offsetPercentageY})))),react.createElement(ReactKonva.YJ,null,(cov_2me5p12icw().b[70][0]++,backLine&&(cov_2me5p12icw().b[70][1]++,anchorPointBack)&&(cov_2me5p12icw().b[70][2]++,react.createElement(ReactKonva.YJ,null,anchorPointBack.map(((i,index)=>(cov_2me5p12icw().f[46]++,cov_2me5p12icw().s[311]++,react.createElement(components_Line,{key:"AB"+index,points:[i.x,i.y,i.x+20,i.y,taskDimensions.x-20,taskDimensions.y+taskHeight/2,taskDimensions.x,taskDimensions.y+taskHeight/2]}))))))),(cov_2me5p12icw().b[71][0]++,frontLine&&(cov_2me5p12icw().b[71][1]++,anchorPointFront)&&(cov_2me5p12icw().b[71][2]++,react.createElement(ReactKonva.YJ,null,anchorPointFront.map(((i,index)=>(cov_2me5p12icw().f[47]++,cov_2me5p12icw().s[312]++,react.createElement(components_Line,{key:"AF"+index,points:[taskDimensions.x+taskDimensions.width,taskDimensions.y+taskHeight/2,taskDimensions.x+taskDimensions.width+LINE_OFFSET,taskDimensions.y+taskHeight/2,i.x-LINE_OFFSET,i.y,i.x,i.y]})))))))))},TaskDocs=(cov_2me5p12icw().s[313]++,TaskLine);var components_TaskLine=(0,react.memo)(TaskLine);try{TaskDocs.displayName="TaskDocs",TaskDocs.__docgenInfo={description:"",displayName:"TaskDocs",props:{fill:{defaultValue:{value:"#000080"},description:"The fill color of a canvas item",name:"fill",required:!1,type:{name:"string"}},fillToComplete:{defaultValue:null,description:"The fill color of a canvas item",name:"fillToComplete",required:!1,type:{name:"string"}},stroke:{defaultValue:null,description:"The stroke color of a canvas item",name:"stroke",required:!1,type:{name:"string"}},x:{defaultValue:null,description:"The x coordinate of a point on canvas",name:"x",required:!0,type:{name:"number"}},y:{defaultValue:null,description:"The y coordinate of a point on canvas",name:"y",required:!0,type:{name:"number"}},data:{defaultValue:null,description:"Task data (id, label, resourceId, time)",name:"data",required:!0,type:{name:"TaskData<TimeRange>"}},onLeave:{defaultValue:null,description:"On mouse leave event handler",name:"onLeave",required:!0,type:{name:"TaskMouseEventHandler"}},onOver:{defaultValue:null,description:"On mouse over event handler",name:"onOver",required:!0,type:{name:"TaskMouseEventHandler"}},width:{defaultValue:null,description:"The width of the task",name:"width",required:!0,type:{name:"number"}},disabled:{defaultValue:null,description:"Prop that indicate disabled item",name:"disabled",required:!1,type:{name:"boolean"}},onTaskEvent:{defaultValue:null,description:"Prop that indicate an event is executing",name:"onTaskEvent",required:!0,type:{name:"(value: boolean) => void"}},workLine:{defaultValue:null,description:"",name:"workLine",required:!0,type:{name:"(id: string[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tasks/components/TaskLine/index.tsx#TaskDocs"]={docgenInfo:TaskDocs.__docgenInfo,name:"TaskDocs",path:"src/tasks/components/TaskLine/index.tsx#TaskDocs"})}catch(__react_docgen_typescript_loader_error){}try{TaskLine.displayName="TaskLine",TaskLine.__docgenInfo={description:"This component renders a simple task as a rectangle inside a canvas.\nEach task is rendered by `TasksLayer` component, with a loop on each task provided to `KonvaTimeline`.\n`TasksLayer` is also responsible of handling callback for task components.\n\nSupported events (click, leave, over) respond with callbacks of type:\n<br />\n `(taskId: string, point: KonvaPoint) => void`\n\nThe playground has a simulated canvas with height: 200px and width: 100%",displayName:"TaskLine",props:{fill:{defaultValue:{value:"#000080"},description:"The fill color of a canvas item",name:"fill",required:!1,type:{name:"string"}},fillToComplete:{defaultValue:null,description:"The fill color of a canvas item",name:"fillToComplete",required:!1,type:{name:"string"}},stroke:{defaultValue:null,description:"The stroke color of a canvas item",name:"stroke",required:!1,type:{name:"string"}},x:{defaultValue:null,description:"The x coordinate of a point on canvas",name:"x",required:!0,type:{name:"number"}},y:{defaultValue:null,description:"The y coordinate of a point on canvas",name:"y",required:!0,type:{name:"number"}},data:{defaultValue:null,description:"Task data (id, label, resourceId, time)",name:"data",required:!0,type:{name:"TaskData<TimeRange>"}},onLeave:{defaultValue:null,description:"On mouse leave event handler",name:"onLeave",required:!0,type:{name:"TaskMouseEventHandler"}},onOver:{defaultValue:null,description:"On mouse over event handler",name:"onOver",required:!0,type:{name:"TaskMouseEventHandler"}},width:{defaultValue:null,description:"The width of the task",name:"width",required:!0,type:{name:"number"}},disabled:{defaultValue:null,description:"Prop that indicate disabled item",name:"disabled",required:!1,type:{name:"boolean"}},onTaskEvent:{defaultValue:null,description:"Prop that indicate an event is executing",name:"onTaskEvent",required:!0,type:{name:"(value: boolean) => void"}},workLine:{defaultValue:null,description:"",name:"workLine",required:!0,type:{name:"(id: string[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tasks/components/TaskLine/index.tsx#TaskLine"]={docgenInfo:TaskLine.__docgenInfo,name:"TaskLine",path:"src/tasks/components/TaskLine/index.tsx#TaskLine"})}catch(__react_docgen_typescript_loader_error){}var Tooltip=__webpack_require__("./src/tasks/components/Tooltip/index.tsx");function cov_brkea0wcz(){var path="/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/LayerLine/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/LayerLine/index.tsx",statementMap:{0:{start:{line:18,column:18},end:{line:132,column:1}},1:{start:{line:34,column:6},end:{line:34,column:26}},2:{start:{line:35,column:34},end:{line:35,column:48}},3:{start:{line:39,column:6},end:{line:39,column:14}},4:{start:{line:40,column:26},end:{line:42,column:40}},5:{start:{line:40,column:52},end:{line:42,column:26}},6:{start:{line:42,column:8},end:{line:42,column:25}},7:{start:{line:43,column:22},end:{line:45,column:32}},8:{start:{line:43,column:44},end:{line:45,column:22}},9:{start:{line:45,column:8},end:{line:45,column:21}},10:{start:{line:46,column:22},end:{line:46,column:79}},11:{start:{line:46,column:40},end:{line:46,column:60}},12:{start:{line:47,column:21},end:{line:61,column:35}},13:{start:{line:48,column:17},end:{line:48,column:36}},14:{start:{line:49,column:4},end:{line:51,column:5}},15:{start:{line:50,column:6},end:{line:50,column:34}},16:{start:{line:55,column:8},end:{line:55,column:13}},17:{start:{line:56,column:4},end:{line:60,column:7}},18:{start:{line:62,column:25},end:{line:62,column:132}},19:{start:{line:62,column:47},end:{line:62,column:92}},20:{start:{line:63,column:29},end:{line:67,column:54}},21:{start:{line:64,column:22},end:{line:64,column:52}},22:{start:{line:65,column:30},end:{line:65,column:79}},23:{start:{line:66,column:4},end:{line:66,column:45}},24:{start:{line:68,column:23},end:{line:76,column:34}},25:{start:{line:72,column:22},end:{line:72,column:48}},26:{start:{line:73,column:20},end:{line:73,column:44}},27:{start:{line:74,column:30},end:{line:74,column:73}},28:{start:{line:75,column:4},end:{line:75,column:45}},29:{start:{line:77,column:2},end:{line:79,column:3}},30:{start:{line:78,column:4},end:{line:78,column:16}},31:{start:{line:80,column:2},end:{line:82,column:3}},32:{start:{line:81,column:4},end:{line:81,column:16}},33:{start:{line:83,column:2},end:{line:131,column:92}},34:{start:{line:84,column:31},end:{line:84,column:63}},35:{start:{line:85,column:4},end:{line:87,column:5}},36:{start:{line:86,column:6},end:{line:86,column:18}},37:{start:{line:89,column:24},end:{line:89,column:110}},38:{start:{line:90,column:29},end:{line:90,column:59}},39:{start:{line:91,column:17},end:{line:91,column:101}},40:{start:{line:92,column:22},end:{line:92,column:52}},41:{start:{line:93,column:20},end:{line:93,column:48}},42:{start:{line:94,column:4},end:{line:97,column:7}},43:{start:{line:102,column:8},end:{line:102,column:16}},44:{start:{line:103,column:26},end:{line:103,column:53}},45:{start:{line:104,column:4},end:{line:106,column:5}},46:{start:{line:105,column:6},end:{line:105,column:18}},47:{start:{line:110,column:8},end:{line:110,column:32}},48:{start:{line:111,column:24},end:{line:111,column:54}},49:{start:{line:112,column:24},end:{line:112,column:68}},50:{start:{line:113,column:18},end:{line:113,column:36}},51:{start:{line:114,column:4},end:{line:116,column:5}},52:{start:{line:115,column:6},end:{line:115,column:18}},53:{start:{line:117,column:4},end:{line:130,column:7}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:18,column:18},end:{line:18,column:19}},loc:{start:{line:23,column:6},end:{line:132,column:1}},line:23},1:{name:"(anonymous_1)",decl:{start:{line:40,column:38},end:{line:40,column:39}},loc:{start:{line:40,column:52},end:{line:42,column:26}},line:40},2:{name:"(anonymous_2)",decl:{start:{line:40,column:72},end:{line:40,column:73}},loc:{start:{line:42,column:8},end:{line:42,column:25}},line:42},3:{name:"(anonymous_3)",decl:{start:{line:43,column:34},end:{line:43,column:35}},loc:{start:{line:43,column:44},end:{line:45,column:22}},line:43},4:{name:"(anonymous_4)",decl:{start:{line:43,column:55},end:{line:43,column:56}},loc:{start:{line:45,column:8},end:{line:45,column:21}},line:45},5:{name:"(anonymous_5)",decl:{start:{line:46,column:34},end:{line:46,column:35}},loc:{start:{line:46,column:40},end:{line:46,column:60}},line:46},6:{name:"(anonymous_6)",decl:{start:{line:47,column:33},end:{line:47,column:34}},loc:{start:{line:47,column:52},end:{line:61,column:3}},line:47},7:{name:"(anonymous_7)",decl:{start:{line:62,column:37},end:{line:62,column:38}},loc:{start:{line:62,column:47},end:{line:62,column:92}},line:62},8:{name:"(anonymous_8)",decl:{start:{line:63,column:41},end:{line:63,column:42}},loc:{start:{line:63,column:54},end:{line:67,column:3}},line:63},9:{name:"(anonymous_9)",decl:{start:{line:68,column:35},end:{line:68,column:36}},loc:{start:{line:71,column:8},end:{line:76,column:3}},line:71},10:{name:"(anonymous_10)",decl:{start:{line:83,column:82},end:{line:83,column:83}},loc:{start:{line:83,column:90},end:{line:98,column:3}},line:83},11:{name:"(anonymous_11)",decl:{start:{line:98,column:16},end:{line:98,column:17}},loc:{start:{line:98,column:28},end:{line:131,column:3}},line:98}},branchMap:{0:{loc:{start:{line:49,column:4},end:{line:51,column:5}},type:"if",locations:[{start:{line:49,column:4},end:{line:51,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:49},1:{loc:{start:{line:77,column:2},end:{line:79,column:3}},type:"if",locations:[{start:{line:77,column:2},end:{line:79,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:77},2:{loc:{start:{line:77,column:6},end:{line:77,column:36}},type:"binary-expr",locations:[{start:{line:77,column:6},end:{line:77,column:20}},{start:{line:77,column:24},end:{line:77,column:36}}],line:77},3:{loc:{start:{line:80,column:2},end:{line:82,column:3}},type:"if",locations:[{start:{line:80,column:2},end:{line:82,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:80},4:{loc:{start:{line:83,column:55},end:{line:98,column:4}},type:"binary-expr",locations:[{start:{line:83,column:55},end:{line:83,column:64}},{start:{line:83,column:68},end:{line:98,column:4}}],line:83},5:{loc:{start:{line:85,column:4},end:{line:87,column:5}},type:"if",locations:[{start:{line:85,column:4},end:{line:87,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:85},6:{loc:{start:{line:85,column:8},end:{line:85,column:60}},type:"binary-expr",locations:[{start:{line:85,column:8},end:{line:85,column:30}},{start:{line:85,column:34},end:{line:85,column:60}}],line:85},7:{loc:{start:{line:104,column:4},end:{line:106,column:5}},type:"if",locations:[{start:{line:104,column:4},end:{line:106,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:104},8:{loc:{start:{line:114,column:4},end:{line:116,column:5}},type:"if",locations:[{start:{line:114,column:4},end:{line:116,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:114},9:{loc:{start:{line:114,column:8},end:{line:114,column:76}},type:"binary-expr",locations:[{start:{line:114,column:8},end:{line:114,column:35}},{start:{line:114,column:39},end:{line:114,column:76}}],line:114},10:{loc:{start:{line:131,column:6},end:{line:131,column:90}},type:"binary-expr",locations:[{start:{line:131,column:6},end:{line:131,column:13}},{start:{line:131,column:17},end:{line:131,column:28}},{start:{line:131,column:45},end:{line:131,column:90}}],line:131}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0],10:[0,0,0]},inputSourceMap:{version:3,names:["React","useCallback","useState","Layer","DateTime","useTimelineContext","LINE_OFFSET","getTaskYCoordinate","TASK_HEIGHT_OFFSET","LineKonva","TaskLine","TaskTooltip","LayerLine","setTaskTooltip","taskTooltip","create","onTaskEvent","columnWidth","drawRange","interval","resolution","resources","rowHeight","tasks","toolTip","validLine","workLine","setWorkLine","start","intervalStart","end","intervalEnd","getResourceById","resourceId","findIndex","id","getTaskById","taskId","find","onTaskLeave","onTaskOver","point","task","x","y","getXCoordinate","offset","sizeInUnits","getTaskXCoordinate","startTime","timeStart","fromMillis","startOffsetInUnit","diff","as","unit","getTaskWidth","timeEnd","widthOffsetInUnit","createElement","map","data","startResourceIndex","startResId","includes","yCoordinate","endResourceIndex","endResId","endY","startLine","endLine","key","points","taskData","time","resourceIndex","color","resourceColor","toCompleteColor","xCoordinate","width","fill","fillToComplete","onLeave","onOver","disabled"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/tasks/components/LayerLine/index.tsx"],sourcesContent:['import React, { FC, useCallback, useState } from "react";\nimport { Layer } from "react-konva";\nimport { DateTime } from "luxon";\n\nimport { useTimelineContext } from "../../../timeline/TimelineContext";\nimport { KonvaPoint } from "../../../utils/konva";\nimport { InternalTimeRange } from "../../../utils/time";\nimport { LINE_OFFSET } from "../../utils/line";\nimport { getTaskYCoordinate, TASK_HEIGHT_OFFSET } from "../../utils/tasks";\nimport LineKonva from "../Line";\nimport TaskLine from "../TaskLine";\nimport TaskTooltip, { TaskTooltipProps } from "../Tooltip";\n\ninterface TasksLayerProps {\n  taskTooltip: TaskTooltipProps | null;\n  setTaskTooltip: (tooltip: TaskTooltipProps | null) => void;\n  create?: boolean;\n  onTaskEvent: (value: boolean) => void;\n}\n\n/**\n * This component renders a set of tasks as a Konva Layer.\n * Tasks are displayed accordingly to their assigned resource (different vertical / row position) and their timing (different horizontal / column position)\n * `TasksLayer` is also responsible of handling callback for task components offering base implementation for click, leave and over.\n *\n * The playground has a canvas that simulates 1 day of data with 1 hour resolution.\n * Depending on your screen size you might be able to test also the horizontal scrolling behaviour.\n */\nconst LayerLine: FC<TasksLayerProps> = ({ setTaskTooltip, taskTooltip, create, onTaskEvent }) => {\n  const { columnWidth, drawRange, interval, resolution, resources, rowHeight, tasks, toolTip, validLine } =\n    useTimelineContext();\n\n  const [workLine, setWorkLine] = useState([""]);\n  const { start: intervalStart, end: intervalEnd } = interval;\n\n  const getResourceById = useCallback(\n    (resourceId: string) => resources.findIndex(({ id }) => resourceId === id),\n    [resources]\n  );\n\n  const getTaskById = useCallback((taskId: string) => tasks.find(({ id }) => taskId === id), [tasks]);\n\n  const onTaskLeave = useCallback(() => setTaskTooltip(null), [setTaskTooltip]);\n\n  const onTaskOver = useCallback(\n    (taskId: string, point: KonvaPoint) => {\n      const task = getTaskById(taskId);\n      if (!task) {\n        return setTaskTooltip(null);\n      }\n\n      const { x, y } = point;\n      setTaskTooltip({ task, x, y });\n    },\n    [getTaskById, setTaskTooltip]\n  );\n\n  const getXCoordinate = useCallback(\n    (offset: number) => (offset * columnWidth) / resolution.sizeInUnits,\n    [columnWidth, resolution.sizeInUnits]\n  );\n\n  const getTaskXCoordinate = useCallback(\n    (startTime: number) => {\n      const timeStart = DateTime.fromMillis(startTime);\n      const startOffsetInUnit = timeStart.diff(intervalStart!).as(resolution.unit);\n      return getXCoordinate(startOffsetInUnit);\n    },\n    [getXCoordinate, intervalStart, resolution.unit]\n  );\n\n  const getTaskWidth = useCallback(\n    ({ start, end }: InternalTimeRange) => {\n      const timeStart = DateTime.fromMillis(start);\n      const timeEnd = DateTime.fromMillis(end);\n      const widthOffsetInUnit = timeEnd.diff(timeStart).as(resolution.unit);\n      return getXCoordinate(widthOffsetInUnit);\n    },\n    [getXCoordinate, resolution]\n  );\n\n  if (!intervalStart || !intervalEnd) {\n    return null;\n  }\n\n  if (drawRange.end - drawRange.start <= 0) {\n    return null;\n  }\n  return (\n    <Layer>\n      {validLine &&\n        validLine.map((data) => {\n          const startResourceIndex = getResourceById(data.startResId);\n          if (startResourceIndex < 0 || workLine.includes(data.id)) {\n            return null;\n          }\n          //line\n          const yCoordinate = getTaskYCoordinate(startResourceIndex, rowHeight) + (rowHeight * TASK_HEIGHT_OFFSET) / 2;\n          const endResourceIndex = getResourceById(data.endResId);\n          const endY = getTaskYCoordinate(endResourceIndex, rowHeight) + (rowHeight * TASK_HEIGHT_OFFSET) / 2;\n          const startLine = getTaskXCoordinate(data.start);\n          const endLine = getTaskXCoordinate(data.end);\n\n          return (\n            <LineKonva\n              key={`Layer${data.id}`}\n              points={[\n                startLine,\n                yCoordinate,\n                startLine + LINE_OFFSET,\n                yCoordinate,\n                endLine - LINE_OFFSET,\n                endY,\n                endLine,\n                endY,\n              ]}\n            />\n          );\n        })}\n      {tasks.map((taskData) => {\n        const { resourceId, time } = taskData;\n        const resourceIndex = getResourceById(resourceId);\n        if (resourceIndex < 0) {\n          return null;\n        }\n\n        const { color: resourceColor, toCompleteColor } = resources[resourceIndex];\n        const xCoordinate = getTaskXCoordinate(time.start);\n        const yCoordinate = getTaskYCoordinate(resourceIndex, rowHeight);\n        const width = getTaskWidth(time);\n        if (xCoordinate > drawRange.end || xCoordinate + width < drawRange.start) {\n          return null;\n        }\n\n        return (\n          <TaskLine\n            key={`task-${taskData.id}`}\n            data={taskData}\n            fill={resourceColor}\n            fillToComplete={toCompleteColor}\n            onLeave={onTaskLeave}\n            onOver={onTaskOver}\n            x={xCoordinate}\n            y={yCoordinate}\n            width={width}\n            disabled={create}\n            onTaskEvent={onTaskEvent}\n            workLine={setWorkLine}\n          />\n        );\n      })}\n      {toolTip && taskTooltip && <TaskTooltip {...taskTooltip} />}\n    </Layer>\n  );\n};\n\nexport default LayerLine;\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"57661c884d787eb8e3ea99dd41a7630f6811b7a1"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"57661c884d787eb8e3ea99dd41a7630f6811b7a1"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_brkea0wcz=function(){return actualCoverage},actualCoverage}cov_brkea0wcz(),cov_brkea0wcz().s[0]++;const LayerLine=({setTaskTooltip:setTaskTooltip,taskTooltip:taskTooltip,create:create,onTaskEvent:onTaskEvent})=>{cov_brkea0wcz().f[0]++;const{columnWidth:columnWidth,drawRange:drawRange,interval:interval,resolution:resolution,resources:resources,rowHeight:rowHeight,tasks:tasks,toolTip:toolTip,validLine:validLine}=(cov_brkea0wcz().s[1]++,(0,TimelineContext._)()),[workLine,setWorkLine]=(cov_brkea0wcz().s[2]++,(0,react.useState)([""])),{start:intervalStart,end:intervalEnd}=(cov_brkea0wcz().s[3]++,interval),getResourceById=(cov_brkea0wcz().s[4]++,(0,react.useCallback)((resourceId=>(cov_brkea0wcz().f[1]++,cov_brkea0wcz().s[5]++,resources.findIndex((({id:id})=>(cov_brkea0wcz().f[2]++,cov_brkea0wcz().s[6]++,resourceId===id))))),[resources])),getTaskById=(cov_brkea0wcz().s[7]++,(0,react.useCallback)((taskId=>(cov_brkea0wcz().f[3]++,cov_brkea0wcz().s[8]++,tasks.find((({id:id})=>(cov_brkea0wcz().f[4]++,cov_brkea0wcz().s[9]++,taskId===id))))),[tasks])),onTaskLeave=(cov_brkea0wcz().s[10]++,(0,react.useCallback)((()=>(cov_brkea0wcz().f[5]++,cov_brkea0wcz().s[11]++,setTaskTooltip(null))),[setTaskTooltip])),onTaskOver=(cov_brkea0wcz().s[12]++,(0,react.useCallback)(((taskId,point)=>{cov_brkea0wcz().f[6]++;const task=(cov_brkea0wcz().s[13]++,getTaskById(taskId));if(cov_brkea0wcz().s[14]++,!task)return cov_brkea0wcz().b[0][0]++,cov_brkea0wcz().s[15]++,setTaskTooltip(null);cov_brkea0wcz().b[0][1]++;const{x:x,y:y}=(cov_brkea0wcz().s[16]++,point);cov_brkea0wcz().s[17]++,setTaskTooltip({task:task,x:x,y:y})}),[getTaskById,setTaskTooltip])),getXCoordinate=(cov_brkea0wcz().s[18]++,(0,react.useCallback)((offset=>(cov_brkea0wcz().f[7]++,cov_brkea0wcz().s[19]++,offset*columnWidth/resolution.sizeInUnits)),[columnWidth,resolution.sizeInUnits])),getTaskXCoordinate=(cov_brkea0wcz().s[20]++,(0,react.useCallback)((startTime=>{cov_brkea0wcz().f[8]++;const timeStart=(cov_brkea0wcz().s[21]++,luxon.c9.fromMillis(startTime)),startOffsetInUnit=(cov_brkea0wcz().s[22]++,timeStart.diff(intervalStart).as(resolution.unit));return cov_brkea0wcz().s[23]++,getXCoordinate(startOffsetInUnit)}),[getXCoordinate,intervalStart,resolution.unit])),getTaskWidth=(cov_brkea0wcz().s[24]++,(0,react.useCallback)((({start:start,end:end})=>{cov_brkea0wcz().f[9]++;const timeStart=(cov_brkea0wcz().s[25]++,luxon.c9.fromMillis(start)),timeEnd=(cov_brkea0wcz().s[26]++,luxon.c9.fromMillis(end)),widthOffsetInUnit=(cov_brkea0wcz().s[27]++,timeEnd.diff(timeStart).as(resolution.unit));return cov_brkea0wcz().s[28]++,getXCoordinate(widthOffsetInUnit)}),[getXCoordinate,resolution]));return cov_brkea0wcz().s[29]++,cov_brkea0wcz().b[2][0]++,intervalStart&&(cov_brkea0wcz().b[2][1]++,intervalEnd)?(cov_brkea0wcz().b[1][1]++,cov_brkea0wcz().s[31]++,drawRange.end-drawRange.start<=0?(cov_brkea0wcz().b[3][0]++,cov_brkea0wcz().s[32]++,null):(cov_brkea0wcz().b[3][1]++,cov_brkea0wcz().s[33]++,react.createElement(ReactKonva.Wd,null,(cov_brkea0wcz().b[4][0]++,validLine&&(cov_brkea0wcz().b[4][1]++,validLine.map((data=>{cov_brkea0wcz().f[10]++;const startResourceIndex=(cov_brkea0wcz().s[34]++,getResourceById(data.startResId));if(cov_brkea0wcz().s[35]++,cov_brkea0wcz().b[6][0]++,startResourceIndex<0||(cov_brkea0wcz().b[6][1]++,workLine.includes(data.id)))return cov_brkea0wcz().b[5][0]++,cov_brkea0wcz().s[36]++,null;cov_brkea0wcz().b[5][1]++;const yCoordinate=(cov_brkea0wcz().s[37]++,(0,utils_tasks.XO)(startResourceIndex,rowHeight)+rowHeight*utils_tasks.yu/2),endResourceIndex=(cov_brkea0wcz().s[38]++,getResourceById(data.endResId)),endY=(cov_brkea0wcz().s[39]++,(0,utils_tasks.XO)(endResourceIndex,rowHeight)+rowHeight*utils_tasks.yu/2),startLine=(cov_brkea0wcz().s[40]++,getTaskXCoordinate(data.start)),endLine=(cov_brkea0wcz().s[41]++,getTaskXCoordinate(data.end));return cov_brkea0wcz().s[42]++,react.createElement(components_Line,{key:`Layer${data.id}`,points:[startLine,yCoordinate,startLine+LINE_OFFSET,yCoordinate,endLine-LINE_OFFSET,endY,endLine,endY]})})))),tasks.map((taskData=>{cov_brkea0wcz().f[11]++;const{resourceId:resourceId,time:time}=(cov_brkea0wcz().s[43]++,taskData),resourceIndex=(cov_brkea0wcz().s[44]++,getResourceById(resourceId));if(cov_brkea0wcz().s[45]++,resourceIndex<0)return cov_brkea0wcz().b[7][0]++,cov_brkea0wcz().s[46]++,null;cov_brkea0wcz().b[7][1]++;const{color:resourceColor,toCompleteColor:toCompleteColor}=(cov_brkea0wcz().s[47]++,resources[resourceIndex]),xCoordinate=(cov_brkea0wcz().s[48]++,getTaskXCoordinate(time.start)),yCoordinate=(cov_brkea0wcz().s[49]++,(0,utils_tasks.XO)(resourceIndex,rowHeight)),width=(cov_brkea0wcz().s[50]++,getTaskWidth(time));return cov_brkea0wcz().s[51]++,cov_brkea0wcz().b[9][0]++,xCoordinate>drawRange.end||(cov_brkea0wcz().b[9][1]++,xCoordinate+width<drawRange.start)?(cov_brkea0wcz().b[8][0]++,cov_brkea0wcz().s[52]++,null):(cov_brkea0wcz().b[8][1]++,cov_brkea0wcz().s[53]++,react.createElement(components_TaskLine,{key:`task-${taskData.id}`,data:taskData,fill:resourceColor,fillToComplete:toCompleteColor,onLeave:onTaskLeave,onOver:onTaskOver,x:xCoordinate,y:yCoordinate,width:width,disabled:create,onTaskEvent:onTaskEvent,workLine:setWorkLine}))})),(cov_brkea0wcz().b[10][0]++,toolTip&&(cov_brkea0wcz().b[10][1]++,taskTooltip)&&(cov_brkea0wcz().b[10][2]++,react.createElement(Tooltip.A,taskTooltip)))))):(cov_brkea0wcz().b[1][0]++,cov_brkea0wcz().s[30]++,null)};var components_LayerLine=LayerLine;try{LayerLine.displayName="LayerLine",LayerLine.__docgenInfo={description:"This component renders a set of tasks as a Konva Layer.\nTasks are displayed accordingly to their assigned resource (different vertical / row position) and their timing (different horizontal / column position)\n`TasksLayer` is also responsible of handling callback for task components offering base implementation for click, leave and over.\n\nThe playground has a canvas that simulates 1 day of data with 1 hour resolution.\nDepending on your screen size you might be able to test also the horizontal scrolling behaviour.",displayName:"LayerLine",props:{taskTooltip:{defaultValue:null,description:"",name:"taskTooltip",required:!0,type:{name:"TaskTooltipProps | null"}},setTaskTooltip:{defaultValue:null,description:"",name:"setTaskTooltip",required:!0,type:{name:"(tooltip: TaskTooltipProps | null) => void"}},create:{defaultValue:null,description:"",name:"create",required:!1,type:{name:"boolean"}},onTaskEvent:{defaultValue:null,description:"",name:"onTaskEvent",required:!0,type:{name:"(value: boolean) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/tasks/components/LayerLine/index.tsx#LayerLine"]={docgenInfo:LayerLine.__docgenInfo,name:"LayerLine",path:"src/tasks/components/LayerLine/index.tsx#LayerLine"})}catch(__react_docgen_typescript_loader_error){}var logger=__webpack_require__("./src/utils/logger.ts");function cov_xto4rxazl(){var path="/home/runner/work/konva-timeline/konva-timeline/src/timeline/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/timeline/index.tsx",statementMap:{0:{start:{line:14,column:27},end:{line:17,column:1}},1:{start:{line:18,column:17},end:{line:327,column:1}},2:{start:{line:39,column:6},end:{line:39,column:26}},3:{start:{line:40,column:44},end:{line:40,column:55}},4:{start:{line:41,column:26},end:{line:41,column:54}},5:{start:{line:42,column:32},end:{line:42,column:47}},6:{start:{line:43,column:30},end:{line:43,column:45}},7:{start:{line:44,column:50},end:{line:49,column:4}},8:{start:{line:50,column:40},end:{line:50,column:51}},9:{start:{line:51,column:36},end:{line:51,column:51}},10:{start:{line:52,column:19},end:{line:52,column:31}},11:{start:{line:53,column:18},end:{line:53,column:30}},12:{start:{line:54,column:40},end:{line:54,column:54}},13:{start:{line:55,column:25},end:{line:72,column:8}},14:{start:{line:56,column:4},end:{line:58,column:5}},15:{start:{line:57,column:6},end:{line:57,column:13}},16:{start:{line:59,column:4},end:{line:59,column:47}},17:{start:{line:65,column:8},end:{line:65,column:23}},18:{start:{line:66,column:26},end:{line:66,column:78}},19:{start:{line:67,column:4},end:{line:70,column:7}},20:{start:{line:71,column:4},end:{line:71,column:36}},21:{start:{line:73,column:24},end:{line:90,column:32}},22:{start:{line:74,column:4},end:{line:76,column:5}},23:{start:{line:75,column:6},end:{line:75,column:13}},24:{start:{line:77,column:4},end:{line:77,column:47}},25:{start:{line:80,column:8},end:{line:80,column:23}},26:{start:{line:81,column:4},end:{line:81,column:83}},27:{start:{line:82,column:4},end:{line:82,column:36}},28:{start:{line:83,column:18},end:{line:83,column:28}},29:{start:{line:84,column:16},end:{line:84,column:39}},30:{start:{line:85,column:4},end:{line:88,column:7}},31:{start:{line:89,column:4},end:{line:89,column:25}},32:{start:{line:91,column:2},end:{line:98,column:23}},33:{start:{line:92,column:4},end:{line:92,column:75}},34:{start:{line:93,column:4},end:{line:93,column:54}},35:{start:{line:94,column:4},end:{line:94,column:21}},36:{start:{line:95,column:4},end:{line:97,column:6}},37:{start:{line:96,column:6},end:{line:96,column:59}},38:{start:{line:99,column:2},end:{line:106,column:22}},39:{start:{line:100,column:4},end:{line:102,column:5}},40:{start:{line:101,column:6},end:{line:101,column:13}},41:{start:{line:103,column:4},end:{line:103,column:75}},42:{start:{line:104,column:4},end:{line:104,column:62}},43:{start:{line:105,column:4},end:{line:105,column:20}},44:{start:{line:107,column:2},end:{line:111,column:51}},45:{start:{line:108,column:4},end:{line:108,column:64}},46:{start:{line:110,column:4},end:{line:110,column:21}},47:{start:{line:112,column:2},end:{line:121,column:88}},48:{start:{line:113,column:4},end:{line:115,column:5}},49:{start:{line:114,column:6},end:{line:114,column:13}},50:{start:{line:116,column:22},end:{line:116,column:58}},51:{start:{line:117,column:30},end:{line:117,column:80}},52:{start:{line:118,column:4},end:{line:120,column:7}},53:{start:{line:122,column:28},end:{line:122,column:101}},54:{start:{line:122,column:42},end:{line:122,column:73}},55:{start:{line:126,column:22},end:{line:126,column:44}},56:{start:{line:127,column:21},end:{line:127,column:85}},57:{start:{line:127,column:35},end:{line:127,column:61}},58:{start:{line:128,column:30},end:{line:130,column:31}},59:{start:{line:128,column:45},end:{line:130,column:3}},60:{start:{line:131,column:22},end:{line:133,column:21}},61:{start:{line:132,column:4},end:{line:132,column:53}},62:{start:{line:134,column:31},end:{line:140,column:40}},63:{start:{line:134,column:46},end:{line:140,column:3}},64:{start:{line:141,column:37},end:{line:152,column:55}},65:{start:{line:141,column:52},end:{line:152,column:3}},66:{start:{line:153,column:35},end:{line:164,column:82}},67:{start:{line:153,column:50},end:{line:164,column:3}},68:{start:{line:165,column:22},end:{line:170,column:39}},69:{start:{line:166,column:4},end:{line:168,column:5}},70:{start:{line:167,column:6},end:{line:167,column:19}},71:{start:{line:169,column:4},end:{line:169,column:16}},72:{start:{line:171,column:19},end:{line:175,column:64}},73:{start:{line:172,column:22},end:{line:172,column:70}},74:{start:{line:173,column:30},end:{line:173,column:80}},75:{start:{line:174,column:4},end:{line:174,column:68}},76:{start:{line:176,column:17},end:{line:180,column:64}},77:{start:{line:177,column:22},end:{line:177,column:68}},78:{start:{line:178,column:30},end:{line:178,column:80}},79:{start:{line:179,column:4},end:{line:179,column:68}},80:{start:{line:181,column:20},end:{line:183,column:33}},81:{start:{line:182,column:4},end:{line:182,column:38}},82:{start:{line:184,column:23},end:{line:186,column:19}},83:{start:{line:185,column:4},end:{line:185,column:31}},84:{start:{line:187,column:32},end:{line:191,column:72}},85:{start:{line:187,column:47},end:{line:191,column:3}},86:{start:{line:192,column:26},end:{line:192,column:103}},87:{start:{line:192,column:40},end:{line:192,column:85}},88:{start:{line:193,column:24},end:{line:193,column:99}},89:{start:{line:193,column:38},end:{line:193,column:69}},90:{start:{line:194,column:27},end:{line:201,column:60}},91:{start:{line:194,column:42},end:{line:201,column:3}},92:{start:{line:202,column:28},end:{line:208,column:70}},93:{start:{line:203,column:22},end:{line:203,column:89}},94:{start:{line:204,column:4},end:{line:207,column:6}},95:{start:{line:209,column:22},end:{line:230,column:64}},96:{start:{line:210,column:4},end:{line:212,column:5}},97:{start:{line:211,column:6},end:{line:211,column:13}},98:{start:{line:213,column:18},end:{line:213,column:37}},99:{start:{line:214,column:20},end:{line:214,column:32}},100:{start:{line:215,column:20},end:{line:215,column:29}},101:{start:{line:216,column:4},end:{line:229,column:5}},102:{start:{line:217,column:30},end:{line:217,column:56}},103:{start:{line:218,column:28},end:{line:218,column:98}},104:{start:{line:219,column:16},end:{line:219,column:60}},105:{start:{line:220,column:6},end:{line:220,column:58}},106:{start:{line:221,column:6},end:{line:226,column:9}},107:{start:{line:227,column:6},end:{line:227,column:23}},108:{start:{line:228,column:6},end:{line:228,column:22}},109:{start:{line:231,column:20},end:{line:245,column:68}},110:{start:{line:232,column:4},end:{line:234,column:5}},111:{start:{line:233,column:6},end:{line:233,column:13}},112:{start:{line:235,column:20},end:{line:235,column:39}},113:{start:{line:236,column:4},end:{line:236,column:26}},114:{start:{line:237,column:18},end:{line:237,column:37}},115:{start:{line:238,column:4},end:{line:238,column:47}},116:{start:{line:239,column:4},end:{line:239,column:21}},117:{start:{line:240,column:4},end:{line:240,column:22}},118:{start:{line:241,column:4},end:{line:244,column:7}},119:{start:{line:246,column:22},end:{line:263,column:56}},120:{start:{line:247,column:4},end:{line:262,column:5}},121:{start:{line:248,column:20},end:{line:248,column:39}},122:{start:{line:249,column:6},end:{line:249,column:51}},123:{start:{line:250,column:19},end:{line:250,column:65}},124:{start:{line:251,column:20},end:{line:251,column:38}},125:{start:{line:252,column:24},end:{line:252,column:35}},126:{start:{line:253,column:30},end:{line:253,column:60}},127:{start:{line:254,column:6},end:{line:256,column:7}},128:{start:{line:255,column:8},end:{line:255,column:27}},129:{start:{line:257,column:6},end:{line:261,column:9}},130:{start:{line:264,column:21},end:{line:266,column:17}},131:{start:{line:265,column:4},end:{line:265,column:42}},132:{start:{line:267,column:2},end:{line:326,column:10}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:18,column:17},end:{line:18,column:18}},loc:{start:{line:18,column:23},end:{line:327,column:1}},line:18},1:{name:"(anonymous_1)",decl:{start:{line:55,column:37},end:{line:55,column:38}},loc:{start:{line:55,column:43},end:{line:72,column:3}},line:55},2:{name:"(anonymous_2)",decl:{start:{line:73,column:36},end:{line:73,column:37}},loc:{start:{line:73,column:42},end:{line:90,column:3}},line:73},3:{name:"(anonymous_3)",decl:{start:{line:91,column:12},end:{line:91,column:13}},loc:{start:{line:91,column:18},end:{line:98,column:3}},line:91},4:{name:"(anonymous_4)",decl:{start:{line:95,column:11},end:{line:95,column:12}},loc:{start:{line:95,column:17},end:{line:97,column:5}},line:95},5:{name:"(anonymous_5)",decl:{start:{line:99,column:12},end:{line:99,column:13}},loc:{start:{line:99,column:18},end:{line:106,column:3}},line:99},6:{name:"(anonymous_6)",decl:{start:{line:107,column:12},end:{line:107,column:13}},loc:{start:{line:107,column:18},end:{line:111,column:3}},line:107},7:{name:"(anonymous_7)",decl:{start:{line:112,column:12},end:{line:112,column:13}},loc:{start:{line:112,column:18},end:{line:121,column:3}},line:112},8:{name:"(anonymous_8)",decl:{start:{line:122,column:36},end:{line:122,column:37}},loc:{start:{line:122,column:42},end:{line:122,column:73}},line:122},9:{name:"(anonymous_9)",decl:{start:{line:127,column:29},end:{line:127,column:30}},loc:{start:{line:127,column:35},end:{line:127,column:61}},line:127},10:{name:"(anonymous_10)",decl:{start:{line:128,column:38},end:{line:128,column:39}},loc:{start:{line:128,column:45},end:{line:130,column:3}},line:128},11:{name:"(anonymous_11)",decl:{start:{line:131,column:30},end:{line:131,column:31}},loc:{start:{line:131,column:36},end:{line:133,column:3}},line:131},12:{name:"(anonymous_12)",decl:{start:{line:134,column:39},end:{line:134,column:40}},loc:{start:{line:134,column:46},end:{line:140,column:3}},line:134},13:{name:"(anonymous_13)",decl:{start:{line:141,column:45},end:{line:141,column:46}},loc:{start:{line:141,column:52},end:{line:152,column:3}},line:141},14:{name:"(anonymous_14)",decl:{start:{line:153,column:43},end:{line:153,column:44}},loc:{start:{line:153,column:50},end:{line:164,column:3}},line:153},15:{name:"(anonymous_15)",decl:{start:{line:165,column:30},end:{line:165,column:31}},loc:{start:{line:165,column:36},end:{line:170,column:3}},line:165},16:{name:"(anonymous_16)",decl:{start:{line:171,column:27},end:{line:171,column:28}},loc:{start:{line:171,column:33},end:{line:175,column:3}},line:171},17:{name:"(anonymous_17)",decl:{start:{line:176,column:25},end:{line:176,column:26}},loc:{start:{line:176,column:31},end:{line:180,column:3}},line:176},18:{name:"(anonymous_18)",decl:{start:{line:181,column:28},end:{line:181,column:29}},loc:{start:{line:181,column:34},end:{line:183,column:3}},line:181},19:{name:"(anonymous_19)",decl:{start:{line:184,column:31},end:{line:184,column:32}},loc:{start:{line:184,column:37},end:{line:186,column:3}},line:184},20:{name:"(anonymous_20)",decl:{start:{line:187,column:40},end:{line:187,column:41}},loc:{start:{line:187,column:47},end:{line:191,column:3}},line:187},21:{name:"(anonymous_21)",decl:{start:{line:192,column:34},end:{line:192,column:35}},loc:{start:{line:192,column:40},end:{line:192,column:85}},line:192},22:{name:"(anonymous_22)",decl:{start:{line:193,column:32},end:{line:193,column:33}},loc:{start:{line:193,column:38},end:{line:193,column:69}},line:193},23:{name:"(anonymous_23)",decl:{start:{line:194,column:35},end:{line:194,column:36}},loc:{start:{line:194,column:42},end:{line:201,column:3}},line:194},24:{name:"(anonymous_24)",decl:{start:{line:202,column:40},end:{line:202,column:41}},loc:{start:{line:202,column:46},end:{line:208,column:3}},line:202},25:{name:"(anonymous_25)",decl:{start:{line:209,column:34},end:{line:209,column:35}},loc:{start:{line:209,column:39},end:{line:230,column:3}},line:209},26:{name:"(anonymous_26)",decl:{start:{line:231,column:32},end:{line:231,column:33}},loc:{start:{line:231,column:37},end:{line:245,column:3}},line:231},27:{name:"(anonymous_27)",decl:{start:{line:246,column:34},end:{line:246,column:35}},loc:{start:{line:246,column:39},end:{line:263,column:3}},line:246},28:{name:"(anonymous_28)",decl:{start:{line:264,column:29},end:{line:264,column:30}},loc:{start:{line:264,column:35},end:{line:266,column:3}},line:264}},branchMap:{0:{loc:{start:{line:56,column:4},end:{line:58,column:5}},type:"if",locations:[{start:{line:56,column:4},end:{line:58,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:56},1:{loc:{start:{line:74,column:4},end:{line:76,column:5}},type:"if",locations:[{start:{line:74,column:4},end:{line:76,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:74},2:{loc:{start:{line:74,column:8},end:{line:74,column:45}},type:"binary-expr",locations:[{start:{line:74,column:8},end:{line:74,column:24}},{start:{line:74,column:28},end:{line:74,column:45}}],line:74},3:{loc:{start:{line:100,column:4},end:{line:102,column:5}},type:"if",locations:[{start:{line:100,column:4},end:{line:102,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:100},4:{loc:{start:{line:113,column:4},end:{line:115,column:5}},type:"if",locations:[{start:{line:113,column:4},end:{line:115,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:113},5:{loc:{start:{line:113,column:8},end:{line:113,column:44}},type:"binary-expr",locations:[{start:{line:113,column:8},end:{line:113,column:24}},{start:{line:113,column:28},end:{line:113,column:44}}],line:113},6:{loc:{start:{line:132,column:11},end:{line:132,column:52}},type:"cond-expr",locations:[{start:{line:132,column:27},end:{line:132,column:28}},{start:{line:132,column:31},end:{line:132,column:52}}],line:132},7:{loc:{start:{line:166,column:4},end:{line:168,column:5}},type:"if",locations:[{start:{line:166,column:4},end:{line:168,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:166},8:{loc:{start:{line:192,column:40},end:{line:192,column:85}},type:"cond-expr",locations:[{start:{line:192,column:56},end:{line:192,column:57}},{start:{line:192,column:60},end:{line:192,column:85}}],line:192},9:{loc:{start:{line:193,column:38},end:{line:193,column:69}},type:"cond-expr",locations:[{start:{line:193,column:53},end:{line:193,column:54}},{start:{line:193,column:57},end:{line:193,column:69}}],line:193},10:{loc:{start:{line:210,column:4},end:{line:212,column:5}},type:"if",locations:[{start:{line:210,column:4},end:{line:212,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:210},11:{loc:{start:{line:210,column:8},end:{line:210,column:34}},type:"binary-expr",locations:[{start:{line:210,column:8},end:{line:210,column:21}},{start:{line:210,column:25},end:{line:210,column:34}}],line:210},12:{loc:{start:{line:216,column:4},end:{line:229,column:5}},type:"if",locations:[{start:{line:216,column:4},end:{line:229,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:216},13:{loc:{start:{line:232,column:4},end:{line:234,column:5}},type:"if",locations:[{start:{line:232,column:4},end:{line:234,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:232},14:{loc:{start:{line:232,column:8},end:{line:232,column:34}},type:"binary-expr",locations:[{start:{line:232,column:8},end:{line:232,column:21}},{start:{line:232,column:25},end:{line:232,column:34}}],line:232},15:{loc:{start:{line:247,column:4},end:{line:262,column:5}},type:"if",locations:[{start:{line:247,column:4},end:{line:262,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:247},16:{loc:{start:{line:253,column:30},end:{line:253,column:60}},type:"cond-expr",locations:[{start:{line:253,column:42},end:{line:253,column:52}},{start:{line:253,column:55},end:{line:253,column:60}}],line:253},17:{loc:{start:{line:254,column:6},end:{line:256,column:7}},type:"if",locations:[{start:{line:254,column:6},end:{line:256,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:254},18:{loc:{start:{line:269,column:5},end:{line:274,column:61}},type:"binary-expr",locations:[{start:{line:269,column:5},end:{line:269,column:19}},{start:{line:269,column:36},end:{line:274,column:61}}],line:269},19:{loc:{start:{line:274,column:63},end:{line:279,column:59}},type:"binary-expr",locations:[{start:{line:274,column:63},end:{line:274,column:74}},{start:{line:274,column:91},end:{line:279,column:59}}],line:274},20:{loc:{start:{line:293,column:6},end:{line:303,column:4}},type:"cond-expr",locations:[{start:{line:293,column:34},end:{line:298,column:4}},{start:{line:298,column:20},end:{line:303,column:4}}],line:293},21:{loc:{start:{line:303,column:6},end:{line:316,column:5}},type:"binary-expr",locations:[{start:{line:303,column:6},end:{line:303,column:17}},{start:{line:303,column:34},end:{line:316,column:5}}],line:303},22:{loc:{start:{line:316,column:7},end:{line:326,column:5}},type:"binary-expr",locations:[{start:{line:316,column:7},end:{line:316,column:14}},{start:{line:316,column:31},end:{line:326,column:5}}],line:316}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0,81:0,82:0,83:0,84:0,85:0,86:0,87:0,88:0,89:0,90:0,91:0,92:0,93:0,94:0,95:0,96:0,97:0,98:0,99:0,100:0,101:0,102:0,103:0,104:0,105:0,106:0,107:0,108:0,109:0,110:0,111:0,112:0,113:0,114:0,115:0,116:0,117:0,118:0,119:0,120:0,121:0,122:0,123:0,124:0,125:0,126:0,127:0,128:0,129:0,130:0,131:0,132:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0],15:[0,0],16:[0,0],17:[0,0],18:[0,0],19:[0,0],20:[0,0],21:[0,0],22:[0,0]},inputSourceMap:{version:3,names:["React","useCallback","useEffect","useMemo","useRef","useState","Layer","Rect","Stage","DateTime","KonvaLine","KonvaText","GridLayer","ResourcesLayer","SummaryLayer","findResourceIndexByCoordinate","RESOURCE_HEADER_WIDTH","TasksLayer","LayerLine","getTaskYCoordinate","onEndTimeRange","TASK_BORDER_RADIUS","TASK_HEIGHT_OFFSET","logDebug","useTimelineContext","DEFAULT_STAGE_SIZE","height","width","Timeline","hideResources","initialDateTime","interval","columnWidth","resourcesContentHeight","resolution","setDrawRange","resources","rowHeight","theme","color","themeColor","timeBlocks","drawRange","onAreaSelect","enableLines","externalRangeInMillis","showSummary","summaryWidth","scrollbarSize","setScrollbarSize","size","setSize","newTask","setNewTask","isMove","setIsMove","newTaskDimension","setNewTaskDimension","row","x","y","startXClick","setStartXClick","existTask","setExistTask","stageRef","wrapper","taskTooltip","setTaskTooltip","onWindowResize","current","clientHeight","clientWidth","offsetHeight","offsetWidth","Math","max","onStageScroll","scrollLeft","container","style","transform","start","end","window","addEventListener","removeEventListener","timeStart","fromMillis","startOffsetInUnit","diff","as","unit","scrollTo","left","sizeInUnits","fullTimelineWidth","length","stageHeight","stageWidth","timelineCommonStyle","minHeight","summaryLeft","timelineWrapperStyle","border","display","position","resourcesStageWrapperStyle","backgroundColor","boxShadow","borderRight","paddingBottom","top","zIndex","summaryStageWrapperStyle","startOffset","xOfStart","xOfEnd","endOffset","marginOffset","gridStageWrapperStyle","overflow","resourcesOffset","summaryOffset","gridWrapperStyle","createNewTaskData","taksRange","resourceId","id","range","onMouseDown","e","stage","target","getStage","clickId","_id","stageId","pointerPosition","getPointerPosition","resourceIndex","onMouseUp","cursor","onMouseMove","xpos","controlledX","controlledWidth","taskHeight","createElement","ref","create","onTaskEvent","points","stroke","strokeWidth","dash","fill","text","cornerRadius"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/timeline/index.tsx"],sourcesContent:['import React, { CSSProperties, FC, useCallback, useEffect, useMemo, useRef, useState } from "react";\nimport { Layer, Rect, Stage } from "react-konva";\nimport Konva from "konva";\nimport { KonvaEventObject } from "konva/lib/Node";\nimport { DateTime } from "luxon";\n\nimport { KonvaLine, KonvaText } from "../@konva";\nimport GridLayer from "../grid/Layer";\nimport ResourcesLayer from "../resources/components/Layer";\nimport SummaryLayer from "../resources/components/Summary";\nimport { findResourceIndexByCoordinate, RESOURCE_HEADER_WIDTH } from "../resources/utils/resources";\nimport TasksLayer from "../tasks/components/Layer";\nimport LayerLine from "../tasks/components/LayerLine";\nimport { TaskTooltipProps } from "../tasks/components/Tooltip";\nimport {\n  getTaskYCoordinate,\n  onEndTimeRange,\n  TASK_BORDER_RADIUS,\n  TASK_HEIGHT_OFFSET,\n  TaskDimensions,\n} from "../tasks/utils/tasks";\nimport { logDebug } from "../utils/logger";\n\nimport { useTimelineContext } from "./TimelineContext";\n\ninterface TimelineProps {}\n\ninterface StageSize {\n  height: number;\n  width: number;\n}\n\nconst DEFAULT_STAGE_SIZE: StageSize = { height: 0, width: 0 };\n\nconst Timeline: FC<TimelineProps> = () => {\n  const {\n    hideResources,\n    initialDateTime,\n    interval,\n    columnWidth,\n    resourcesContentHeight,\n    resolution,\n    setDrawRange,\n    resources,\n    rowHeight,\n    theme: { color: themeColor },\n    timeBlocks,\n    drawRange,\n    onAreaSelect,\n    enableLines,\n    externalRangeInMillis,\n    showSummary,\n    summaryWidth,\n  } = useTimelineContext();\n\n  const [scrollbarSize, setScrollbarSize] = useState(0);\n  const [size, setSize] = useState<StageSize>(DEFAULT_STAGE_SIZE);\n  const [newTask, setNewTask] = useState(false);\n  const [isMove, setIsMove] = useState(false);\n  const [newTaskDimension, setNewTaskDimension] = useState<TaskDimensions>({ row: 0, width: 0, x: 0, y: 0 });\n  const [startXClick, setStartXClick] = useState(0);\n  const [existTask, setExistTask] = useState<boolean>(false);\n  const stageRef = useRef<Konva.Stage>(null);\n  const wrapper = useRef<HTMLDivElement>(null);\n\n  const [taskTooltip, setTaskTooltip] = useState<TaskTooltipProps | null>(null);\n\n  const onWindowResize = useCallback(() => {\n    if (!wrapper.current) {\n      return;\n    }\n\n    logDebug("Timeline", "Resizing window...");\n    const { clientHeight: height, clientWidth: width, offsetHeight, offsetWidth } = wrapper.current;\n    const scrollbarSize = Math.max(offsetHeight - height, offsetWidth - width);\n    setSize({ height, width });\n    setScrollbarSize(scrollbarSize);\n  }, []);\n\n  const onStageScroll = useCallback(() => {\n    if (!wrapper.current || !stageRef.current) {\n      return;\n    }\n\n    logDebug("Timeline", "Scrolling stage...");\n    const { scrollLeft } = wrapper.current;\n    stageRef.current.container().style.transform = `translate(${scrollLeft}px, 0)`;\n    stageRef.current.x(-scrollLeft);\n\n    const start = scrollLeft;\n    const end = scrollLeft + size.width;\n    setDrawRange({ start, end });\n    setTaskTooltip(null);\n  }, [setDrawRange, size.width]);\n\n  useEffect(() => {\n    logDebug("Timeline", "Initial applying of onResize event listener...");\n    window.addEventListener("resize", onWindowResize);\n    onWindowResize();\n\n    return () => {\n      window.removeEventListener("resize", onWindowResize);\n    };\n  }, [onWindowResize]);\n\n  useEffect(() => {\n    if (!wrapper.current) {\n      return;\n    }\n\n    logDebug("Timeline", "Initial applying of onScroll event listener...");\n    wrapper.current.addEventListener("scroll", onStageScroll);\n    onStageScroll();\n  }, [onStageScroll]);\n\n  useEffect(() => {\n    logDebug("Timeline", "Applying effects of size changes...");\n    //DrawLayer space calculate\n    onWindowResize();\n  }, [hideResources, onWindowResize, showSummary]);\n\n  useEffect(() => {\n    if (!wrapper.current || !initialDateTime) {\n      return;\n    }\n\n    const timeStart = DateTime.fromMillis(initialDateTime);\n    const startOffsetInUnit = timeStart.diff(interval.start!).as(resolution.unit);\n    wrapper.current.scrollTo({ left: (startOffsetInUnit * columnWidth) / resolution.sizeInUnits });\n  }, [columnWidth, initialDateTime, interval, resolution.sizeInUnits, resolution.unit]);\n\n  const fullTimelineWidth = useMemo(() => columnWidth * timeBlocks.length, [columnWidth, timeBlocks]);\n\n  // const stageHeight = useMemo(() => size.height, [size]);\n  // TODO#lb: check if ok\n  const stageHeight = resourcesContentHeight;\n\n  const stageWidth = useMemo(() => scrollbarSize + size.width, [scrollbarSize, size]);\n\n  const timelineCommonStyle = useMemo(\n    (): CSSProperties => ({\n      minHeight: resourcesContentHeight,\n    }),\n    [resourcesContentHeight]\n  );\n\n  const summaryLeft = useMemo(() => {\n    return hideResources ? 0 : RESOURCE_HEADER_WIDTH;\n  }, [hideResources]);\n\n  const timelineWrapperStyle = useMemo(\n    (): CSSProperties => ({\n      ...timelineCommonStyle,\n      border: `1px solid ${themeColor}`,\n      display: "flex",\n      position: "relative",\n      width: "100%",\n    }),\n    [themeColor, timelineCommonStyle]\n  );\n\n  const resourcesStageWrapperStyle = useMemo(\n    (): CSSProperties => ({\n      ...timelineCommonStyle,\n      backgroundColor: "transparent",\n      boxShadow: "4px 4px 32px 1px #0000000f",\n      borderRight: `1px solid ${themeColor}`,\n      left: 0,\n      paddingBottom: scrollbarSize,\n      position: "sticky",\n      top: 0,\n      width: RESOURCE_HEADER_WIDTH,\n      zIndex: 1,\n    }),\n    [scrollbarSize, themeColor, timelineCommonStyle]\n  );\n  const summaryStageWrapperStyle = useMemo(\n    (): CSSProperties => ({\n      ...timelineCommonStyle,\n      backgroundColor: "transparent",\n      boxShadow: "4px 4px 32px 1px #0000000f",\n      borderRight: `1px solid ${themeColor}`,\n      left: summaryLeft,\n      paddingBottom: scrollbarSize,\n      position: "sticky",\n      top: 0,\n      width: summaryWidth,\n      zIndex: 1,\n    }),\n    [scrollbarSize, themeColor, timelineCommonStyle, summaryWidth, summaryLeft]\n  );\n\n  const startOffset = useMemo(() => {\n    if (externalRangeInMillis.start === +interval.start!) {\n      return false;\n    }\n    return true;\n  }, [externalRangeInMillis, interval]);\n\n  const xOfStart = useMemo(() => {\n    const timeStart = DateTime.fromMillis(externalRangeInMillis.start);\n    const startOffsetInUnit = timeStart.diff(interval.start!).as(resolution.unit);\n    return (startOffsetInUnit * columnWidth) / resolution.sizeInUnits;\n  }, [externalRangeInMillis, columnWidth, resolution, interval]);\n\n  const xOfEnd = useMemo(() => {\n    const timeStart = DateTime.fromMillis(externalRangeInMillis.end);\n    const startOffsetInUnit = timeStart.diff(interval.start!).as(resolution.unit);\n    return (startOffsetInUnit * columnWidth) / resolution.sizeInUnits;\n  }, [externalRangeInMillis, columnWidth, resolution, interval]);\n\n  const endOffset = useMemo(() => {\n    return fullTimelineWidth - xOfEnd;\n  }, [fullTimelineWidth, xOfEnd]);\n\n  const marginOffset = useMemo(() => {\n    return columnWidth * 0.015;\n  }, [columnWidth]);\n\n  const gridStageWrapperStyle = useMemo(\n    (): CSSProperties => ({\n      ...timelineCommonStyle,\n      overflow: "hidden",\n      width: fullTimelineWidth - endOffset + marginOffset,\n    }),\n    [fullTimelineWidth, timelineCommonStyle, endOffset, marginOffset]\n  );\n\n  const resourcesOffset = useMemo(() => (hideResources ? 0 : RESOURCE_HEADER_WIDTH + 1), [hideResources]);\n\n  const summaryOffset = useMemo(() => (!showSummary ? 0 : summaryWidth), [showSummary, summaryWidth]);\n\n  const gridWrapperStyle = useMemo(\n    (): CSSProperties => ({\n      ...timelineCommonStyle,\n      left: resourcesOffset + summaryOffset,\n      overflow: "auto",\n      position: "absolute",\n      top: 0,\n      width: `calc(100% - (${resourcesOffset}px + ${summaryOffset}px))`,\n    }),\n    [resourcesOffset, timelineCommonStyle, summaryOffset]\n  );\n\n  const createNewTaskData = useCallback(() => {\n    const taksRange = onEndTimeRange(newTaskDimension, resolution, columnWidth, interval);\n    return { resourceId: resources[newTaskDimension.row].id, range: taksRange };\n  }, [newTaskDimension, columnWidth, resolution, interval, resources]);\n\n  const onMouseDown = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (!onAreaSelect || existTask) {\n        return;\n      }\n      const stage = e.target.getStage();\n      const clickId = e.target._id;\n      const stageId = stage!._id;\n      if (clickId === stageId) {\n        const pointerPosition = stage!.getPointerPosition();\n        const resourceIndex = findResourceIndexByCoordinate(pointerPosition!.y, rowHeight, resources);\n        const y = getTaskYCoordinate(resourceIndex, rowHeight);\n        setStartXClick(drawRange.start + pointerPosition!.x);\n        setNewTaskDimension({ row: resourceIndex, width: 1, x: drawRange.start + pointerPosition!.x, y: y });\n        setNewTask(true);\n        setIsMove(true);\n      }\n    },\n    [resources, rowHeight, drawRange, onAreaSelect, existTask]\n  );\n  const onMouseUp = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (!onAreaSelect || existTask) {\n        return;\n      }\n      const newTask = createNewTaskData();\n      onAreaSelect(newTask);\n      const stage = e.target.getStage();\n      stage!.container().style.cursor = "default";\n      setIsMove(false);\n      setNewTask(false);\n      setNewTaskDimension({ ...newTaskDimension, width: 1 });\n    },\n    [onAreaSelect, createNewTaskData, newTaskDimension, existTask]\n  );\n\n  const onMouseMove = useCallback(\n    (e: KonvaEventObject<MouseEvent>) => {\n      if (isMove) {\n        const stage = e.target.getStage();\n        stage!.container().style.cursor = "crosshair";\n        const xpos = stage!.getPointerPosition()!.x + drawRange.start;\n        const width = xpos - startXClick;\n        let controlledX = startXClick;\n        const controlledWidth = width < 0 ? -1 * width : width;\n        if (width < 0) {\n          controlledX = xpos;\n        }\n        setNewTaskDimension({ ...newTaskDimension, x: controlledX, width: controlledWidth });\n      }\n    },\n    [newTaskDimension, isMove, drawRange, startXClick]\n  );\n\n  const taskHeight = useMemo(() => {\n    return rowHeight * TASK_HEIGHT_OFFSET;\n  }, [rowHeight]);\n\n  return (\n    <div style={timelineWrapperStyle}>\n      {!hideResources && (\n        <div style={resourcesStageWrapperStyle}>\n          <Stage height={stageHeight} width={RESOURCE_HEADER_WIDTH}>\n            <ResourcesLayer />\n          </Stage>\n        </div>\n      )}\n      {showSummary && (\n        <div style={summaryStageWrapperStyle}>\n          <Stage height={stageHeight} width={summaryWidth}>\n            <SummaryLayer />\n          </Stage>\n        </div>\n      )}\n      <div ref={wrapper} style={gridWrapperStyle}>\n        <div style={gridStageWrapperStyle}>\n          <Stage\n            ref={stageRef}\n            height={stageHeight}\n            width={stageWidth}\n            onMouseDown={onMouseDown}\n            onMouseUp={onMouseUp}\n            onMouseMove={onMouseMove}\n          >\n            <GridLayer height={stageHeight} />\n            {!enableLines ? (\n              <TasksLayer\n                taskTooltip={taskTooltip}\n                setTaskTooltip={setTaskTooltip}\n                create={newTask}\n                onTaskEvent={setExistTask}\n              />\n            ) : (\n              <LayerLine\n                taskTooltip={taskTooltip}\n                setTaskTooltip={setTaskTooltip}\n                create={newTask}\n                onTaskEvent={setExistTask}\n              />\n            )}\n            {startOffset && (\n              <Layer>\n                <KonvaLine\n                  x={xOfStart}\n                  y={rowHeight * 0.8}\n                  points={[0, 0, 0, stageHeight]}\n                  stroke="red"\n                  strokeWidth={1}\n                  dash={[8, 3]}\n                />\n                <KonvaText fill="red" x={xOfStart - 13} y={rowHeight * 0.8 - 20} text="Start" width={columnWidth} />\n              </Layer>\n            )}\n            {newTask && (\n              <Layer>\n                <Rect\n                  x={newTaskDimension.x}\n                  y={newTaskDimension.y}\n                  width={newTaskDimension.width}\n                  height={taskHeight}\n                  fill="rgba(0, 70, 255, 0.4)"\n                  stroke="rgba(0, 70, 255, 0.9)"\n                  strokeWidth={1}\n                  cornerRadius={TASK_BORDER_RADIUS}\n                  dash={[8, 8]}\n                />\n              </Layer>\n            )}\n          </Stage>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Timeline;\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"fb015328a5098df9136970c9a73fa9208c545175"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"fb015328a5098df9136970c9a73fa9208c545175"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_xto4rxazl=function(){return actualCoverage},actualCoverage}cov_xto4rxazl();const DEFAULT_STAGE_SIZE=(cov_xto4rxazl().s[0]++,{height:0,width:0});cov_xto4rxazl().s[1]++;var src_timeline=()=>{cov_xto4rxazl().f[0]++;const{hideResources:hideResources,initialDateTime:initialDateTime,interval:interval,columnWidth:columnWidth,resourcesContentHeight:resourcesContentHeight,resolution:resolution,setDrawRange:setDrawRange,resources:resources,rowHeight:rowHeight,theme:{color:themeColor},timeBlocks:timeBlocks,drawRange:drawRange,onAreaSelect:onAreaSelect,enableLines:enableLines,externalRangeInMillis:externalRangeInMillis,showSummary:showSummary,summaryWidth:summaryWidth}=(cov_xto4rxazl().s[2]++,(0,TimelineContext._)()),[scrollbarSize,setScrollbarSize]=(cov_xto4rxazl().s[3]++,(0,react.useState)(0)),[size,setSize]=(cov_xto4rxazl().s[4]++,(0,react.useState)(DEFAULT_STAGE_SIZE)),[newTask,setNewTask]=(cov_xto4rxazl().s[5]++,(0,react.useState)(!1)),[isMove,setIsMove]=(cov_xto4rxazl().s[6]++,(0,react.useState)(!1)),[newTaskDimension,setNewTaskDimension]=(cov_xto4rxazl().s[7]++,(0,react.useState)({row:0,width:0,x:0,y:0})),[startXClick,setStartXClick]=(cov_xto4rxazl().s[8]++,(0,react.useState)(0)),[existTask,setExistTask]=(cov_xto4rxazl().s[9]++,(0,react.useState)(!1)),stageRef=(cov_xto4rxazl().s[10]++,(0,react.useRef)(null)),wrapper=(cov_xto4rxazl().s[11]++,(0,react.useRef)(null)),[taskTooltip,setTaskTooltip]=(cov_xto4rxazl().s[12]++,(0,react.useState)(null)),onWindowResize=(cov_xto4rxazl().s[13]++,(0,react.useCallback)((()=>{if(cov_xto4rxazl().f[1]++,cov_xto4rxazl().s[14]++,!wrapper.current)return cov_xto4rxazl().b[0][0]++,void cov_xto4rxazl().s[15]++;cov_xto4rxazl().b[0][1]++,cov_xto4rxazl().s[16]++,(0,logger.MD)("Timeline","Resizing window...");const{clientHeight:height,clientWidth:width,offsetHeight:offsetHeight,offsetWidth:offsetWidth}=(cov_xto4rxazl().s[17]++,wrapper.current),scrollbarSize=(cov_xto4rxazl().s[18]++,Math.max(offsetHeight-height,offsetWidth-width));cov_xto4rxazl().s[19]++,setSize({height:height,width:width}),cov_xto4rxazl().s[20]++,setScrollbarSize(scrollbarSize)}),[])),onStageScroll=(cov_xto4rxazl().s[21]++,(0,react.useCallback)((()=>{if(cov_xto4rxazl().f[2]++,cov_xto4rxazl().s[22]++,cov_xto4rxazl().b[2][0]++,!wrapper.current||(cov_xto4rxazl().b[2][1]++,!stageRef.current))return cov_xto4rxazl().b[1][0]++,void cov_xto4rxazl().s[23]++;cov_xto4rxazl().b[1][1]++,cov_xto4rxazl().s[24]++,(0,logger.MD)("Timeline","Scrolling stage...");const{scrollLeft:scrollLeft}=(cov_xto4rxazl().s[25]++,wrapper.current);cov_xto4rxazl().s[26]++,stageRef.current.container().style.transform=`translate(${scrollLeft}px, 0)`,cov_xto4rxazl().s[27]++,stageRef.current.x(-scrollLeft);const start=(cov_xto4rxazl().s[28]++,scrollLeft),end=(cov_xto4rxazl().s[29]++,scrollLeft+size.width);cov_xto4rxazl().s[30]++,setDrawRange({start:start,end:end}),cov_xto4rxazl().s[31]++,setTaskTooltip(null)}),[setDrawRange,size.width]));cov_xto4rxazl().s[32]++,(0,react.useEffect)((()=>(cov_xto4rxazl().f[3]++,cov_xto4rxazl().s[33]++,(0,logger.MD)("Timeline","Initial applying of onResize event listener..."),cov_xto4rxazl().s[34]++,window.addEventListener("resize",onWindowResize),cov_xto4rxazl().s[35]++,onWindowResize(),cov_xto4rxazl().s[36]++,()=>{cov_xto4rxazl().f[4]++,cov_xto4rxazl().s[37]++,window.removeEventListener("resize",onWindowResize)})),[onWindowResize]),cov_xto4rxazl().s[38]++,(0,react.useEffect)((()=>{if(cov_xto4rxazl().f[5]++,cov_xto4rxazl().s[39]++,!wrapper.current)return cov_xto4rxazl().b[3][0]++,void cov_xto4rxazl().s[40]++;cov_xto4rxazl().b[3][1]++,cov_xto4rxazl().s[41]++,(0,logger.MD)("Timeline","Initial applying of onScroll event listener..."),cov_xto4rxazl().s[42]++,wrapper.current.addEventListener("scroll",onStageScroll),cov_xto4rxazl().s[43]++,onStageScroll()}),[onStageScroll]),cov_xto4rxazl().s[44]++,(0,react.useEffect)((()=>{cov_xto4rxazl().f[6]++,cov_xto4rxazl().s[45]++,(0,logger.MD)("Timeline","Applying effects of size changes..."),cov_xto4rxazl().s[46]++,onWindowResize()}),[hideResources,onWindowResize,showSummary]),cov_xto4rxazl().s[47]++,(0,react.useEffect)((()=>{if(cov_xto4rxazl().f[7]++,cov_xto4rxazl().s[48]++,cov_xto4rxazl().b[5][0]++,!wrapper.current||(cov_xto4rxazl().b[5][1]++,!initialDateTime))return cov_xto4rxazl().b[4][0]++,void cov_xto4rxazl().s[49]++;cov_xto4rxazl().b[4][1]++;const timeStart=(cov_xto4rxazl().s[50]++,luxon.c9.fromMillis(initialDateTime)),startOffsetInUnit=(cov_xto4rxazl().s[51]++,timeStart.diff(interval.start).as(resolution.unit));cov_xto4rxazl().s[52]++,wrapper.current.scrollTo({left:startOffsetInUnit*columnWidth/resolution.sizeInUnits})}),[columnWidth,initialDateTime,interval,resolution.sizeInUnits,resolution.unit]);const fullTimelineWidth=(cov_xto4rxazl().s[53]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[8]++,cov_xto4rxazl().s[54]++,columnWidth*timeBlocks.length)),[columnWidth,timeBlocks])),stageHeight=(cov_xto4rxazl().s[55]++,resourcesContentHeight),stageWidth=(cov_xto4rxazl().s[56]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[9]++,cov_xto4rxazl().s[57]++,scrollbarSize+size.width)),[scrollbarSize,size])),timelineCommonStyle=(cov_xto4rxazl().s[58]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[10]++,cov_xto4rxazl().s[59]++,{minHeight:resourcesContentHeight})),[resourcesContentHeight])),summaryLeft=(cov_xto4rxazl().s[60]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[11]++,cov_xto4rxazl().s[61]++,hideResources?(cov_xto4rxazl().b[6][0]++,0):(cov_xto4rxazl().b[6][1]++,utils_resources.ag))),[hideResources])),timelineWrapperStyle=(cov_xto4rxazl().s[62]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[12]++,cov_xto4rxazl().s[63]++,{...timelineCommonStyle,border:`1px solid ${themeColor}`,display:"flex",position:"relative",width:"100%"})),[themeColor,timelineCommonStyle])),resourcesStageWrapperStyle=(cov_xto4rxazl().s[64]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[13]++,cov_xto4rxazl().s[65]++,{...timelineCommonStyle,backgroundColor:"transparent",boxShadow:"4px 4px 32px 1px #0000000f",borderRight:`1px solid ${themeColor}`,left:0,paddingBottom:scrollbarSize,position:"sticky",top:0,width:utils_resources.ag,zIndex:1})),[scrollbarSize,themeColor,timelineCommonStyle])),summaryStageWrapperStyle=(cov_xto4rxazl().s[66]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[14]++,cov_xto4rxazl().s[67]++,{...timelineCommonStyle,backgroundColor:"transparent",boxShadow:"4px 4px 32px 1px #0000000f",borderRight:`1px solid ${themeColor}`,left:summaryLeft,paddingBottom:scrollbarSize,position:"sticky",top:0,width:summaryWidth,zIndex:1})),[scrollbarSize,themeColor,timelineCommonStyle,summaryWidth,summaryLeft])),startOffset=(cov_xto4rxazl().s[68]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[15]++,cov_xto4rxazl().s[69]++,externalRangeInMillis.start===+interval.start?(cov_xto4rxazl().b[7][0]++,cov_xto4rxazl().s[70]++,!1):(cov_xto4rxazl().b[7][1]++,cov_xto4rxazl().s[71]++,!0))),[externalRangeInMillis,interval])),xOfStart=(cov_xto4rxazl().s[72]++,(0,react.useMemo)((()=>{cov_xto4rxazl().f[16]++;const timeStart=(cov_xto4rxazl().s[73]++,luxon.c9.fromMillis(externalRangeInMillis.start)),startOffsetInUnit=(cov_xto4rxazl().s[74]++,timeStart.diff(interval.start).as(resolution.unit));return cov_xto4rxazl().s[75]++,startOffsetInUnit*columnWidth/resolution.sizeInUnits}),[externalRangeInMillis,columnWidth,resolution,interval])),xOfEnd=(cov_xto4rxazl().s[76]++,(0,react.useMemo)((()=>{cov_xto4rxazl().f[17]++;const timeStart=(cov_xto4rxazl().s[77]++,luxon.c9.fromMillis(externalRangeInMillis.end)),startOffsetInUnit=(cov_xto4rxazl().s[78]++,timeStart.diff(interval.start).as(resolution.unit));return cov_xto4rxazl().s[79]++,startOffsetInUnit*columnWidth/resolution.sizeInUnits}),[externalRangeInMillis,columnWidth,resolution,interval])),endOffset=(cov_xto4rxazl().s[80]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[18]++,cov_xto4rxazl().s[81]++,fullTimelineWidth-xOfEnd)),[fullTimelineWidth,xOfEnd])),marginOffset=(cov_xto4rxazl().s[82]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[19]++,cov_xto4rxazl().s[83]++,.015*columnWidth)),[columnWidth])),gridStageWrapperStyle=(cov_xto4rxazl().s[84]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[20]++,cov_xto4rxazl().s[85]++,{...timelineCommonStyle,overflow:"hidden",width:fullTimelineWidth-endOffset+marginOffset})),[fullTimelineWidth,timelineCommonStyle,endOffset,marginOffset])),resourcesOffset=(cov_xto4rxazl().s[86]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[21]++,cov_xto4rxazl().s[87]++,hideResources?(cov_xto4rxazl().b[8][0]++,0):(cov_xto4rxazl().b[8][1]++,utils_resources.ag+1))),[hideResources])),summaryOffset=(cov_xto4rxazl().s[88]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[22]++,cov_xto4rxazl().s[89]++,showSummary?(cov_xto4rxazl().b[9][1]++,summaryWidth):(cov_xto4rxazl().b[9][0]++,0))),[showSummary,summaryWidth])),gridWrapperStyle=(cov_xto4rxazl().s[90]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[23]++,cov_xto4rxazl().s[91]++,{...timelineCommonStyle,left:resourcesOffset+summaryOffset,overflow:"auto",position:"absolute",top:0,width:`calc(100% - (${resourcesOffset}px + ${summaryOffset}px))`})),[resourcesOffset,timelineCommonStyle,summaryOffset])),createNewTaskData=(cov_xto4rxazl().s[92]++,(0,react.useCallback)((()=>{cov_xto4rxazl().f[24]++;const taksRange=(cov_xto4rxazl().s[93]++,(0,utils_tasks.jt)(newTaskDimension,resolution,columnWidth,interval));return cov_xto4rxazl().s[94]++,{resourceId:resources[newTaskDimension.row].id,range:taksRange}}),[newTaskDimension,columnWidth,resolution,interval,resources])),onMouseDown=(cov_xto4rxazl().s[95]++,(0,react.useCallback)((e=>{if(cov_xto4rxazl().f[25]++,cov_xto4rxazl().s[96]++,cov_xto4rxazl().b[11][0]++,!onAreaSelect||(cov_xto4rxazl().b[11][1]++,existTask))return cov_xto4rxazl().b[10][0]++,void cov_xto4rxazl().s[97]++;cov_xto4rxazl().b[10][1]++;const stage=(cov_xto4rxazl().s[98]++,e.target.getStage()),clickId=(cov_xto4rxazl().s[99]++,e.target._id),stageId=(cov_xto4rxazl().s[100]++,stage._id);if(cov_xto4rxazl().s[101]++,clickId===stageId){cov_xto4rxazl().b[12][0]++;const pointerPosition=(cov_xto4rxazl().s[102]++,stage.getPointerPosition()),resourceIndex=(cov_xto4rxazl().s[103]++,(0,utils_resources.bd)(pointerPosition.y,rowHeight,resources)),y=(cov_xto4rxazl().s[104]++,(0,utils_tasks.XO)(resourceIndex,rowHeight));cov_xto4rxazl().s[105]++,setStartXClick(drawRange.start+pointerPosition.x),cov_xto4rxazl().s[106]++,setNewTaskDimension({row:resourceIndex,width:1,x:drawRange.start+pointerPosition.x,y:y}),cov_xto4rxazl().s[107]++,setNewTask(!0),cov_xto4rxazl().s[108]++,setIsMove(!0)}else cov_xto4rxazl().b[12][1]++}),[resources,rowHeight,drawRange,onAreaSelect,existTask])),onMouseUp=(cov_xto4rxazl().s[109]++,(0,react.useCallback)((e=>{if(cov_xto4rxazl().f[26]++,cov_xto4rxazl().s[110]++,cov_xto4rxazl().b[14][0]++,!onAreaSelect||(cov_xto4rxazl().b[14][1]++,existTask))return cov_xto4rxazl().b[13][0]++,void cov_xto4rxazl().s[111]++;cov_xto4rxazl().b[13][1]++;const newTask=(cov_xto4rxazl().s[112]++,createNewTaskData());cov_xto4rxazl().s[113]++,onAreaSelect(newTask);const stage=(cov_xto4rxazl().s[114]++,e.target.getStage());cov_xto4rxazl().s[115]++,stage.container().style.cursor="default",cov_xto4rxazl().s[116]++,setIsMove(!1),cov_xto4rxazl().s[117]++,setNewTask(!1),cov_xto4rxazl().s[118]++,setNewTaskDimension({...newTaskDimension,width:1})}),[onAreaSelect,createNewTaskData,newTaskDimension,existTask])),onMouseMove=(cov_xto4rxazl().s[119]++,(0,react.useCallback)((e=>{if(cov_xto4rxazl().f[27]++,cov_xto4rxazl().s[120]++,isMove){cov_xto4rxazl().b[15][0]++;const stage=(cov_xto4rxazl().s[121]++,e.target.getStage());cov_xto4rxazl().s[122]++,stage.container().style.cursor="crosshair";const xpos=(cov_xto4rxazl().s[123]++,stage.getPointerPosition().x+drawRange.start),width=(cov_xto4rxazl().s[124]++,xpos-startXClick);let controlledX=(cov_xto4rxazl().s[125]++,startXClick);const controlledWidth=(cov_xto4rxazl().s[126]++,width<0?(cov_xto4rxazl().b[16][0]++,-1*width):(cov_xto4rxazl().b[16][1]++,width));cov_xto4rxazl().s[127]++,width<0?(cov_xto4rxazl().b[17][0]++,cov_xto4rxazl().s[128]++,controlledX=xpos):cov_xto4rxazl().b[17][1]++,cov_xto4rxazl().s[129]++,setNewTaskDimension({...newTaskDimension,x:controlledX,width:controlledWidth})}else cov_xto4rxazl().b[15][1]++}),[newTaskDimension,isMove,drawRange,startXClick])),taskHeight=(cov_xto4rxazl().s[130]++,(0,react.useMemo)((()=>(cov_xto4rxazl().f[28]++,cov_xto4rxazl().s[131]++,rowHeight*utils_tasks.yu)),[rowHeight]));return cov_xto4rxazl().s[132]++,react.createElement("div",{style:timelineWrapperStyle},(cov_xto4rxazl().b[18][0]++,!hideResources&&(cov_xto4rxazl().b[18][1]++,react.createElement("div",{style:resourcesStageWrapperStyle},react.createElement(ReactKonva.BI,{height:stageHeight,width:utils_resources.ag},react.createElement(components_Layer.A,null))))),(cov_xto4rxazl().b[19][0]++,showSummary&&(cov_xto4rxazl().b[19][1]++,react.createElement("div",{style:summaryStageWrapperStyle},react.createElement(ReactKonva.BI,{height:stageHeight,width:summaryWidth},react.createElement(components_Summary,null))))),react.createElement("div",{ref:wrapper,style:gridWrapperStyle},react.createElement("div",{style:gridStageWrapperStyle},react.createElement(ReactKonva.BI,{ref:stageRef,height:stageHeight,width:stageWidth,onMouseDown:onMouseDown,onMouseUp:onMouseUp,onMouseMove:onMouseMove},react.createElement(grid_Layer,{height:stageHeight}),enableLines?(cov_xto4rxazl().b[20][1]++,react.createElement(components_LayerLine,{taskTooltip:taskTooltip,setTaskTooltip:setTaskTooltip,create:newTask,onTaskEvent:setExistTask})):(cov_xto4rxazl().b[20][0]++,react.createElement(tasks_components_Layer.A,{taskTooltip:taskTooltip,setTaskTooltip:setTaskTooltip,create:newTask,onTaskEvent:setExistTask})),(cov_xto4rxazl().b[21][0]++,startOffset&&(cov_xto4rxazl().b[21][1]++,react.createElement(ReactKonva.Wd,null,react.createElement(_konva.mQ,{x:xOfStart,y:.8*rowHeight,points:[0,0,0,stageHeight],stroke:"red",strokeWidth:1,dash:[8,3]}),react.createElement(_konva.ty,{fill:"red",x:xOfStart-13,y:.8*rowHeight-20,text:"Start",width:columnWidth})))),(cov_xto4rxazl().b[22][0]++,newTask&&(cov_xto4rxazl().b[22][1]++,react.createElement(ReactKonva.Wd,null,react.createElement(ReactKonva.rw,{x:newTaskDimension.x,y:newTaskDimension.y,width:newTaskDimension.width,height:taskHeight,fill:"rgba(0, 70, 255, 0.4)",stroke:"rgba(0, 70, 255, 0.9)",strokeWidth:1,cornerRadius:utils_tasks.wK,dash:[8,8]}))))))))};try{timeline.displayName="timeline",timeline.__docgenInfo={description:"",displayName:"timeline",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/timeline/index.tsx#timeline"]={docgenInfo:timeline.__docgenInfo,name:"timeline",path:"src/timeline/index.tsx#timeline"})}catch(__react_docgen_typescript_loader_error){}function cov_17h00w8kph(){var path="/home/runner/work/konva-timeline/konva-timeline/src/KonvaTimeline/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"58f62c584d851e0e0e2088cf518885e3d3d77c3c"===coverage[path].hash||(coverage[path]={path:"/home/runner/work/konva-timeline/konva-timeline/src/KonvaTimeline/index.tsx",statementMap:{0:{start:{line:4,column:22},end:{line:6,column:1}},1:{start:{line:5,column:2},end:{line:5,column:117}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:4,column:22},end:{line:4,column:23}},loc:{start:{line:4,column:31},end:{line:6,column:1}},line:4}},branchMap:{},s:{0:0,1:0},f:{0:0},b:{},inputSourceMap:{version:3,names:["React","Timeline","TimelineProvider","KonvaTimeline","props","createElement"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/KonvaTimeline/index.tsx"],sourcesContent:['import React, { FC } from "react";\n\nimport Timeline from "../timeline";\nimport { TimelineProvider, TimelineProviderProps } from "../timeline/TimelineContext";\n\nconst KonvaTimeline: FC<TimelineProviderProps> = (props) => {\n  return (\n    <TimelineProvider {...props}>\n      <Timeline />\n    </TimelineProvider>\n  );\n};\n\nexport default KonvaTimeline;\n'],mappings:"AAAA,OAAOA,KAAK,MAAc,OAAO;AAEjC,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAASC,gBAAgB,QAA+B,6BAA6B;AAErF,MAAMC,aAAwC,GAAIC,KAAK,IAAK;EAC1D,oBACEJ,KAAA,CAAAK,aAAA,CAACH,gBAAgB,EAAKE,KAAK,eACzBJ,KAAA,CAAAK,aAAA,CAACJ,QAAQ,MAAE,CACK,CAAC;AAEvB,CAAC;AAED,eAAeE,aAAa",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"58f62c584d851e0e0e2088cf518885e3d3d77c3c"});var actualCoverage=coverage[path];return cov_17h00w8kph=function(){return actualCoverage},actualCoverage}cov_17h00w8kph(),cov_17h00w8kph().s[0]++;const KonvaTimeline=props=>(cov_17h00w8kph().f[0]++,cov_17h00w8kph().s[1]++,react.createElement(TimelineContext.V,props,react.createElement(src_timeline,null)));var src_KonvaTimeline=KonvaTimeline;try{KonvaTimeline.displayName="KonvaTimeline",KonvaTimeline.__docgenInfo={description:"",displayName:"KonvaTimeline",props:{columnWidth:{defaultValue:null,description:"Custom column width (defaults to 60px)",name:"columnWidth",required:!1,type:{name:"number"}},displayTasksLabel:{defaultValue:null,description:"Enables tasks label display",name:"displayTasksLabel",required:!1,type:{name:"boolean"}},dragResolution:{defaultValue:null,description:"Drag and drop resolution (if not passed, defaults to resolution)",name:"dragResolution",required:!1,type:{name:"enum",value:[{value:'"1min"'},{value:'"5min"'},{value:'"10min"'},{value:'"15min"'},{value:'"30min"'},{value:'"1hrs"'},{value:'"2hrs"'},{value:'"6hrs"'},{value:'"12hrs"'},{value:'"1day"'},{value:'"1week"'},{value:'"2weeks"'}]}},hideResources:{defaultValue:null,description:"Flag to hide resource column (defaults to false)",name:"hideResources",required:!1,type:{name:"boolean"}},resolution:{defaultValue:null,description:"Resolution to display data in konva-timeline (defaults to 1min)",name:"resolution",required:!1,type:{name:"enum",value:[{value:'"1min"'},{value:'"5min"'},{value:'"10min"'},{value:'"15min"'},{value:'"30min"'},{value:'"1hrs"'},{value:'"2hrs"'},{value:'"6hrs"'},{value:'"12hrs"'},{value:'"1day"'},{value:'"1week"'},{value:'"2weeks"'}]}},rowHeight:{defaultValue:null,description:"Custom row height (defaults to 50px)",name:"rowHeight",required:!1,type:{name:"number"}},tasks:{defaultValue:null,description:"List of tasks to be displayed (defaults to [])",name:"tasks",required:!1,type:{name:"TaskData<TimeRange>[]"}},range:{defaultValue:null,description:"Time range to be displayed",name:"range",required:!0,type:{name:"TimeRange"}},resources:{defaultValue:null,description:"List of resources to be displayed",name:"resources",required:!0,type:{name:"Resource[]"}},debug:{defaultValue:null,description:"Enables debug logging in browser console",name:"debug",required:!1,type:{name:"boolean"}},enableDrag:{defaultValue:null,description:"Enables drag&drop operation on tasks",name:"enableDrag",required:!1,type:{name:"boolean"}},enableResize:{defaultValue:null,description:"Enables resize operation on tasks",name:"enableResize",required:!1,type:{name:"boolean"}},headerLabel:{defaultValue:null,description:"Label to display in header column",name:"headerLabel",required:!1,type:{name:"string"}},initialDateTime:{defaultValue:null,description:"Initial date time to scroll to",name:"initialDateTime",required:!1,type:{name:"string | number"}},onErrors:{defaultValue:null,description:"Callback invoked when errors are thrown",name:"onErrors",required:!1,type:{name:"((errors: KonvaTimelineError[]) => void)"}},onTaskClick:{defaultValue:null,description:"Event handler for task click",name:"onTaskClick",required:!1,type:{name:"((task: TaskData<TimeRange>) => void)"}},onTaskChange:{defaultValue:null,description:"Event handler for task change event (drag and resize)",name:"onTaskChange",required:!1,type:{name:"((task: TaskData<TimeRange>, opts?: { tasksId: string[]; addTime: number; }) => void)"}},timezone:{defaultValue:null,description:"Timezone used for display (defaults to 'system')",name:"timezone",required:!1,type:{name:"string"}},theme:{defaultValue:null,description:"Theme color in use",name:"theme",required:!1,type:{name:"enum",value:[{value:'"dark"'},{value:'"light"'}]}},localized:{defaultValue:null,description:"ToolTips Labels",name:"localized",required:!1,type:{name:"Localized"}},dateLocale:{defaultValue:null,description:"Language used for date format",name:"dateLocale",required:!1,type:{name:"string"}},onAreaSelect:{defaultValue:null,description:"Event handler for task add event",name:"onAreaSelect",required:!1,type:{name:"((task: AreaSelect) => void)"}},toolTip:{defaultValue:null,description:"ToolTip display",name:"toolTip",required:!1,type:{name:"boolean"}},customToolTip:{defaultValue:null,description:"Callback that return a personalized tooltip( 200x100 is max possible size)",name:"customToolTip",required:!1,type:{name:"((taskData: CustomToolTipData) => Element)"}},enableTaskPattern:{defaultValue:null,description:"Enables pattern for incomplete part of the task (default true)",name:"enableTaskPattern",required:!1,type:{name:"boolean"}},enableLines:{defaultValue:null,description:"Enables connection between tasks (if kLine is set in taskData)",name:"enableLines",required:!1,type:{name:"boolean"}},onResourceClick:{defaultValue:null,description:"Event handler for resource click",name:"onResourceClick",required:!1,type:{name:"((task: Resource) => void)"}},summary:{defaultValue:null,description:"Summary data",name:"summary",required:!1,type:{name:"{ id: string; label: string; }[]"}},showSummary:{defaultValue:null,description:"Enable summary",name:"showSummary",required:!1,type:{name:"boolean"}},summaryHeader:{defaultValue:null,description:"Header label to display in summary column, default is Summary",name:"summaryHeader",required:!1,type:{name:"string"}},customResources:{defaultValue:null,description:"Callback that return a personalized resources(this func return also the dimension of a single resourse)",name:"customResources",required:!1,type:{name:"((resourceData: CustomRes) => Element)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/KonvaTimeline/index.tsx#KonvaTimeline"]={docgenInfo:KonvaTimeline.__docgenInfo,name:"KonvaTimeline",path:"src/KonvaTimeline/index.tsx#KonvaTimeline"})}catch(__react_docgen_typescript_loader_error){}},"./src/resources/components/Layer/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_konva__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-konva/es/ReactKonva.js"),_timeline_TimelineContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/timeline/TimelineContext.tsx"),_Header__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/resources/components/Header/index.tsx");function cov_1lrv30s158(){var path="/home/runner/work/konva-timeline/konva-timeline/src/resources/components/Layer/index.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"9b6bd5c0698a3ddcfcd810a5574ee4d738970a1d"===coverage[path].hash||(coverage[path]={path:"/home/runner/work/konva-timeline/konva-timeline/src/resources/components/Layer/index.tsx",statementMap:{0:{start:{line:8,column:23},end:{line:23,column:1}},1:{start:{line:11,column:6},end:{line:11,column:26}},2:{start:{line:12,column:2},end:{line:22,column:6}},3:{start:{line:13,column:19},end:{line:13,column:49}},4:{start:{line:14,column:19},end:{line:14,column:45}},5:{start:{line:15,column:4},end:{line:21,column:7}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:8,column:23},end:{line:8,column:24}},loc:{start:{line:8,column:29},end:{line:23,column:1}},line:8},1:{name:"(anonymous_1)",decl:{start:{line:12,column:69},end:{line:12,column:70}},loc:{start:{line:12,column:90},end:{line:22,column:3}},line:12}},branchMap:{0:{loc:{start:{line:14,column:19},end:{line:14,column:45}},type:"cond-expr",locations:[{start:{line:14,column:33},end:{line:14,column:37}},{start:{line:14,column:40},end:{line:14,column:45}}],line:14}},s:{0:0,1:0,2:0,3:0,4:0,5:0},f:{0:0,1:0},b:{0:[0,0]},inputSourceMap:{version:3,names:["React","Layer","useTimelineContext","ResourceHeader","ResourcesLayer","resources","createElement","map","resource","index","isLast","length","header","key","id"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/resources/components/Layer/index.tsx"],sourcesContent:['import React, { FC } from "react";\nimport { Layer } from "react-konva";\n\nimport { useTimelineContext } from "../../../timeline/TimelineContext";\nimport ResourceHeader from "../Header";\n\nexport interface ResourcesLayerProps {}\n\n/**\n * This component renders a Konva layer containing one header for each resource (`ResourceHeader`).\n */\nconst ResourcesLayer: FC<ResourcesLayerProps> = () => {\n  const { resources } = useTimelineContext();\n\n  return (\n    <Layer>\n      {resources.map((resource, index) => {\n        const isLast = index === resources.length - 1;\n        const header = index === 0 ? true : false;\n\n        return (\n          <ResourceHeader\n            key={`resource-${resource.id}`}\n            index={index}\n            isLast={isLast}\n            resource={resource}\n            header={header}\n          />\n        );\n      })}\n    </Layer>\n  );\n};\n\nexport default ResourcesLayer;\n'],mappings:"AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,SAASC,KAAK,QAAQ,aAAa;AAEnC,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,OAAOC,cAAc,MAAM,WAAW;AAItC;AACA;AACA;AACA,MAAMC,cAAuC,GAAGA,CAAA,KAAM;EACpD,MAAM;IAAEC;EAAU,CAAC,GAAGH,kBAAkB,CAAC,CAAC;EAE1C,oBACEF,KAAA,CAAAM,aAAA,CAACL,KAAK,QACHI,SAAS,CAACE,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;IAClC,MAAMC,MAAM,GAAGD,KAAK,KAAKJ,SAAS,CAACM,MAAM,GAAG,CAAC;IAC7C,MAAMC,MAAM,GAAGH,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK;IAEzC,oBACET,KAAA,CAAAM,aAAA,CAACH,cAAc;MACbU,GAAG,EAAE,YAAYL,QAAQ,CAACM,EAAE,EAAG;MAC/BL,KAAK,EAAEA,KAAM;MACbC,MAAM,EAAEA,MAAO;MACfF,QAAQ,EAAEA,QAAS;MACnBI,MAAM,EAAEA;IAAO,CAChB,CAAC;EAEN,CAAC,CACI,CAAC;AAEZ,CAAC;AAED,eAAeR,cAAc",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9b6bd5c0698a3ddcfcd810a5574ee4d738970a1d"});var actualCoverage=coverage[path];return cov_1lrv30s158=function(){return actualCoverage},actualCoverage}cov_1lrv30s158(),cov_1lrv30s158().s[0]++;__webpack_exports__.A=()=>{cov_1lrv30s158().f[0]++;const{resources:resources}=(cov_1lrv30s158().s[1]++,(0,_timeline_TimelineContext__WEBPACK_IMPORTED_MODULE_2__._)());return cov_1lrv30s158().s[2]++,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_konva__WEBPACK_IMPORTED_MODULE_1__.Wd,null,resources.map(((resource,index)=>{cov_1lrv30s158().f[1]++;const isLast=(cov_1lrv30s158().s[3]++,index===resources.length-1),header=(cov_1lrv30s158().s[4]++,0===index?(cov_1lrv30s158().b[0][0]++,!0):(cov_1lrv30s158().b[0][1]++,!1));return cov_1lrv30s158().s[5]++,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Header__WEBPACK_IMPORTED_MODULE_3__.A,{key:`resource-${resource.id}`,index:index,isLast:isLast,resource:resource,header:header})})))};try{Layer.displayName="Layer",Layer.__docgenInfo={description:"This component renders a Konva layer containing one header for each resource (`ResourceHeader`).",displayName:"Layer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/resources/components/Layer/index.tsx#Layer"]={docgenInfo:Layer.__docgenInfo,name:"Layer",path:"src/resources/components/Layer/index.tsx#Layer"})}catch(__react_docgen_typescript_loader_error){}}}]);