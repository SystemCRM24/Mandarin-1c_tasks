"use strict";(self.webpackChunk_melfore_konva_timeline=self.webpackChunk_melfore_konva_timeline||[]).push([[52],{"./src/resources/utils/resources.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function cov_9ptvw0d93(){var path="/home/runner/work/konva-timeline/konva-timeline/src/resources/utils/resources.ts",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/resources/utils/resources.ts",statementMap:{0:{start:{line:1,column:24},end:{line:5,column:1}},1:{start:{line:6,column:37},end:{line:6,column:40}},2:{start:{line:7,column:36},end:{line:7,column:38}},3:{start:{line:13,column:33},end:{line:16,column:16}},4:{start:{line:13,column:61},end:{line:16,column:16}},5:{start:{line:26,column:45},end:{line:39,column:1}},6:{start:{line:27,column:2},end:{line:30,column:3}},7:{start:{line:29,column:4},end:{line:29,column:42}},8:{start:{line:31,column:22},end:{line:31,column:56}},9:{start:{line:32,column:2},end:{line:34,column:3}},10:{start:{line:33,column:4},end:{line:33,column:22}},11:{start:{line:35,column:2},end:{line:37,column:3}},12:{start:{line:36,column:4},end:{line:36,column:41}},13:{start:{line:38,column:2},end:{line:38,column:23}},14:{start:{line:48,column:40},end:{line:51,column:1}},15:{start:{line:49,column:24},end:{line:49,column:87}},16:{start:{line:50,column:2},end:{line:50,column:34}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:13,column:33},end:{line:13,column:34}},loc:{start:{line:13,column:61},end:{line:16,column:16}},line:13},1:{name:"(anonymous_1)",decl:{start:{line:26,column:45},end:{line:26,column:46}},loc:{start:{line:26,column:83},end:{line:39,column:1}},line:26},2:{name:"(anonymous_2)",decl:{start:{line:48,column:40},end:{line:48,column:41}},loc:{start:{line:48,column:78},end:{line:51,column:1}},line:48}},branchMap:{0:{loc:{start:{line:15,column:9},end:{line:15,column:45}},type:"binary-expr",locations:[{start:{line:15,column:9},end:{line:15,column:20}},{start:{line:15,column:24},end:{line:15,column:45}}],line:15},1:{loc:{start:{line:27,column:2},end:{line:30,column:3}},type:"if",locations:[{start:{line:27,column:2},end:{line:30,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:27},2:{loc:{start:{line:27,column:6},end:{line:27,column:37}},type:"binary-expr",locations:[{start:{line:27,column:6},end:{line:27,column:16}},{start:{line:27,column:20},end:{line:27,column:37}}],line:27},3:{loc:{start:{line:32,column:2},end:{line:34,column:3}},type:"if",locations:[{start:{line:32,column:2},end:{line:34,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:32},4:{loc:{start:{line:35,column:2},end:{line:37,column:3}},type:"if",locations:[{start:{line:35,column:2},end:{line:37,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:35}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0},f:{0:0,1:0,2:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0]},inputSourceMap:{version:3,names:["RESOURCE_HEADER","id","color","label","RESOURCE_HEADER_WIDTH","RESOURCE_TEXT_OFFSET","addHeaderResource","resources","headerLabel","findResourceIndexByCoordinate","coordinate","rowHeight","length","Error","resourceIndex","Math","floor","findResourceByCoordinate"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/resources/utils/resources.ts"],sourcesContent:['export interface Resource {\n  /**\n   * Unique identifier of the resource\n   */\n  id: string;\n  /**\n   * Label of the resource\n   */\n  label: string;\n  /**\n   * Color assigned to the resource, accept only HEX\n   */\n  color: string;\n  /**\n   * Color assigned to the resource for incomplete part of Task, accept only HEX\n   */\n  toCompleteColor?: string;\n}\n\nconst RESOURCE_HEADER: Resource = {\n  id: "-1",\n  color: "transparent",\n  label: "Header",\n};\n\nexport const RESOURCE_HEADER_WIDTH = 200;\n\nexport const RESOURCE_TEXT_OFFSET = 12;\n\n/**\n * Adds header resource to incoming list of resources\n * @param resources the list of all resources\n */\nexport const addHeaderResource = (resources: Resource[], headerLabel?: string): Resource[] => [\n  { ...RESOURCE_HEADER, label: headerLabel || RESOURCE_HEADER.label },\n  ...resources,\n];\n\n/**\n * Finds resource index given a y coordinate. Used when determining the resource from pointer position.\n * Excludes the header resource, hence resources are considered index 1 based.\n * @param coordinate the y coordinate from pointer position\n * @param rowHeight the current height of rows\n * @param resources the list of all resources\n * @throws if resources is empty\n */\nexport const findResourceIndexByCoordinate = (coordinate: number, rowHeight: number, resources: Resource[]): number => {\n  if (!resources || !resources.length) {\n    // TODO#lb: improve adding KonvaTimeline error\n    throw new Error("Resources is empty");\n  }\n\n  let resourceIndex = Math.floor(coordinate / rowHeight);\n  if (resourceIndex < 1) {\n    resourceIndex = 1;\n  }\n\n  if (resources.length <= resourceIndex) {\n    resourceIndex = resources.length - 1;\n  }\n\n  return resourceIndex;\n};\n\n/**\n * Finds resource object given a y coordinate. Used when determining the resource from pointer position.\n * Excludes the header resource, hence resources are considered index 1 based.\n * @param coordinate the y coordinate from pointer position\n * @param rowHeight the current height of rows\n * @param resources the list of all resources\n */\nexport const findResourceByCoordinate = (coordinate: number, rowHeight: number, resources: Resource[]): Resource => {\n  const resourceIndex = findResourceIndexByCoordinate(coordinate, rowHeight, resources);\n  return resources[resourceIndex];\n};\n'],mappings:"AAmBA,MAAMA,eAAyB,GAAG;EAChCC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,aAAa;EACpBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAG,GAAG;AAExC,OAAO,MAAMC,oBAAoB,GAAG,EAAE;;AAEtC;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,SAAqB,EAAEC,WAAoB,KAAiB,CAC5F;EAAE,GAAGR,eAAe;EAAEG,KAAK,EAAEK,WAAW,IAAIR,eAAe,CAACG;AAAM,CAAC,EACnE,GAAGI,SAAS,CACb;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,6BAA6B,GAAGA,CAACC,UAAkB,EAAEC,SAAiB,EAAEJ,SAAqB,KAAa;EACrH,IAAI,CAACA,SAAS,IAAI,CAACA,SAAS,CAACK,MAAM,EAAE;IACnC;IACA,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACvC;EAEA,IAAIC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,GAAGC,SAAS,CAAC;EACtD,IAAIG,aAAa,GAAG,CAAC,EAAE;IACrBA,aAAa,GAAG,CAAC;EACnB;EAEA,IAAIP,SAAS,CAACK,MAAM,IAAIE,aAAa,EAAE;IACrCA,aAAa,GAAGP,SAAS,CAACK,MAAM,GAAG,CAAC;EACtC;EAEA,OAAOE,aAAa;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,wBAAwB,GAAGA,CAACP,UAAkB,EAAEC,SAAiB,EAAEJ,SAAqB,KAAe;EAClH,MAAMO,aAAa,GAAGL,6BAA6B,CAACC,UAAU,EAAEC,SAAS,EAAEJ,SAAS,CAAC;EACrF,OAAOA,SAAS,CAACO,aAAa,CAAC;AACjC,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0117e8856b43e74e913126d1a93a69e70aeea59e"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"0117e8856b43e74e913126d1a93a69e70aeea59e"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_9ptvw0d93=function(){return actualCoverage},actualCoverage}__webpack_require__.d(__webpack_exports__,{Ld:function(){return findResourceByCoordinate},NQ:function(){return RESOURCE_TEXT_OFFSET},ag:function(){return RESOURCE_HEADER_WIDTH},bd:function(){return findResourceIndexByCoordinate},hc:function(){return addHeaderResource}}),cov_9ptvw0d93();const RESOURCE_HEADER=(cov_9ptvw0d93().s[0]++,{id:"-1",color:"transparent",label:"Header"}),RESOURCE_HEADER_WIDTH=(cov_9ptvw0d93().s[1]++,200),RESOURCE_TEXT_OFFSET=(cov_9ptvw0d93().s[2]++,12);cov_9ptvw0d93().s[3]++;const addHeaderResource=(resources,headerLabel)=>(cov_9ptvw0d93().f[0]++,cov_9ptvw0d93().s[4]++,[{...RESOURCE_HEADER,label:(cov_9ptvw0d93().b[0][0]++,headerLabel||(cov_9ptvw0d93().b[0][1]++,RESOURCE_HEADER.label))},...resources]);cov_9ptvw0d93().s[5]++;const findResourceIndexByCoordinate=(coordinate,rowHeight,resources)=>{if(cov_9ptvw0d93().f[1]++,cov_9ptvw0d93().s[6]++,cov_9ptvw0d93().b[2][0]++,!resources||(cov_9ptvw0d93().b[2][1]++,!resources.length))throw cov_9ptvw0d93().b[1][0]++,cov_9ptvw0d93().s[7]++,new Error("Resources is empty");cov_9ptvw0d93().b[1][1]++;let resourceIndex=(cov_9ptvw0d93().s[8]++,Math.floor(coordinate/rowHeight));return cov_9ptvw0d93().s[9]++,resourceIndex<1?(cov_9ptvw0d93().b[3][0]++,cov_9ptvw0d93().s[10]++,resourceIndex=1):cov_9ptvw0d93().b[3][1]++,cov_9ptvw0d93().s[11]++,resources.length<=resourceIndex?(cov_9ptvw0d93().b[4][0]++,cov_9ptvw0d93().s[12]++,resourceIndex=resources.length-1):cov_9ptvw0d93().b[4][1]++,cov_9ptvw0d93().s[13]++,resourceIndex};cov_9ptvw0d93().s[14]++;const findResourceByCoordinate=(coordinate,rowHeight,resources)=>{cov_9ptvw0d93().f[2]++;const resourceIndex=(cov_9ptvw0d93().s[15]++,findResourceIndexByCoordinate(coordinate,rowHeight,resources));return cov_9ptvw0d93().s[16]++,resources[resourceIndex]}},"./src/tasks/utils/tasks.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{NT:function(){return filterTasks},QY:function(){return connectedTasks},Rb:function(){return validateTasks},XO:function(){return getTaskYCoordinate},iF:function(){return TASK_OFFSET_Y},jt:function(){return onEndTimeRange},wK:function(){return TASK_BORDER_RADIUS},yu:function(){return TASK_HEIGHT_OFFSET}});var luxon__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/luxon/src/luxon.js"),_utils_time__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/utils/time.ts");function cov_iow4v29cs(){var path="/home/runner/work/konva-timeline/konva-timeline/src/tasks/utils/tasks.ts",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/tasks/utils/tasks.ts",statementMap:{0:{start:{line:3,column:29},end:{line:3,column:33}},1:{start:{line:4,column:34},end:{line:4,column:35}},2:{start:{line:5,column:34},end:{line:5,column:37}},3:{start:{line:12,column:34},end:{line:12,column:107}},4:{start:{line:12,column:59},end:{line:12,column:107}},5:{start:{line:19,column:29},end:{line:79,column:1}},6:{start:{line:20,column:13},end:{line:20,column:33}},7:{start:{line:21,column:2},end:{line:30,column:3}},8:{start:{line:22,column:4},end:{line:29,column:6}},9:{start:{line:31,column:2},end:{line:40,column:3}},10:{start:{line:32,column:4},end:{line:39,column:6}},11:{start:{line:41,column:17},end:{line:41,column:19}},12:{start:{line:42,column:16},end:{line:74,column:4}},13:{start:{line:42,column:35},end:{line:48,column:3}},14:{start:{line:55,column:4},end:{line:63,column:5}},15:{start:{line:56,column:6},end:{line:61,column:9}},16:{start:{line:62,column:6},end:{line:62,column:19}},17:{start:{line:64,column:4},end:{line:72,column:5}},18:{start:{line:65,column:6},end:{line:70,column:9}},19:{start:{line:71,column:6},end:{line:71,column:19}},20:{start:{line:73,column:4},end:{line:73,column:16}},21:{start:{line:75,column:2},end:{line:78,column:4}},22:{start:{line:86,column:27},end:{line:104,column:1}},23:{start:{line:87,column:2},end:{line:89,column:3}},24:{start:{line:88,column:4},end:{line:88,column:14}},25:{start:{line:90,column:2},end:{line:103,column:5}},26:{start:{line:96,column:4},end:{line:98,column:5}},27:{start:{line:97,column:6},end:{line:97,column:19}},28:{start:{line:99,column:4},end:{line:101,column:5}},29:{start:{line:100,column:6},end:{line:100,column:19}},30:{start:{line:102,column:4},end:{line:102,column:16}},31:{start:{line:105,column:26},end:{line:117,column:1}},32:{start:{line:106,column:2},end:{line:108,column:3}},33:{start:{line:107,column:4},end:{line:107,column:14}},34:{start:{line:109,column:2},end:{line:116,column:5}},35:{start:{line:112,column:4},end:{line:114,column:5}},36:{start:{line:113,column:6},end:{line:113,column:18}},37:{start:{line:115,column:4},end:{line:115,column:17}},38:{start:{line:118,column:21},end:{line:120,column:1}},39:{start:{line:119,column:2},end:{line:119,column:55}},40:{start:{line:121,column:30},end:{line:192,column:1}},41:{start:{line:122,column:22},end:{line:122,column:96}},42:{start:{line:123,column:14},end:{line:123,column:21}},43:{start:{line:124,column:18},end:{line:124,column:43}},44:{start:{line:125,column:21},end:{line:125,column:74}},45:{start:{line:126,column:26},end:{line:128,column:15}},46:{start:{line:129,column:20},end:{line:129,column:56}},47:{start:{line:130,column:27},end:{line:130,column:88}},48:{start:{line:131,column:29},end:{line:131,column:67}},49:{start:{line:132,column:25},end:{line:132,column:108}},50:{start:{line:133,column:26},end:{line:133,column:63}},51:{start:{line:134,column:22},end:{line:134,column:96}},52:{start:{line:135,column:17},end:{line:135,column:48}},53:{start:{line:136,column:21},end:{line:136,column:68}},54:{start:{line:137,column:18},end:{line:139,column:27}},55:{start:{line:140,column:22},end:{line:140,column:44}},56:{start:{line:141,column:12},end:{line:141,column:13}},57:{start:{line:142,column:23},end:{line:142,column:24}},58:{start:{line:143,column:2},end:{line:180,column:3}},59:{start:{line:144,column:4},end:{line:150,column:5}},60:{start:{line:145,column:6},end:{line:145,column:29}},61:{start:{line:146,column:6},end:{line:149,column:7}},62:{start:{line:147,column:8},end:{line:147,column:16}},63:{start:{line:148,column:8},end:{line:148,column:29}},64:{start:{line:151,column:4},end:{line:159,column:5}},65:{start:{line:152,column:26},end:{line:152,column:94}},66:{start:{line:153,column:33},end:{line:155,column:35}},67:{start:{line:156,column:6},end:{line:158,column:7}},68:{start:{line:157,column:8},end:{line:157,column:29}},69:{start:{line:160,column:4},end:{line:179,column:5}},70:{start:{line:161,column:6},end:{line:161,column:29}},71:{start:{line:162,column:6},end:{line:164,column:7}},72:{start:{line:163,column:8},end:{line:163,column:36}},73:{start:{line:165,column:26},end:{line:165,column:94}},74:{start:{line:166,column:33},end:{line:168,column:24}},75:{start:{line:169,column:6},end:{line:174,column:7}},76:{start:{line:170,column:8},end:{line:173,column:9}},77:{start:{line:171,column:10},end:{line:171,column:18}},78:{start:{line:172,column:10},end:{line:172,column:32}},79:{start:{line:175,column:6},end:{line:178,column:7}},80:{start:{line:176,column:8},end:{line:176,column:16}},81:{start:{line:177,column:8},end:{line:177,column:27}},82:{start:{line:181,column:22},end:{line:181,column:81}},83:{start:{line:182,column:16},end:{line:184,column:32}},84:{start:{line:185,column:14},end:{line:187,column:15}},85:{start:{line:188,column:2},end:{line:191,column:4}},86:{start:{line:193,column:30},end:{line:238,column:1}},87:{start:{line:197,column:6},end:{line:197,column:11}},88:{start:{line:198,column:17},end:{line:198,column:67}},89:{start:{line:199,column:17},end:{line:199,column:19}},90:{start:{line:200,column:16},end:{line:200,column:20}},91:{start:{line:201,column:16},end:{line:201,column:17}},92:{start:{line:202,column:19},end:{line:202,column:26}},93:{start:{line:203,column:2},end:{line:233,column:20}},94:{start:{line:204,column:4},end:{line:204,column:20}},95:{start:{line:205,column:20},end:{line:205,column:59}},96:{start:{line:206,column:4},end:{line:224,column:5}},97:{start:{line:206,column:17},end:{line:206,column:28}},98:{start:{line:207,column:18},end:{line:207,column:69}},99:{start:{line:207,column:45},end:{line:207,column:68}},100:{start:{line:208,column:6},end:{line:215,column:7}},101:{start:{line:209,column:8},end:{line:211,column:9}},102:{start:{line:210,column:10},end:{line:210,column:47}},103:{start:{line:212,column:8},end:{line:214,column:9}},104:{start:{line:213,column:10},end:{line:213,column:43}},105:{start:{line:216,column:6},end:{line:223,column:7}},106:{start:{line:217,column:8},end:{line:222,column:11}},107:{start:{line:218,column:10},end:{line:221,column:11}},108:{start:{line:219,column:12},end:{line:219,column:33}},109:{start:{line:220,column:12},end:{line:220,column:24}},110:{start:{line:225,column:4},end:{line:227,column:5}},111:{start:{line:226,column:6},end:{line:226,column:21}},112:{start:{line:228,column:4},end:{line:228,column:34}},113:{start:{line:229,column:4},end:{line:229,column:18}},114:{start:{line:230,column:4},end:{line:230,column:31}},115:{start:{line:231,column:4},end:{line:231,column:18}},116:{start:{line:232,column:4},end:{line:232,column:34}},117:{start:{line:234,column:2},end:{line:237,column:4}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:12,column:34},end:{line:12,column:35}},loc:{start:{line:12,column:59},end:{line:12,column:107}},line:12},1:{name:"(anonymous_1)",decl:{start:{line:19,column:29},end:{line:19,column:30}},loc:{start:{line:19,column:57},end:{line:79,column:1}},line:19},2:{name:"(anonymous_2)",decl:{start:{line:42,column:26},end:{line:42,column:27}},loc:{start:{line:42,column:35},end:{line:48,column:3}},line:42},3:{name:"(anonymous_3)",decl:{start:{line:48,column:13},end:{line:48,column:14}},loc:{start:{line:54,column:8},end:{line:74,column:3}},line:54},4:{name:"(anonymous_4)",decl:{start:{line:86,column:27},end:{line:86,column:28}},loc:{start:{line:86,column:45},end:{line:104,column:1}},line:86},5:{name:"(anonymous_5)",decl:{start:{line:90,column:22},end:{line:90,column:23}},loc:{start:{line:95,column:8},end:{line:103,column:3}},line:95},6:{name:"(anonymous_6)",decl:{start:{line:105,column:26},end:{line:105,column:27}},loc:{start:{line:105,column:44},end:{line:117,column:1}},line:105},7:{name:"(anonymous_7)",decl:{start:{line:109,column:22},end:{line:109,column:23}},loc:{start:{line:111,column:8},end:{line:116,column:3}},line:111},8:{name:"(anonymous_8)",decl:{start:{line:118,column:21},end:{line:118,column:22}},loc:{start:{line:118,column:58},end:{line:120,column:1}},line:118},9:{name:"(anonymous_9)",decl:{start:{line:121,column:30},end:{line:121,column:31}},loc:{start:{line:121,column:83},end:{line:192,column:1}},line:121},10:{name:"(anonymous_10)",decl:{start:{line:193,column:30},end:{line:193,column:31}},loc:{start:{line:193,column:75},end:{line:238,column:1}},line:193},11:{name:"(anonymous_11)",decl:{start:{line:207,column:37},end:{line:207,column:38}},loc:{start:{line:207,column:45},end:{line:207,column:68}},line:207},12:{name:"(anonymous_12)",decl:{start:{line:217,column:29},end:{line:217,column:30}},loc:{start:{line:217,column:38},end:{line:222,column:9}},line:217}},branchMap:{0:{loc:{start:{line:20,column:13},end:{line:20,column:33}},type:"binary-expr",locations:[{start:{line:20,column:13},end:{line:20,column:21}},{start:{line:20,column:25},end:{line:20,column:33}}],line:20},1:{loc:{start:{line:21,column:2},end:{line:30,column:3}},type:"if",locations:[{start:{line:21,column:2},end:{line:30,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:21},2:{loc:{start:{line:21,column:6},end:{line:21,column:42}},type:"binary-expr",locations:[{start:{line:21,column:6},end:{line:21,column:12}},{start:{line:21,column:16},end:{line:21,column:28}},{start:{line:21,column:32},end:{line:21,column:42}}],line:21},3:{loc:{start:{line:31,column:2},end:{line:40,column:3}},type:"if",locations:[{start:{line:31,column:2},end:{line:40,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:31},4:{loc:{start:{line:31,column:6},end:{line:31,column:29}},type:"binary-expr",locations:[{start:{line:31,column:6},end:{line:31,column:12}},{start:{line:31,column:16},end:{line:31,column:29}}],line:31},5:{loc:{start:{line:55,column:4},end:{line:63,column:5}},type:"if",locations:[{start:{line:55,column:4},end:{line:63,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:55},6:{loc:{start:{line:64,column:4},end:{line:72,column:5}},type:"if",locations:[{start:{line:64,column:4},end:{line:72,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:64},7:{loc:{start:{line:64,column:8},end:{line:64,column:54}},type:"binary-expr",locations:[{start:{line:64,column:8},end:{line:64,column:31}},{start:{line:64,column:35},end:{line:64,column:54}}],line:64},8:{loc:{start:{line:87,column:2},end:{line:89,column:3}},type:"if",locations:[{start:{line:87,column:2},end:{line:89,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:87},9:{loc:{start:{line:87,column:6},end:{line:87,column:69}},type:"binary-expr",locations:[{start:{line:87,column:6},end:{line:87,column:12}},{start:{line:87,column:16},end:{line:87,column:28}},{start:{line:87,column:32},end:{line:87,column:42}},{start:{line:87,column:46},end:{line:87,column:52}},{start:{line:87,column:56},end:{line:87,column:69}}],line:87},10:{loc:{start:{line:96,column:4},end:{line:98,column:5}},type:"if",locations:[{start:{line:96,column:4},end:{line:98,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:96},11:{loc:{start:{line:99,column:4},end:{line:101,column:5}},type:"if",locations:[{start:{line:99,column:4},end:{line:101,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:99},12:{loc:{start:{line:99,column:8},end:{line:99,column:54}},type:"binary-expr",locations:[{start:{line:99,column:8},end:{line:99,column:29}},{start:{line:99,column:33},end:{line:99,column:54}}],line:99},13:{loc:{start:{line:106,column:2},end:{line:108,column:3}},type:"if",locations:[{start:{line:106,column:2},end:{line:108,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:106},14:{loc:{start:{line:106,column:6},end:{line:106,column:69}},type:"binary-expr",locations:[{start:{line:106,column:6},end:{line:106,column:12}},{start:{line:106,column:16},end:{line:106,column:28}},{start:{line:106,column:32},end:{line:106,column:42}},{start:{line:106,column:46},end:{line:106,column:52}},{start:{line:106,column:56},end:{line:106,column:69}}],line:106},15:{loc:{start:{line:112,column:4},end:{line:114,column:5}},type:"if",locations:[{start:{line:112,column:4},end:{line:114,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:112},16:{loc:{start:{line:122,column:22},end:{line:122,column:96}},type:"cond-expr",locations:[{start:{line:122,column:51},end:{line:122,column:91}},{start:{line:122,column:94},end:{line:122,column:96}}],line:122},17:{loc:{start:{line:122,column:51},end:{line:122,column:91}},type:"cond-expr",locations:[{start:{line:122,column:82},end:{line:122,column:85}},{start:{line:122,column:88},end:{line:122,column:91}}],line:122},18:{loc:{start:{line:143,column:2},end:{line:180,column:3}},type:"if",locations:[{start:{line:143,column:2},end:{line:180,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:143},19:{loc:{start:{line:143,column:6},end:{line:143,column:61}},type:"binary-expr",locations:[{start:{line:143,column:6},end:{line:143,column:31}},{start:{line:143,column:35},end:{line:143,column:61}}],line:143},20:{loc:{start:{line:144,column:4},end:{line:150,column:5}},type:"if",locations:[{start:{line:144,column:4},end:{line:150,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:144},21:{loc:{start:{line:146,column:6},end:{line:149,column:7}},type:"if",locations:[{start:{line:146,column:6},end:{line:149,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:146},22:{loc:{start:{line:146,column:10},end:{line:146,column:98}},type:"binary-expr",locations:[{start:{line:146,column:10},end:{line:146,column:54}},{start:{line:146,column:58},end:{line:146,column:98}}],line:146},23:{loc:{start:{line:151,column:4},end:{line:159,column:5}},type:"if",locations:[{start:{line:151,column:4},end:{line:159,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:151},24:{loc:{start:{line:151,column:8},end:{line:151,column:96}},type:"binary-expr",locations:[{start:{line:151,column:8},end:{line:151,column:52}},{start:{line:151,column:56},end:{line:151,column:96}}],line:151},25:{loc:{start:{line:156,column:6},end:{line:158,column:7}},type:"if",locations:[{start:{line:156,column:6},end:{line:158,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:156},26:{loc:{start:{line:160,column:4},end:{line:179,column:5}},type:"if",locations:[{start:{line:160,column:4},end:{line:179,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:160},27:{loc:{start:{line:162,column:6},end:{line:164,column:7}},type:"if",locations:[{start:{line:162,column:6},end:{line:164,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:162},28:{loc:{start:{line:169,column:6},end:{line:174,column:7}},type:"if",locations:[{start:{line:169,column:6},end:{line:174,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:169},29:{loc:{start:{line:170,column:8},end:{line:173,column:9}},type:"if",locations:[{start:{line:170,column:8},end:{line:173,column:9}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:170},30:{loc:{start:{line:175,column:6},end:{line:178,column:7}},type:"if",locations:[{start:{line:175,column:6},end:{line:178,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:175},31:{loc:{start:{line:175,column:10},end:{line:175,column:154}},type:"binary-expr",locations:[{start:{line:175,column:10},end:{line:175,column:90}},{start:{line:175,column:94},end:{line:175,column:154}}],line:175},32:{loc:{start:{line:198,column:17},end:{line:198,column:67}},type:"cond-expr",locations:[{start:{line:198,column:41},end:{line:198,column:62}},{start:{line:198,column:65},end:{line:198,column:67}}],line:198},33:{loc:{start:{line:205,column:20},end:{line:205,column:59}},type:"cond-expr",locations:[{start:{line:205,column:36},end:{line:205,column:55}},{start:{line:205,column:58},end:{line:205,column:59}}],line:205},34:{loc:{start:{line:208,column:6},end:{line:215,column:7}},type:"if",locations:[{start:{line:208,column:6},end:{line:215,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:208},35:{loc:{start:{line:209,column:8},end:{line:211,column:9}},type:"if",locations:[{start:{line:209,column:8},end:{line:211,column:9}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:209},36:{loc:{start:{line:212,column:8},end:{line:214,column:9}},type:"if",locations:[{start:{line:212,column:8},end:{line:214,column:9}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:212},37:{loc:{start:{line:216,column:6},end:{line:223,column:7}},type:"if",locations:[{start:{line:216,column:6},end:{line:223,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:216},38:{loc:{start:{line:218,column:10},end:{line:221,column:11}},type:"if",locations:[{start:{line:218,column:10},end:{line:221,column:11}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:218},39:{loc:{start:{line:218,column:14},end:{line:218,column:68}},type:"binary-expr",locations:[{start:{line:218,column:14},end:{line:218,column:39}},{start:{line:218,column:43},end:{line:218,column:68}}],line:218},40:{loc:{start:{line:225,column:4},end:{line:227,column:5}},type:"if",locations:[{start:{line:225,column:4},end:{line:227,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:225}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0,81:0,82:0,83:0,84:0,85:0,86:0,87:0,88:0,89:0,90:0,91:0,92:0,93:0,94:0,95:0,96:0,97:0,98:0,99:0,100:0,101:0,102:0,103:0,104:0,105:0,106:0,107:0,108:0,109:0,110:0,111:0,112:0,113:0,114:0,115:0,116:0,117:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0},b:{0:[0,0],1:[0,0],2:[0,0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0,0,0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0,0,0,0],15:[0,0],16:[0,0],17:[0,0],18:[0,0],19:[0,0],20:[0,0],21:[0,0],22:[0,0],23:[0,0],24:[0,0],25:[0,0],26:[0,0],27:[0,0],28:[0,0],29:[0,0],30:[0,0],31:[0,0],32:[0,0],33:[0,0],34:[0,0],35:[0,0],36:[0,0],37:[0,0],38:[0,0],39:[0,0],40:[0,0]},inputSourceMap:{version:3,names:["DateTime","Duration","getValidTime","TASK_OFFSET_Y","TASK_BORDER_RADIUS","TASK_HEIGHT_OFFSET","getTaskYCoordinate","rowIndex","rowHeight","validateTasks","tasks","range","timezone","tz","start","end","items","errors","entity","level","message","length","map","task","time","filter","id","taskId","taskStart","taskEnd","push","refId","filterTasks","lineFilter","relatedTasks","kLine","fromPxToTime","sizePx","resolution","columnWidth","sizeInUnits","onEndTimeRange","taskDimesion","interval","columnInHrs","unit","hrs","hrsInPx","timeOffset","x","startTaskMillis","plus","toMillis","startDate","fromMillis","startOfBeforeDay","startOf","startOfBeforeDayTz","toISO","slice","startOfNextDay","intervalStartTZ","taskStartTZ","diffTZ","startOfDay","nextDay","day","diffTZInDay","gap","hrsSpecialCase","timeOffsett","startTaskDayBefore","timeOffsetB","fromObject","width","connectedTasks","taskData","allValidTasks","addTime","allKLine","newKLine","noKLine","iOffset","maxAddTime","pushCount","i","val","find","item","value","includes","unshift"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/tasks/utils/tasks.ts"],sourcesContent:['import { DateTime, Duration, Interval } from "luxon";\n\nimport { KonvaTimelineError, Operation } from "../../utils/operations";\nimport { getValidTime, InternalTimeRange, TimeRange } from "../../utils/time";\nimport { ResolutionData } from "../../utils/time-resolution";\n\nexport interface TaskData<T extends TimeRange = TimeRange> {\n  /**\n   * Unique identifier of the task\n   */\n  id: string;\n  /**\n   * Label of the task\n   */\n  label: string;\n  /**\n   * Id of assigned resource\n   */\n  resourceId: string;\n  /**\n   * Completed Percentage\n   */\n  completedPercentage?: number;\n  /**\n   * Task time range\n   */\n  time: T;\n  /**\n   * Id of connected Tasks\n   */\n  relatedTasks?: string[];\n  /**\n   * Color of the single task\n   */\n  taskColor?: string;\n}\n\ntype FilteredTasks = Operation<TaskData<InternalTimeRange>>;\n\nexport type TaskDimensions = {\n  row: number;\n  width: number;\n  x: number;\n  y: number;\n};\n\nexport type AreaSelect = {\n  resourceId: string;\n  range: TimeRange;\n};\n\nexport const TASK_OFFSET_Y = 0.15;\n\nexport const TASK_BORDER_RADIUS = 4;\nexport const TASK_HEIGHT_OFFSET = 0.7;\n\n/**\n * Gets task Y coordinate\n * @param rowIndex the row index\n * @param rowHeight the row height\n */\nexport const getTaskYCoordinate = (rowIndex: number, rowHeight: number) =>\n  rowHeight * rowIndex + rowHeight * TASK_OFFSET_Y;\n\n/**\n * Filters valid tasks to be shown in the chart\n * @param tasks list of tasks as passed to the component\n * @param intervals intervals as passed to the component\n */\nexport const validateTasks = (\n  tasks: TaskData[],\n  range: InternalTimeRange | null,\n  timezone: string | undefined\n): FilteredTasks => {\n  const tz = timezone || "system";\n  if (!range || !range.start || !range.end) {\n    return { items: [], errors: [{ entity: "timeline", level: "warn", message: "Invalid range" }] };\n  }\n\n  if (!tasks || !tasks.length) {\n    return { items: [], errors: [{ entity: "timeline", level: "warn", message: "No data" }] };\n  }\n\n  const errors: KonvaTimelineError[] = [];\n  const items = tasks\n    .map(\n      (task): TaskData<InternalTimeRange> => ({\n        ...task,\n        time: {\n          start: getValidTime(task.time.start, tz),\n          end: getValidTime(task.time.end, tz),\n        },\n      })\n    )\n    .filter(({ id: taskId, time: { start: taskStart, end: taskEnd } }) => {\n      if (taskStart >= taskEnd) {\n        errors.push({ entity: "task", level: "error", message: "Invalid time", refId: taskId });\n        return false;\n      }\n\n      if (taskStart < range.start || taskEnd > range.end) {\n        errors.push({ entity: "task", level: "warn", message: "Outside range", refId: taskId });\n        return false;\n      }\n\n      return true;\n    });\n\n  return { items, errors };\n};\n\n/**\n * Filters valid tasks to be shown in the chart\n * @param tasks list of tasks as passed to the component\n * @param intervals intervals as passed to the component\n */\nexport const filterTasks = (\n  tasks: TaskData<InternalTimeRange>[],\n  range: InternalTimeRange | null\n): TaskData<InternalTimeRange>[] => {\n  if (!range || !range.start || !range.end || !tasks || !tasks.length) {\n    return [];\n  }\n\n  return tasks.filter(({ time: { start: taskStart, end: taskEnd } }) => {\n    if (taskStart >= taskEnd) {\n      return false;\n    }\n\n    if (taskEnd < range.start || taskStart > range.end) {\n      return false;\n    }\n\n    return true;\n  });\n};\n\nexport const lineFilter = (\n  tasks: TaskData<InternalTimeRange>[],\n  range: InternalTimeRange | null\n): TaskData<InternalTimeRange>[] => {\n  if (!range || !range.start || !range.end || !tasks || !tasks.length) {\n    return [];\n  }\n\n  return tasks.filter(({ relatedTasks: kLine }) => {\n    if (kLine) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nconst fromPxToTime = (sizePx: number, resolution: ResolutionData, columnWidth: number): number => {\n  return (sizePx * resolution.sizeInUnits) / columnWidth;\n};\n\nexport const onEndTimeRange = (\n  taskDimesion: TaskDimensions,\n  resolution: ResolutionData,\n  columnWidth: number,\n  interval: Interval\n): TimeRange => {\n  const columnInHrs = resolution.unit === "week" ? (resolution.sizeInUnits === 1 ? 168 : 336) : 24;\n  const hrs = 3600000;\n  const hrsInPx = columnWidth / columnInHrs;\n\n  const timeOffset = fromPxToTime(taskDimesion.x, resolution, columnWidth);\n  const startTaskMillis = interval.start!.plus({ [resolution.unit]: timeOffset }).toMillis();\n  const startDate = DateTime.fromMillis(startTaskMillis);\n\n  const startOfBeforeDay = DateTime.fromMillis(startTaskMillis - 3600000).startOf("day");\n  const startOfBeforeDayTz = startOfBeforeDay.toISO()!.slice(-5, -3);\n\n  const startOfNextDay = DateTime.fromMillis(startTaskMillis + 3600000)\n    .startOf("day")\n    .toISO()!\n    .slice(-5, -3);\n\n  const intervalStartTZ = interval.start?.toISO().slice(-5, -3); //Interval start TZ\n  const taskStartTZ = DateTime.fromMillis(startTaskMillis).startOf("day").toISO()?.slice(-5, -3); //Task start TZ\n  const diffTZ = +intervalStartTZ! - +taskStartTZ!;\n\n  const startOfDay = startDate.startOf("day").toISO()?.slice(-5, -3); //Day start TZ\n  const nextDay = startDate.startOf("day").plus({ day: 1 }).toISO()?.slice(-5, -3); //Next Day TZ\n  const diffTZInDay = +nextDay! - +startOfDay!;\n\n  let gap = 0;\n  let hrsSpecialCase = 0;\n\n  if (resolution.unit === "day" || resolution.unit === "week") {\n    if (diffTZ === 1) {\n      gap = hrsInPx * diffTZ;\n\n      if (+startOfBeforeDayTz - +intervalStartTZ! === 0 && +startOfNextDay - +intervalStartTZ! !== 0) {\n        gap = 0;\n        hrsSpecialCase = hrs;\n      }\n    }\n\n    if (+startOfBeforeDayTz - +intervalStartTZ! !== 0 && +startOfNextDay - +intervalStartTZ! === 0) {\n      const timeOffsett = fromPxToTime(taskDimesion.x - hrsInPx * 23, resolution, columnWidth);\n      const startTaskDayBefore = interval\n        .start!.plus({ [resolution.unit]: timeOffsett })\n        .startOf("hour")\n        .toMillis();\n      if (startOfBeforeDay.toMillis() === startTaskDayBefore) {\n        hrsSpecialCase = hrs;\n      }\n    }\n    if (diffTZ === -1) {\n      gap = hrsInPx * diffTZ;\n\n      if (diffTZInDay === -1) {\n        gap = hrsInPx * diffTZInDay;\n      }\n      const timeOffsett = fromPxToTime(taskDimesion.x - hrsInPx * 23, resolution, columnWidth);\n      const startTaskDayBefore = interval.start!.plus({ [resolution.unit]: timeOffsett }).startOf("hour");\n      if (startOfBeforeDay.toMillis() === startTaskDayBefore.toMillis()) {\n        if (diffTZInDay !== 0) {\n          gap = 0;\n          hrsSpecialCase = -hrs;\n        }\n      }\n      if (\n        startTaskDayBefore.toMillis() + hrs * 23 === startDate.startOf("day").toMillis() &&\n        startTaskDayBefore.toISO().slice(-5, -3) === intervalStartTZ\n      ) {\n        gap = 0;\n        hrsSpecialCase = 0;\n      }\n    }\n  }\n  const timeOffsetB = fromPxToTime(taskDimesion.x - gap, resolution, columnWidth);\n\n  const start = interval.start!.plus({ [resolution.unit]: timeOffsetB }).toMillis() - hrsSpecialCase;\n  const end =\n    start +\n    Duration.fromObject({\n      [resolution.unit]: fromPxToTime(taskDimesion.width, resolution, columnWidth),\n    }).toMillis();\n  return { start, end };\n};\n\nexport const connectedTasks = (\n  taskData: TaskData,\n  allValidTasks: TaskData[],\n  addTime: number,\n  range: InternalTimeRange\n) => {\n  const { start, end } = range;\n  let allKLine = taskData.relatedTasks ? taskData.relatedTasks : [];\n  let newKLine: string[] = [];\n  let noKLine = true;\n  let iOffset = 0;\n  let maxAddTime = addTime;\n  do {\n    noKLine = false;\n    let pushCount = iOffset === 0 ? allKLine.length - 1 : 0;\n    for (let i = 0 + iOffset; i < allKLine.length; i++) {\n      const val = allValidTasks.find((item) => item.id === allKLine[i]);\n      if (val) {\n        if (+val.time.start + addTime < start) {\n          maxAddTime = start - +val.time.start;\n        }\n        if (+val.time.end + addTime > end) {\n          maxAddTime = end - +val.time.end;\n        }\n      }\n      if (val?.relatedTasks) {\n        val.relatedTasks.map((value) => {\n          if (!allKLine.includes(value) && !newKLine.includes(value)) {\n            newKLine.push(value);\n            pushCount++;\n          }\n        });\n      }\n    }\n    if (newKLine[0]) {\n      noKLine = true;\n    }\n    newKLine.unshift(...allKLine);\n    allKLine = [];\n    allKLine.push(...newKLine);\n    newKLine = [];\n    iOffset = iOffset + pushCount;\n  } while (noKLine);\n  return { allKLine, maxAddTime };\n};\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8b17b52699b1ec8dff7ec2d63a1e84ead9f7b297"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"8b17b52699b1ec8dff7ec2d63a1e84ead9f7b297"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_iow4v29cs=function(){return actualCoverage},actualCoverage}cov_iow4v29cs();const TASK_OFFSET_Y=(cov_iow4v29cs().s[0]++,.15),TASK_BORDER_RADIUS=(cov_iow4v29cs().s[1]++,4),TASK_HEIGHT_OFFSET=(cov_iow4v29cs().s[2]++,.7);cov_iow4v29cs().s[3]++;const getTaskYCoordinate=(rowIndex,rowHeight)=>(cov_iow4v29cs().f[0]++,cov_iow4v29cs().s[4]++,rowHeight*rowIndex+rowHeight*TASK_OFFSET_Y);cov_iow4v29cs().s[5]++;const validateTasks=(tasks,range,timezone)=>{cov_iow4v29cs().f[1]++;const tz=(cov_iow4v29cs().s[6]++,cov_iow4v29cs().b[0][0]++,timezone||(cov_iow4v29cs().b[0][1]++,"system"));if(cov_iow4v29cs().s[7]++,cov_iow4v29cs().b[2][0]++,!(range&&(cov_iow4v29cs().b[2][1]++,range.start)&&(cov_iow4v29cs().b[2][2]++,range.end)))return cov_iow4v29cs().b[1][0]++,cov_iow4v29cs().s[8]++,{items:[],errors:[{entity:"timeline",level:"warn",message:"Invalid range"}]};if(cov_iow4v29cs().b[1][1]++,cov_iow4v29cs().s[9]++,cov_iow4v29cs().b[4][0]++,!tasks||(cov_iow4v29cs().b[4][1]++,!tasks.length))return cov_iow4v29cs().b[3][0]++,cov_iow4v29cs().s[10]++,{items:[],errors:[{entity:"timeline",level:"warn",message:"No data"}]};cov_iow4v29cs().b[3][1]++;const errors=(cov_iow4v29cs().s[11]++,[]),items=(cov_iow4v29cs().s[12]++,tasks.map((task=>(cov_iow4v29cs().f[2]++,cov_iow4v29cs().s[13]++,{...task,time:{start:(0,_utils_time__WEBPACK_IMPORTED_MODULE_1__.e$)(task.time.start,tz),end:(0,_utils_time__WEBPACK_IMPORTED_MODULE_1__.e$)(task.time.end,tz)}}))).filter((({id:taskId,time:{start:taskStart,end:taskEnd}})=>(cov_iow4v29cs().f[3]++,cov_iow4v29cs().s[14]++,taskStart>=taskEnd?(cov_iow4v29cs().b[5][0]++,cov_iow4v29cs().s[15]++,errors.push({entity:"task",level:"error",message:"Invalid time",refId:taskId}),cov_iow4v29cs().s[16]++,!1):(cov_iow4v29cs().b[5][1]++,cov_iow4v29cs().s[17]++,cov_iow4v29cs().b[7][0]++,taskStart<range.start||(cov_iow4v29cs().b[7][1]++,taskEnd>range.end)?(cov_iow4v29cs().b[6][0]++,cov_iow4v29cs().s[18]++,errors.push({entity:"task",level:"warn",message:"Outside range",refId:taskId}),cov_iow4v29cs().s[19]++,!1):(cov_iow4v29cs().b[6][1]++,cov_iow4v29cs().s[20]++,!0))))));return cov_iow4v29cs().s[21]++,{items:items,errors:errors}};cov_iow4v29cs().s[22]++;const filterTasks=(tasks,range)=>(cov_iow4v29cs().f[4]++,cov_iow4v29cs().s[23]++,cov_iow4v29cs().b[9][0]++,range&&(cov_iow4v29cs().b[9][1]++,range.start)&&(cov_iow4v29cs().b[9][2]++,range.end)&&(cov_iow4v29cs().b[9][3]++,tasks)&&(cov_iow4v29cs().b[9][4]++,tasks.length)?(cov_iow4v29cs().b[8][1]++,cov_iow4v29cs().s[25]++,tasks.filter((({time:{start:taskStart,end:taskEnd}})=>(cov_iow4v29cs().f[5]++,cov_iow4v29cs().s[26]++,taskStart>=taskEnd?(cov_iow4v29cs().b[10][0]++,cov_iow4v29cs().s[27]++,!1):(cov_iow4v29cs().b[10][1]++,cov_iow4v29cs().s[28]++,cov_iow4v29cs().b[12][0]++,taskEnd<range.start||(cov_iow4v29cs().b[12][1]++,taskStart>range.end)?(cov_iow4v29cs().b[11][0]++,cov_iow4v29cs().s[29]++,!1):(cov_iow4v29cs().b[11][1]++,cov_iow4v29cs().s[30]++,!0)))))):(cov_iow4v29cs().b[8][0]++,cov_iow4v29cs().s[24]++,[]));cov_iow4v29cs().s[31]++;cov_iow4v29cs().s[38]++;const fromPxToTime=(sizePx,resolution,columnWidth)=>(cov_iow4v29cs().f[8]++,cov_iow4v29cs().s[39]++,sizePx*resolution.sizeInUnits/columnWidth);cov_iow4v29cs().s[40]++;const onEndTimeRange=(taskDimesion,resolution,columnWidth,interval)=>{cov_iow4v29cs().f[9]++;const columnInHrs=(cov_iow4v29cs().s[41]++,"week"===resolution.unit?(cov_iow4v29cs().b[16][0]++,1===resolution.sizeInUnits?(cov_iow4v29cs().b[17][0]++,168):(cov_iow4v29cs().b[17][1]++,336)):(cov_iow4v29cs().b[16][1]++,24)),hrs=(cov_iow4v29cs().s[42]++,36e5),hrsInPx=(cov_iow4v29cs().s[43]++,columnWidth/columnInHrs),timeOffset=(cov_iow4v29cs().s[44]++,fromPxToTime(taskDimesion.x,resolution,columnWidth)),startTaskMillis=(cov_iow4v29cs().s[45]++,interval.start.plus({[resolution.unit]:timeOffset}).toMillis()),startDate=(cov_iow4v29cs().s[46]++,luxon__WEBPACK_IMPORTED_MODULE_0__.c9.fromMillis(startTaskMillis)),startOfBeforeDay=(cov_iow4v29cs().s[47]++,luxon__WEBPACK_IMPORTED_MODULE_0__.c9.fromMillis(startTaskMillis-36e5).startOf("day")),startOfBeforeDayTz=(cov_iow4v29cs().s[48]++,startOfBeforeDay.toISO().slice(-5,-3)),startOfNextDay=(cov_iow4v29cs().s[49]++,luxon__WEBPACK_IMPORTED_MODULE_0__.c9.fromMillis(startTaskMillis+36e5).startOf("day").toISO().slice(-5,-3)),intervalStartTZ=(cov_iow4v29cs().s[50]++,interval.start?.toISO().slice(-5,-3)),taskStartTZ=(cov_iow4v29cs().s[51]++,luxon__WEBPACK_IMPORTED_MODULE_0__.c9.fromMillis(startTaskMillis).startOf("day").toISO()?.slice(-5,-3)),diffTZ=(cov_iow4v29cs().s[52]++,+intervalStartTZ-+taskStartTZ),startOfDay=(cov_iow4v29cs().s[53]++,startDate.startOf("day").toISO()?.slice(-5,-3)),nextDay=(cov_iow4v29cs().s[54]++,startDate.startOf("day").plus({day:1}).toISO()?.slice(-5,-3)),diffTZInDay=(cov_iow4v29cs().s[55]++,+nextDay-+startOfDay);let gap=(cov_iow4v29cs().s[56]++,0),hrsSpecialCase=(cov_iow4v29cs().s[57]++,0);if(cov_iow4v29cs().s[58]++,cov_iow4v29cs().b[19][0]++,"day"===resolution.unit||(cov_iow4v29cs().b[19][1]++,"week"===resolution.unit)){if(cov_iow4v29cs().b[18][0]++,cov_iow4v29cs().s[59]++,1===diffTZ?(cov_iow4v29cs().b[20][0]++,cov_iow4v29cs().s[60]++,gap=hrsInPx*diffTZ,cov_iow4v29cs().s[61]++,cov_iow4v29cs().b[22][0]++,+startOfBeforeDayTz-+intervalStartTZ==0&&(cov_iow4v29cs().b[22][1]++,+startOfNextDay-+intervalStartTZ!=0)?(cov_iow4v29cs().b[21][0]++,cov_iow4v29cs().s[62]++,gap=0,cov_iow4v29cs().s[63]++,hrsSpecialCase=hrs):cov_iow4v29cs().b[21][1]++):cov_iow4v29cs().b[20][1]++,cov_iow4v29cs().s[64]++,cov_iow4v29cs().b[24][0]++,+startOfBeforeDayTz-+intervalStartTZ!=0&&(cov_iow4v29cs().b[24][1]++,+startOfNextDay-+intervalStartTZ==0)){cov_iow4v29cs().b[23][0]++;const timeOffsett=(cov_iow4v29cs().s[65]++,fromPxToTime(taskDimesion.x-23*hrsInPx,resolution,columnWidth)),startTaskDayBefore=(cov_iow4v29cs().s[66]++,interval.start.plus({[resolution.unit]:timeOffsett}).startOf("hour").toMillis());cov_iow4v29cs().s[67]++,startOfBeforeDay.toMillis()===startTaskDayBefore?(cov_iow4v29cs().b[25][0]++,cov_iow4v29cs().s[68]++,hrsSpecialCase=hrs):cov_iow4v29cs().b[25][1]++}else cov_iow4v29cs().b[23][1]++;if(cov_iow4v29cs().s[69]++,-1===diffTZ){cov_iow4v29cs().b[26][0]++,cov_iow4v29cs().s[70]++,gap=hrsInPx*diffTZ,cov_iow4v29cs().s[71]++,-1===diffTZInDay?(cov_iow4v29cs().b[27][0]++,cov_iow4v29cs().s[72]++,gap=hrsInPx*diffTZInDay):cov_iow4v29cs().b[27][1]++;const timeOffsett=(cov_iow4v29cs().s[73]++,fromPxToTime(taskDimesion.x-23*hrsInPx,resolution,columnWidth)),startTaskDayBefore=(cov_iow4v29cs().s[74]++,interval.start.plus({[resolution.unit]:timeOffsett}).startOf("hour"));cov_iow4v29cs().s[75]++,startOfBeforeDay.toMillis()===startTaskDayBefore.toMillis()?(cov_iow4v29cs().b[28][0]++,cov_iow4v29cs().s[76]++,0!==diffTZInDay?(cov_iow4v29cs().b[29][0]++,cov_iow4v29cs().s[77]++,gap=0,cov_iow4v29cs().s[78]++,hrsSpecialCase=-hrs):cov_iow4v29cs().b[29][1]++):cov_iow4v29cs().b[28][1]++,cov_iow4v29cs().s[79]++,cov_iow4v29cs().b[31][0]++,startTaskDayBefore.toMillis()+23*hrs===startDate.startOf("day").toMillis()&&(cov_iow4v29cs().b[31][1]++,startTaskDayBefore.toISO().slice(-5,-3)===intervalStartTZ)?(cov_iow4v29cs().b[30][0]++,cov_iow4v29cs().s[80]++,gap=0,cov_iow4v29cs().s[81]++,hrsSpecialCase=0):cov_iow4v29cs().b[30][1]++}else cov_iow4v29cs().b[26][1]++}else cov_iow4v29cs().b[18][1]++;const timeOffsetB=(cov_iow4v29cs().s[82]++,fromPxToTime(taskDimesion.x-gap,resolution,columnWidth)),start=(cov_iow4v29cs().s[83]++,interval.start.plus({[resolution.unit]:timeOffsetB}).toMillis()-hrsSpecialCase),end=(cov_iow4v29cs().s[84]++,start+luxon__WEBPACK_IMPORTED_MODULE_0__.dw.fromObject({[resolution.unit]:fromPxToTime(taskDimesion.width,resolution,columnWidth)}).toMillis());return cov_iow4v29cs().s[85]++,{start:start,end:end}};cov_iow4v29cs().s[86]++;const connectedTasks=(taskData,allValidTasks,addTime,range)=>{cov_iow4v29cs().f[10]++;const{start:start,end:end}=(cov_iow4v29cs().s[87]++,range);let allKLine=(cov_iow4v29cs().s[88]++,taskData.relatedTasks?(cov_iow4v29cs().b[32][0]++,taskData.relatedTasks):(cov_iow4v29cs().b[32][1]++,[])),newKLine=(cov_iow4v29cs().s[89]++,[]),noKLine=(cov_iow4v29cs().s[90]++,!0),iOffset=(cov_iow4v29cs().s[91]++,0),maxAddTime=(cov_iow4v29cs().s[92]++,addTime);cov_iow4v29cs().s[93]++;do{cov_iow4v29cs().s[94]++,noKLine=!1;let pushCount=(cov_iow4v29cs().s[95]++,0===iOffset?(cov_iow4v29cs().b[33][0]++,allKLine.length-1):(cov_iow4v29cs().b[33][1]++,0));cov_iow4v29cs().s[96]++;for(let i=(cov_iow4v29cs().s[97]++,0+iOffset);i<allKLine.length;i++){const val=(cov_iow4v29cs().s[98]++,allValidTasks.find((item=>(cov_iow4v29cs().f[11]++,cov_iow4v29cs().s[99]++,item.id===allKLine[i]))));cov_iow4v29cs().s[100]++,val?(cov_iow4v29cs().b[34][0]++,cov_iow4v29cs().s[101]++,+val.time.start+addTime<start?(cov_iow4v29cs().b[35][0]++,cov_iow4v29cs().s[102]++,maxAddTime=start-+val.time.start):cov_iow4v29cs().b[35][1]++,cov_iow4v29cs().s[103]++,+val.time.end+addTime>end?(cov_iow4v29cs().b[36][0]++,cov_iow4v29cs().s[104]++,maxAddTime=end-+val.time.end):cov_iow4v29cs().b[36][1]++):cov_iow4v29cs().b[34][1]++,cov_iow4v29cs().s[105]++,val?.relatedTasks?(cov_iow4v29cs().b[37][0]++,cov_iow4v29cs().s[106]++,val.relatedTasks.map((value=>{cov_iow4v29cs().f[12]++,cov_iow4v29cs().s[107]++,cov_iow4v29cs().b[39][0]++,allKLine.includes(value)||(cov_iow4v29cs().b[39][1]++,newKLine.includes(value))?cov_iow4v29cs().b[38][1]++:(cov_iow4v29cs().b[38][0]++,cov_iow4v29cs().s[108]++,newKLine.push(value),cov_iow4v29cs().s[109]++,pushCount++)}))):cov_iow4v29cs().b[37][1]++}cov_iow4v29cs().s[110]++,newKLine[0]?(cov_iow4v29cs().b[40][0]++,cov_iow4v29cs().s[111]++,noKLine=!0):cov_iow4v29cs().b[40][1]++,cov_iow4v29cs().s[112]++,newKLine.unshift(...allKLine),cov_iow4v29cs().s[113]++,allKLine=[],cov_iow4v29cs().s[114]++,allKLine.push(...newKLine),cov_iow4v29cs().s[115]++,newKLine=[],cov_iow4v29cs().s[116]++,iOffset+=pushCount}while(noKLine);return cov_iow4v29cs().s[117]++,{allKLine:allKLine,maxAddTime:maxAddTime}}},"./src/timeline/TimelineContext.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{V:function(){return TimelineProvider},_:function(){return useTimelineContext}});var react=__webpack_require__("./node_modules/react/index.js"),luxon=__webpack_require__("./node_modules/luxon/src/luxon.js"),utils_resources=__webpack_require__("./src/resources/utils/resources.ts"),utils_tasks=__webpack_require__("./src/tasks/utils/tasks.ts"),dimensions=__webpack_require__("./src/utils/dimensions.ts"),logger=__webpack_require__("./src/utils/logger.ts"),time=__webpack_require__("./src/utils/time.ts"),time_resolution=__webpack_require__("./src/utils/time-resolution.ts");function cov_23hhp3s7ho(){var path="/home/runner/work/konva-timeline/konva-timeline/src/utils/utils.ts",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/utils/utils.ts",statementMap:{0:{start:{line:3,column:42},end:{line:14,column:1}},1:{start:{line:4,column:2},end:{line:11,column:3}},2:{start:{line:5,column:4},end:{line:5,column:37}},3:{start:{line:6,column:18},end:{line:6,column:43}},4:{start:{line:7,column:21},end:{line:7,column:25}},5:{start:{line:8,column:16},end:{line:8,column:41}},6:{start:{line:9,column:4},end:{line:9,column:64}},7:{start:{line:10,column:4},end:{line:10,column:20}},8:{start:{line:12,column:17},end:{line:12,column:21}},9:{start:{line:13,column:2},end:{line:13,column:16}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:3,column:42},end:{line:3,column:43}},loc:{start:{line:3,column:61},end:{line:14,column:1}},line:3}},branchMap:{0:{loc:{start:{line:4,column:2},end:{line:11,column:3}},type:"if",locations:[{start:{line:4,column:2},end:{line:11,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:4}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},f:{0:0},b:{0:[0,0]},inputSourceMap:{version:3,names:["DateTime","logDebug","executeWithPerfomanceCheck","tag","item","fn","window","__MELFORE_KONVA_TIMELINE_DEBUG__","start","now","toMillis","fnResult","end","result"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/utils/utils.ts"],sourcesContent:['import { DateTime } from "luxon";\n\nimport { logDebug } from "./logger";\n\nexport const executeWithPerfomanceCheck = <T>(tag: string, item: string, fn: () => T): T => {\n  if (window.__MELFORE_KONVA_TIMELINE_DEBUG__) {\n    logDebug(tag, `Running ${item}`);\n    const start = DateTime.now().toMillis();\n    const fnResult = fn();\n    const end = DateTime.now().toMillis();\n    logDebug(tag, `${item} calculation took ${end - start} ms`);\n    return fnResult;\n  }\n  const result = fn();\n  return result;\n};\n'],mappings:"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,QAAQ,QAAQ,UAAU;AAEnC,OAAO,MAAMC,0BAA0B,GAAGA,CAAIC,GAAW,EAAEC,IAAY,EAAEC,EAAW,KAAQ;EAC1F,IAAIC,MAAM,CAACC,gCAAgC,EAAE;IAC3CN,QAAQ,CAACE,GAAG,EAAE,WAAWC,IAAI,EAAE,CAAC;IAChC,MAAMI,KAAK,GAAGR,QAAQ,CAACS,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACvC,MAAMC,QAAQ,GAAGN,EAAE,CAAC,CAAC;IACrB,MAAMO,GAAG,GAAGZ,QAAQ,CAACS,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACrCT,QAAQ,CAACE,GAAG,EAAE,GAAGC,IAAI,qBAAqBQ,GAAG,GAAGJ,KAAK,KAAK,CAAC;IAC3D,OAAOG,QAAQ;EACjB;EACA,MAAME,MAAM,GAAGR,EAAE,CAAC,CAAC;EACnB,OAAOQ,MAAM;AACf,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c48eec2090d8e92184adcdded515bcd12b8ca132"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"c48eec2090d8e92184adcdded515bcd12b8ca132"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_23hhp3s7ho=function(){return actualCoverage},actualCoverage}cov_23hhp3s7ho(),cov_23hhp3s7ho().s[0]++;const executeWithPerfomanceCheck=(tag,item,fn)=>{if(cov_23hhp3s7ho().f[0]++,cov_23hhp3s7ho().s[1]++,window.__MELFORE_KONVA_TIMELINE_DEBUG__){cov_23hhp3s7ho().b[0][0]++,cov_23hhp3s7ho().s[2]++,(0,logger.MD)(tag,`Running ${item}`);const start=(cov_23hhp3s7ho().s[3]++,luxon.c9.now().toMillis()),fnResult=(cov_23hhp3s7ho().s[4]++,fn()),end=(cov_23hhp3s7ho().s[5]++,luxon.c9.now().toMillis());return cov_23hhp3s7ho().s[6]++,(0,logger.MD)(tag,`${item} calculation took ${end-start} ms`),cov_23hhp3s7ho().s[7]++,fnResult}cov_23hhp3s7ho().b[0][1]++;const result=(cov_23hhp3s7ho().s[8]++,fn());return cov_23hhp3s7ho().s[9]++,result};function cov_107e24dr7(){var path="/home/runner/work/konva-timeline/konva-timeline/src/timeline/TimelineContext.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/timeline/TimelineContext.tsx",statementMap:{0:{start:{line:11,column:37},end:{line:11,column:61}},1:{start:{line:14,column:27},end:{line:17,column:1}},2:{start:{line:18,column:32},end:{line:321,column:1}},3:{start:{line:57,column:19},end:{line:68,column:24}},4:{start:{line:58,column:4},end:{line:60,column:5}},5:{start:{line:59,column:6},end:{line:59,column:22}},6:{start:{line:61,column:22},end:{line:63,column:6}},7:{start:{line:64,column:4},end:{line:66,column:5}},8:{start:{line:65,column:6},end:{line:65,column:22}},9:{start:{line:67,column:4},end:{line:67,column:28}},10:{start:{line:69,column:36},end:{line:69,column:64}},11:{start:{line:70,column:2},end:{line:73,column:14}},12:{start:{line:71,column:4},end:{line:71,column:65}},13:{start:{line:72,column:4},end:{line:72,column:52}},14:{start:{line:74,column:16},end:{line:106,column:31}},15:{start:{line:78,column:8},end:{line:78,column:21}},16:{start:{line:79,column:20},end:{line:79,column:65}},17:{start:{line:80,column:18},end:{line:80,column:59}},18:{start:{line:81,column:18},end:{line:81,column:60}},19:{start:{line:82,column:16},end:{line:82,column:56}},20:{start:{line:83,column:4},end:{line:94,column:5}},21:{start:{line:84,column:6},end:{line:89,column:7}},22:{start:{line:85,column:8},end:{line:88,column:10}},23:{start:{line:90,column:6},end:{line:93,column:8}},24:{start:{line:95,column:4},end:{line:100,column:5}},25:{start:{line:96,column:6},end:{line:99,column:8}},26:{start:{line:101,column:16},end:{line:101,column:43}},27:{start:{line:102,column:4},end:{line:105,column:6}},28:{start:{line:107,column:21},end:{line:107,column:163}},29:{start:{line:107,column:35},end:{line:107,column:140}},30:{start:{line:107,column:102},end:{line:107,column:139}},31:{start:{line:108,column:19},end:{line:108,column:192}},32:{start:{line:108,column:33},end:{line:108,column:160}},33:{start:{line:108,column:98},end:{line:108,column:159}},34:{start:{line:109,column:30},end:{line:130,column:18}},35:{start:{line:113,column:8},end:{line:113,column:18}},36:{start:{line:114,column:28},end:{line:114,column:29}},37:{start:{line:115,column:4},end:{line:128,column:5}},38:{start:{line:117,column:8},end:{line:117,column:45}},39:{start:{line:118,column:8},end:{line:118,column:14}},40:{start:{line:120,column:8},end:{line:120,column:45}},41:{start:{line:121,column:8},end:{line:121,column:14}},42:{start:{line:123,column:8},end:{line:123,column:44}},43:{start:{line:124,column:8},end:{line:124,column:14}},44:{start:{line:126,column:8},end:{line:126,column:44}},45:{start:{line:127,column:8},end:{line:127,column:14}},46:{start:{line:129,column:4},end:{line:129,column:29}},47:{start:{line:131,column:26},end:{line:143,column:48}},48:{start:{line:132,column:18},end:{line:132,column:43}},49:{start:{line:133,column:4},end:{line:138,column:5}},50:{start:{line:134,column:6},end:{line:134,column:64}},51:{start:{line:135,column:6},end:{line:137,column:7}},52:{start:{line:136,column:8},end:{line:136,column:39}},53:{start:{line:139,column:4},end:{line:141,column:5}},54:{start:{line:140,column:6},end:{line:140,column:25}},55:{start:{line:142,column:4},end:{line:142,column:19}},56:{start:{line:144,column:21},end:{line:144,column:186}},57:{start:{line:144,column:35},end:{line:144,column:151}},58:{start:{line:144,column:105},end:{line:144,column:150}},59:{start:{line:145,column:21},end:{line:147,column:30}},60:{start:{line:145,column:35},end:{line:147,column:5}},61:{start:{line:145,column:102},end:{line:147,column:4}},62:{start:{line:148,column:26},end:{line:167,column:28}},63:{start:{line:151,column:8},end:{line:151,column:18}},64:{start:{line:152,column:19},end:{line:152,column:21}},65:{start:{line:153,column:26},end:{line:153,column:40}},66:{start:{line:154,column:24},end:{line:154,column:36}},67:{start:{line:155,column:21},end:{line:155,column:34}},68:{start:{line:156,column:4},end:{line:165,column:5}},69:{start:{line:157,column:21},end:{line:157,column:48}},70:{start:{line:158,column:6},end:{line:160,column:7}},71:{start:{line:159,column:8},end:{line:159,column:31}},72:{start:{line:161,column:6},end:{line:161,column:64}},73:{start:{line:162,column:6},end:{line:164,column:9}},74:{start:{line:166,column:4},end:{line:166,column:18}},75:{start:{line:168,column:22},end:{line:171,column:39}},76:{start:{line:169,column:4},end:{line:169,column:63}},77:{start:{line:170,column:4},end:{line:170,column:129}},78:{start:{line:172,column:27},end:{line:172,column:109}},79:{start:{line:172,column:41},end:{line:172,column:82}},80:{start:{line:173,column:28},end:{line:192,column:81}},81:{start:{line:174,column:4},end:{line:174,column:71}},82:{start:{line:175,column:18},end:{line:175,column:43}},83:{start:{line:176,column:24},end:{line:176,column:55}},84:{start:{line:177,column:4},end:{line:179,column:5}},85:{start:{line:178,column:6},end:{line:178,column:16}},86:{start:{line:180,column:21},end:{line:180,column:37}},87:{start:{line:181,column:4},end:{line:183,column:5}},88:{start:{line:182,column:6},end:{line:182,column:58}},89:{start:{line:184,column:19},end:{line:184,column:57}},90:{start:{line:185,column:4},end:{line:187,column:5}},91:{start:{line:186,column:6},end:{line:186,column:48}},92:{start:{line:188,column:17},end:{line:188,column:66}},93:{start:{line:189,column:16},end:{line:189,column:41}},94:{start:{line:190,column:4},end:{line:190,column:91}},95:{start:{line:191,column:4},end:{line:191,column:16}},96:{start:{line:193,column:23},end:{line:202,column:25}},97:{start:{line:194,column:16},end:{line:194,column:20}},98:{start:{line:195,column:4},end:{line:200,column:5}},99:{start:{line:196,column:6},end:{line:199,column:8}},100:{start:{line:201,column:4},end:{line:201,column:17}},101:{start:{line:203,column:16},end:{line:203,column:171}},102:{start:{line:203,column:30},end:{line:203,column:142}},103:{start:{line:203,column:98},end:{line:203,column:141}},104:{start:{line:210,column:24},end:{line:210,column:69}},105:{start:{line:210,column:38},end:{line:210,column:54}},106:{start:{line:211,column:20},end:{line:240,column:67}},107:{start:{line:212,column:20},end:{line:212,column:22}},108:{start:{line:213,column:26},end:{line:213,column:100}},109:{start:{line:214,column:24},end:{line:214,column:96}},110:{start:{line:215,column:4},end:{line:238,column:7}},111:{start:{line:216,column:6},end:{line:237,column:7}},112:{start:{line:217,column:8},end:{line:236,column:11}},113:{start:{line:218,column:28},end:{line:218,column:67}},114:{start:{line:218,column:52},end:{line:218,column:66}},115:{start:{line:219,column:10},end:{line:235,column:11}},116:{start:{line:220,column:12},end:{line:222,column:13}},117:{start:{line:221,column:14},end:{line:221,column:21}},118:{start:{line:223,column:12},end:{line:225,column:13}},119:{start:{line:224,column:14},end:{line:224,column:21}},120:{start:{line:226,column:12},end:{line:234,column:15}},121:{start:{line:239,column:4},end:{line:239,column:19}},122:{start:{line:241,column:25},end:{line:248,column:50}},123:{start:{line:242,column:4},end:{line:242,column:67}},124:{start:{line:243,column:18},end:{line:243,column:43}},125:{start:{line:244,column:20},end:{line:244,column:83}},126:{start:{line:245,column:16},end:{line:245,column:41}},127:{start:{line:246,column:4},end:{line:246,column:87}},128:{start:{line:247,column:4},end:{line:247,column:19}},129:{start:{line:249,column:20},end:{line:249,column:118}},130:{start:{line:249,column:34},end:{line:249,column:83}},131:{start:{line:250,column:20},end:{line:254,column:25}},132:{start:{line:251,column:4},end:{line:251,column:61}},133:{start:{line:252,column:22},end:{line:252,column:66}},134:{start:{line:253,column:4},end:{line:253,column:85}},135:{start:{line:255,column:33},end:{line:258,column:28}},136:{start:{line:256,column:4},end:{line:256,column:76}},137:{start:{line:257,column:4},end:{line:257,column:40}},138:{start:{line:259,column:16},end:{line:263,column:21}},139:{start:{line:260,column:4},end:{line:262,column:6}},140:{start:{line:264,column:23},end:{line:264,column:114}},141:{start:{line:264,column:37},end:{line:264,column:98}},142:{start:{line:265,column:2},end:{line:269,column:29}},143:{start:{line:266,column:4},end:{line:268,column:5}},144:{start:{line:267,column:6},end:{line:267,column:34}},145:{start:{line:270,column:18},end:{line:275,column:23}},146:{start:{line:271,column:4},end:{line:274,column:32}},147:{start:{line:276,column:2},end:{line:320,column:15}},148:{start:{line:322,column:34},end:{line:328,column:1}},149:{start:{line:323,column:18},end:{line:323,column:45}},150:{start:{line:324,column:2},end:{line:326,column:3}},151:{start:{line:325,column:4},end:{line:325,column:81}},152:{start:{line:327,column:2},end:{line:327,column:17}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:18,column:32},end:{line:18,column:33}},loc:{start:{line:56,column:6},end:{line:321,column:1}},line:56},1:{name:"(anonymous_1)",decl:{start:{line:57,column:27},end:{line:57,column:28}},loc:{start:{line:57,column:33},end:{line:68,column:3}},line:57},2:{name:"(anonymous_2)",decl:{start:{line:70,column:12},end:{line:70,column:13}},loc:{start:{line:70,column:18},end:{line:73,column:3}},line:70},3:{name:"(anonymous_3)",decl:{start:{line:74,column:24},end:{line:74,column:25}},loc:{start:{line:74,column:30},end:{line:106,column:3}},line:74},4:{name:"(anonymous_4)",decl:{start:{line:107,column:29},end:{line:107,column:30}},loc:{start:{line:107,column:35},end:{line:107,column:140}},line:107},5:{name:"(anonymous_5)",decl:{start:{line:107,column:96},end:{line:107,column:97}},loc:{start:{line:107,column:102},end:{line:107,column:139}},line:107},6:{name:"(anonymous_6)",decl:{start:{line:108,column:27},end:{line:108,column:28}},loc:{start:{line:108,column:33},end:{line:108,column:160}},line:108},7:{name:"(anonymous_7)",decl:{start:{line:108,column:92},end:{line:108,column:93}},loc:{start:{line:108,column:98},end:{line:108,column:159}},line:108},8:{name:"(anonymous_8)",decl:{start:{line:109,column:38},end:{line:109,column:39}},loc:{start:{line:109,column:44},end:{line:130,column:3}},line:109},9:{name:"(anonymous_9)",decl:{start:{line:131,column:34},end:{line:131,column:35}},loc:{start:{line:131,column:40},end:{line:143,column:3}},line:131},10:{name:"(anonymous_10)",decl:{start:{line:144,column:29},end:{line:144,column:30}},loc:{start:{line:144,column:35},end:{line:144,column:151}},line:144},11:{name:"(anonymous_11)",decl:{start:{line:144,column:99},end:{line:144,column:100}},loc:{start:{line:144,column:105},end:{line:144,column:150}},line:144},12:{name:"(anonymous_12)",decl:{start:{line:145,column:29},end:{line:145,column:30}},loc:{start:{line:145,column:35},end:{line:147,column:5}},line:145},13:{name:"(anonymous_13)",decl:{start:{line:145,column:96},end:{line:145,column:97}},loc:{start:{line:145,column:102},end:{line:147,column:4}},line:145},14:{name:"(anonymous_14)",decl:{start:{line:148,column:34},end:{line:148,column:35}},loc:{start:{line:148,column:40},end:{line:167,column:3}},line:148},15:{name:"(anonymous_15)",decl:{start:{line:168,column:30},end:{line:168,column:31}},loc:{start:{line:168,column:36},end:{line:171,column:3}},line:168},16:{name:"(anonymous_16)",decl:{start:{line:172,column:35},end:{line:172,column:36}},loc:{start:{line:172,column:41},end:{line:172,column:82}},line:172},17:{name:"(anonymous_17)",decl:{start:{line:173,column:36},end:{line:173,column:37}},loc:{start:{line:173,column:42},end:{line:192,column:3}},line:173},18:{name:"(anonymous_18)",decl:{start:{line:193,column:31},end:{line:193,column:32}},loc:{start:{line:193,column:37},end:{line:202,column:3}},line:193},19:{name:"(anonymous_19)",decl:{start:{line:203,column:24},end:{line:203,column:25}},loc:{start:{line:203,column:30},end:{line:203,column:142}},line:203},20:{name:"(anonymous_20)",decl:{start:{line:203,column:92},end:{line:203,column:93}},loc:{start:{line:203,column:98},end:{line:203,column:141}},line:203},21:{name:"(anonymous_21)",decl:{start:{line:210,column:32},end:{line:210,column:33}},loc:{start:{line:210,column:38},end:{line:210,column:54}},line:210},22:{name:"(anonymous_22)",decl:{start:{line:211,column:28},end:{line:211,column:29}},loc:{start:{line:211,column:34},end:{line:240,column:3}},line:211},23:{name:"(anonymous_23)",decl:{start:{line:215,column:26},end:{line:215,column:27}},loc:{start:{line:215,column:34},end:{line:238,column:5}},line:215},24:{name:"(anonymous_24)",decl:{start:{line:217,column:34},end:{line:217,column:35}},loc:{start:{line:217,column:43},end:{line:236,column:9}},line:217},25:{name:"(anonymous_25)",decl:{start:{line:218,column:47},end:{line:218,column:48}},loc:{start:{line:218,column:52},end:{line:218,column:66}},line:218},26:{name:"(anonymous_26)",decl:{start:{line:241,column:33},end:{line:241,column:34}},loc:{start:{line:241,column:39},end:{line:248,column:3}},line:241},27:{name:"(anonymous_27)",decl:{start:{line:249,column:28},end:{line:249,column:29}},loc:{start:{line:249,column:34},end:{line:249,column:83}},line:249},28:{name:"(anonymous_28)",decl:{start:{line:250,column:28},end:{line:250,column:29}},loc:{start:{line:250,column:34},end:{line:254,column:3}},line:250},29:{name:"(anonymous_29)",decl:{start:{line:255,column:41},end:{line:255,column:42}},loc:{start:{line:255,column:47},end:{line:258,column:3}},line:255},30:{name:"(anonymous_30)",decl:{start:{line:259,column:24},end:{line:259,column:25}},loc:{start:{line:259,column:30},end:{line:263,column:3}},line:259},31:{name:"(anonymous_31)",decl:{start:{line:264,column:31},end:{line:264,column:32}},loc:{start:{line:264,column:37},end:{line:264,column:98}},line:264},32:{name:"(anonymous_32)",decl:{start:{line:265,column:12},end:{line:265,column:13}},loc:{start:{line:265,column:18},end:{line:269,column:3}},line:265},33:{name:"(anonymous_33)",decl:{start:{line:270,column:26},end:{line:270,column:27}},loc:{start:{line:270,column:32},end:{line:275,column:3}},line:270},34:{name:"(anonymous_34)",decl:{start:{line:322,column:34},end:{line:322,column:35}},loc:{start:{line:322,column:40},end:{line:328,column:1}},line:322}},branchMap:{0:{loc:{start:{line:21,column:2},end:{line:21,column:15}},type:"default-arg",locations:[{start:{line:21,column:10},end:{line:21,column:15}}],line:21},1:{loc:{start:{line:22,column:2},end:{line:22,column:27}},type:"default-arg",locations:[{start:{line:22,column:22},end:{line:22,column:27}}],line:22},2:{loc:{start:{line:23,column:18},end:{line:23,column:49}},type:"default-arg",locations:[{start:{line:23,column:43},end:{line:23,column:49}}],line:23},3:{loc:{start:{line:24,column:2},end:{line:24,column:19}},type:"default-arg",locations:[{start:{line:24,column:15},end:{line:24,column:19}}],line:24},4:{loc:{start:{line:25,column:2},end:{line:25,column:21}},type:"default-arg",locations:[{start:{line:25,column:17},end:{line:25,column:21}}],line:25},5:{loc:{start:{line:27,column:2},end:{line:27,column:23}},type:"default-arg",locations:[{start:{line:27,column:18},end:{line:27,column:23}}],line:27},6:{loc:{start:{line:32,column:9},end:{line:32,column:27}},type:"default-arg",locations:[{start:{line:32,column:25},end:{line:32,column:27}}],line:32},7:{loc:{start:{line:34,column:14},end:{line:34,column:41}},type:"default-arg",locations:[{start:{line:34,column:35},end:{line:34,column:41}}],line:34},8:{loc:{start:{line:38,column:9},end:{line:38,column:32}},type:"default-arg",locations:[{start:{line:38,column:25},end:{line:38,column:32}}],line:38},9:{loc:{start:{line:39,column:2},end:{line:44,column:3}},type:"default-arg",locations:[{start:{line:39,column:14},end:{line:44,column:3}}],line:39},10:{loc:{start:{line:45,column:2},end:{line:45,column:19}},type:"default-arg",locations:[{start:{line:45,column:15},end:{line:45,column:19}}],line:45},11:{loc:{start:{line:47,column:2},end:{line:47,column:16}},type:"default-arg",locations:[{start:{line:47,column:12},end:{line:47,column:16}}],line:47},12:{loc:{start:{line:49,column:2},end:{line:49,column:26}},type:"default-arg",locations:[{start:{line:49,column:22},end:{line:49,column:26}}],line:49},13:{loc:{start:{line:58,column:4},end:{line:60,column:5}},type:"if",locations:[{start:{line:58,column:4},end:{line:60,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:58},14:{loc:{start:{line:64,column:4},end:{line:66,column:5}},type:"if",locations:[{start:{line:64,column:4},end:{line:66,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:64},15:{loc:{start:{line:71,column:41},end:{line:71,column:61}},type:"cond-expr",locations:[{start:{line:71,column:49},end:{line:71,column:53}},{start:{line:71,column:56},end:{line:71,column:61}}],line:71},16:{loc:{start:{line:83,column:4},end:{line:94,column:5}},type:"if",locations:[{start:{line:83,column:4},end:{line:94,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:83},17:{loc:{start:{line:84,column:6},end:{line:89,column:7}},type:"if",locations:[{start:{line:84,column:6},end:{line:89,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:84},18:{loc:{start:{line:95,column:4},end:{line:100,column:5}},type:"if",locations:[{start:{line:95,column:4},end:{line:100,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:95},19:{loc:{start:{line:115,column:4},end:{line:128,column:5}},type:"switch",locations:[{start:{line:116,column:6},end:{line:118,column:14}},{start:{line:119,column:6},end:{line:121,column:14}},{start:{line:122,column:6},end:{line:124,column:14}},{start:{line:125,column:6},end:{line:127,column:14}}],line:115},20:{loc:{start:{line:133,column:4},end:{line:138,column:5}},type:"if",locations:[{start:{line:133,column:4},end:{line:138,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:133},21:{loc:{start:{line:135,column:6},end:{line:137,column:7}},type:"if",locations:[{start:{line:135,column:6},end:{line:137,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:135},22:{loc:{start:{line:139,column:4},end:{line:141,column:5}},type:"if",locations:[{start:{line:139,column:4},end:{line:141,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:139},23:{loc:{start:{line:139,column:8},end:{line:139,column:52}},type:"binary-expr",locations:[{start:{line:139,column:8},end:{line:139,column:29}},{start:{line:139,column:33},end:{line:139,column:52}}],line:139},24:{loc:{start:{line:158,column:6},end:{line:160,column:7}},type:"if",locations:[{start:{line:158,column:6},end:{line:160,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:158},25:{loc:{start:{line:170,column:11},end:{line:170,column:128}},type:"cond-expr",locations:[{start:{line:170,column:85},end:{line:170,column:106}},{start:{line:170,column:109},end:{line:170,column:128}}],line:170},26:{loc:{start:{line:170,column:11},end:{line:170,column:82}},type:"binary-expr",locations:[{start:{line:170,column:11},end:{line:170,column:31}},{start:{line:170,column:35},end:{line:170,column:82}}],line:170},27:{loc:{start:{line:177,column:4},end:{line:179,column:5}},type:"if",locations:[{start:{line:177,column:4},end:{line:179,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:177},28:{loc:{start:{line:181,column:4},end:{line:183,column:5}},type:"if",locations:[{start:{line:181,column:4},end:{line:183,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:181},29:{loc:{start:{line:185,column:4},end:{line:187,column:5}},type:"if",locations:[{start:{line:185,column:4},end:{line:187,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:185},30:{loc:{start:{line:195,column:4},end:{line:200,column:5}},type:"if",locations:[{start:{line:195,column:4},end:{line:200,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:195},31:{loc:{start:{line:195,column:8},end:{line:195,column:53}},type:"binary-expr",locations:[{start:{line:195,column:8},end:{line:195,column:25}},{start:{line:195,column:29},end:{line:195,column:53}}],line:195},32:{loc:{start:{line:216,column:6},end:{line:237,column:7}},type:"if",locations:[{start:{line:216,column:6},end:{line:237,column:7}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:216},33:{loc:{start:{line:219,column:10},end:{line:235,column:11}},type:"if",locations:[{start:{line:219,column:10},end:{line:235,column:11}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:219},34:{loc:{start:{line:220,column:12},end:{line:222,column:13}},type:"if",locations:[{start:{line:220,column:12},end:{line:222,column:13}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:220},35:{loc:{start:{line:220,column:16},end:{line:220,column:85}},type:"binary-expr",locations:[{start:{line:220,column:16},end:{line:220,column:52}},{start:{line:220,column:56},end:{line:220,column:85}}],line:220},36:{loc:{start:{line:223,column:12},end:{line:225,column:13}},type:"if",locations:[{start:{line:223,column:12},end:{line:225,column:13}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:223},37:{loc:{start:{line:223,column:16},end:{line:223,column:81}},type:"binary-expr",locations:[{start:{line:223,column:16},end:{line:223,column:43}},{start:{line:223,column:47},end:{line:223,column:81}}],line:223},38:{loc:{start:{line:244,column:38},end:{line:244,column:82}},type:"binary-expr",locations:[{start:{line:244,column:38},end:{line:244,column:60}},{start:{line:244,column:64},end:{line:244,column:82}}],line:244},39:{loc:{start:{line:252,column:22},end:{line:252,column:66}},type:"binary-expr",locations:[{start:{line:252,column:22},end:{line:252,column:39}},{start:{line:252,column:43},end:{line:252,column:66}}],line:252},40:{loc:{start:{line:253,column:11},end:{line:253,column:84}},type:"cond-expr",locations:[{start:{line:253,column:49},end:{line:253,column:72}},{start:{line:253,column:75},end:{line:253,column:84}}],line:253},41:{loc:{start:{line:261,column:13},end:{line:261,column:57}},type:"cond-expr",locations:[{start:{line:261,column:40},end:{line:261,column:47}},{start:{line:261,column:50},end:{line:261,column:57}}],line:261},42:{loc:{start:{line:264,column:37},end:{line:264,column:98}},type:"cond-expr",locations:[{start:{line:264,column:57},end:{line:264,column:60}},{start:{line:264,column:63},end:{line:264,column:98}}],line:264},43:{loc:{start:{line:264,column:63},end:{line:264,column:98}},type:"cond-expr",locations:[{start:{line:264,column:82},end:{line:264,column:84}},{start:{line:264,column:87},end:{line:264,column:98}}],line:264},44:{loc:{start:{line:266,column:4},end:{line:268,column:5}},type:"if",locations:[{start:{line:266,column:4},end:{line:268,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:266},45:{loc:{start:{line:271,column:11},end:{line:274,column:31}},type:"cond-expr",locations:[{start:{line:271,column:29},end:{line:274,column:26}},{start:{line:274,column:29},end:{line:274,column:31}}],line:271},46:{loc:{start:{line:300,column:16},end:{line:300,column:36}},type:"binary-expr",locations:[{start:{line:300,column:16},end:{line:300,column:24}},{start:{line:300,column:28},end:{line:300,column:36}}],line:300},47:{loc:{start:{line:324,column:2},end:{line:326,column:3}},type:"if",locations:[{start:{line:324,column:2},end:{line:326,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:324}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0,65:0,66:0,67:0,68:0,69:0,70:0,71:0,72:0,73:0,74:0,75:0,76:0,77:0,78:0,79:0,80:0,81:0,82:0,83:0,84:0,85:0,86:0,87:0,88:0,89:0,90:0,91:0,92:0,93:0,94:0,95:0,96:0,97:0,98:0,99:0,100:0,101:0,102:0,103:0,104:0,105:0,106:0,107:0,108:0,109:0,110:0,111:0,112:0,113:0,114:0,115:0,116:0,117:0,118:0,119:0,120:0,121:0,122:0,123:0,124:0,125:0,126:0,127:0,128:0,129:0,130:0,131:0,132:0,133:0,134:0,135:0,136:0,137:0,138:0,139:0,140:0,141:0,142:0,143:0,144:0,145:0,146:0,147:0,148:0,149:0,150:0,151:0,152:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0},b:{0:[0],1:[0],2:[0],3:[0],4:[0],5:[0],6:[0],7:[0],8:[0],9:[0],10:[0],11:[0],12:[0],13:[0,0],14:[0,0],15:[0,0],16:[0,0],17:[0,0],18:[0,0],19:[0,0,0,0],20:[0,0],21:[0,0],22:[0,0],23:[0,0],24:[0,0],25:[0,0],26:[0,0],27:[0,0],28:[0,0],29:[0,0],30:[0,0],31:[0,0],32:[0,0],33:[0,0],34:[0,0],35:[0,0],36:[0,0],37:[0,0],38:[0,0],39:[0,0],40:[0,0],41:[0,0],42:[0,0],43:[0,0],44:[0,0],45:[0,0],46:[0,0],47:[0,0]},inputSourceMap:{version:3,names:["React","createContext","useContext","useEffect","useMemo","useState","DateTime","Interval","addHeaderResource","filterTasks","validateTasks","DEFAULT_GRID_COLUMN_WIDTH","DEFAULT_GRID_ROW_HEIGHT","MINIMUM_GRID_ROW_HEIGHT","logDebug","logWarn","getValidRangeTime","getValidTime","getXCoordinateFromTime","isValidRangeTime","getIntervalFromInternalTimeRange","getResolutionData","executeWithPerfomanceCheck","TimelineContext","undefined","DEFAULT_DRAW_RANGE","start","end","TimelineProvider","children","columnWidth","externalColumnWidth","debug","displayTasksLabel","dragResolution","externalDragResolution","enableDrag","enableResize","headerLabel","hideResources","initialDateTime","externalInitialDateTime","onErrors","onTaskClick","onTaskChange","tasks","externalTasks","range","externalRange","resolution","externalResolution","resources","externalResources","rowHeight","externalRowHeight","timezone","externalTimezone","theme","externalTheme","localized","duration","completed","dateLocale","onAreaSelect","toolTip","customToolTip","enableTaskPattern","enableLines","onResourceClick","summary","externalSummary","showSummary","summaryHeader","customResources","dateCheck","fromMillis","zone","isValid","drawRange","setDrawRange","window","__MELFORE_KONVA_TIMELINE_DEBUG__","externalStart","externalEnd","isStart","isEnd","now","local","toMillis","interval","TIME_BLOCKS_PRELOAD","unit","sizeInUnits","timeBlocksPreload","initial","Number","isNaN","Date","getTime","validTasks","timeBlocks","splitBy","aboveTimeBlocks","unitAbove","blocks","intervalStart","intervalEnd","blockStart","blockEnd","endOf","push","fromDateTimes","startOf","plus","columnSize","timeblocksOffset","Math","floor","visibleTimeBlocks","rangeLength","startIndex","endIndex","ceil","length","vtbs","slice","visibleRange","items","allValidTasks","validLine","arrLine","startInMillis","endInMillis","forEach","item","relatedTasks","kLine","lineEndId","find","i","id","time","startId","endId","startResId","resourceId","endResId","resData","resourcesContentHeight","color","summaryWidth","errors","label","createElement","Provider","value","resolutionKey","blocksOffset","externalRangeInMillis","useTimelineContext","context","Error"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/timeline/TimelineContext.tsx"],sourcesContent:['import React, { createContext, PropsWithChildren, useContext, useEffect, useMemo, useState } from "react";\nimport { DateTime, Interval } from "luxon";\n\nimport { addHeaderResource, Resource } from "../resources/utils/resources";\nimport { AreaSelect, filterTasks, TaskData, validateTasks } from "../tasks/utils/tasks";\nimport { DEFAULT_GRID_COLUMN_WIDTH, DEFAULT_GRID_ROW_HEIGHT, MINIMUM_GRID_ROW_HEIGHT } from "../utils/dimensions";\nimport { logDebug, logWarn } from "../utils/logger";\nimport {\n  getValidRangeTime,\n  getValidTime,\n  getXCoordinateFromTime,\n  InternalTimeRange,\n  isValidRangeTime,\n} from "../utils/time";\nimport { getIntervalFromInternalTimeRange } from "../utils/time";\nimport { getResolutionData, Resolution, ResolutionData } from "../utils/time-resolution";\nimport { TimelineInput } from "../utils/timeline";\nimport { executeWithPerfomanceCheck } from "../utils/utils";\nimport { KonvaTimelineError } from "..";\n\ndeclare global {\n  interface Window {\n    __MELFORE_KONVA_TIMELINE_DEBUG__?: boolean;\n  }\n}\n\ntype TimelineThemeMode = "dark" | "light";\n\nexport type Localized = {\n  start: string;\n  end: string;\n  duration: string;\n  completed: string;\n};\n\nexport type CustomToolTipData = TaskData & {\n  start: string;\n  end: string;\n};\n\nexport type LineData = {\n  id: string;\n  startId: string;\n  endId: string;\n  startResId: string;\n  endResId: string;\n  start: number;\n  end: number;\n};\n\nexport type CustomRes = {\n  resource: Resource;\n  dimension: {\n    width: number;\n    height: number;\n  };\n};\n\nexport type TimelineProviderProps = PropsWithChildren<TimelineInput> & {\n  /**\n   * Enables debug logging in browser console\n   */\n  debug?: boolean;\n  /**\n   * Enables drag&drop operation on tasks\n   */\n  enableDrag?: boolean;\n  /**\n   * Enables resize operation on tasks\n   */\n  enableResize?: boolean;\n  /**\n   * Label to display in header column\n   */\n  headerLabel?: string;\n  /**\n   * Initial date time to scroll to\n   */\n  initialDateTime?: number | string;\n  /**\n   * Callback invoked when errors are thrown\n   */\n  onErrors?: (errors: KonvaTimelineError[]) => void;\n  /**\n   * Event handler for task click\n   */\n  onTaskClick?: (task: TaskData) => void;\n  /**\n   * Event handler for task change event (drag and resize)\n   */\n  onTaskChange?: (task: TaskData, opts?: { tasksId: string[]; addTime: number }) => void;\n  /**\n   * Timezone used for display (defaults to \'system\')\n   */\n  timezone?: string;\n  /**\n   * Theme color in use\n   */\n  theme?: TimelineThemeMode;\n  /**\n   * ToolTips Labels\n   */\n  localized?: Localized;\n  /**\n   * Language used for date format\n   */\n  dateLocale?: string;\n  /**\n   * Event handler for task add event\n   */\n  onAreaSelect?: (task: AreaSelect) => void;\n  /**\n   * ToolTip display\n   */\n  toolTip?: boolean;\n  /**\n   * Callback that return a personalized tooltip( 200x100 is max possible size)\n   */\n  customToolTip?: (taskData: CustomToolTipData) => React.JSX.Element;\n  /**\n   * Enables pattern for incomplete part of the task (default true)\n   */\n  enableTaskPattern?: boolean;\n  /**\n   * Enables connection between tasks (if kLine is set in taskData)\n   */\n  enableLines?: boolean;\n  /**\n   * Event handler for resource click\n   */\n  onResourceClick?: (task: Resource) => void;\n  /**\n   * Summary data\n   */\n  summary?: { id: string; label: string }[];\n  /**\n   * Enable summary\n   */\n  showSummary?: boolean;\n  /**\n   * Header label to display in summary column, default is Summary\n   */\n  summaryHeader?: string;\n  /**\n   * Callback that return a personalized resources(this func return also the dimension of a single resourse)\n   */\n  customResources?: (resourceData: CustomRes) => React.JSX.Element;\n};\n\ntype TimelineTheme = {\n  color: string;\n};\n\ntype TimelineContextType = Required<\n  Pick<TimelineInput, "columnWidth" | "displayTasksLabel" | "hideResources" | "resources" | "rowHeight">\n> & {\n  aboveTimeBlocks: Interval[];\n  blocksOffset: number;\n  dragResolution: ResolutionData;\n  drawRange: InternalTimeRange;\n  enableDrag: boolean;\n  enableResize: boolean;\n  headerLabel?: string;\n  initialDateTime?: number;\n  interval: Interval;\n  onErrors?: (errors: KonvaTimelineError[]) => void;\n  onTaskClick?: (task: TaskData) => void;\n  onTaskChange?: (task: TaskData, opts?: { tasksId: string[]; addTime: number }) => void;\n  resolution: ResolutionData;\n  resolutionKey: Resolution;\n  resourcesContentHeight: number;\n  setDrawRange: (range: InternalTimeRange) => void;\n  tasks: TaskData<InternalTimeRange>[];\n  theme: TimelineTheme;\n  timeBlocks: Interval[];\n  timezone: string;\n  visibleTimeBlocks: Interval[];\n  localized: Localized;\n  dateLocale?: string;\n  onAreaSelect?: (task: AreaSelect) => void;\n  toolTip?: boolean;\n  customToolTip?: (taskData: CustomToolTipData) => React.JSX.Element;\n  enableTaskPattern?: boolean;\n  enableLines?: boolean;\n  validLine?: LineData[];\n  allValidTasks: TaskData<InternalTimeRange>[];\n  externalRangeInMillis: InternalTimeRange;\n  onResourceClick?: (resource: Resource) => void;\n  summary?: { id: string; label: string }[];\n  showSummary?: boolean;\n  summaryWidth: number;\n  summaryHeader?: string;\n  customResources?: (resourceData: CustomRes) => React.JSX.Element;\n};\n\nconst TimelineContext = createContext<TimelineContextType | undefined>(undefined);\n\n// TODO#lb: this should be another data type, specific to drawing\nconst DEFAULT_DRAW_RANGE: InternalTimeRange = { start: 0, end: 0 };\n\nexport const TimelineProvider = ({\n  children,\n  columnWidth: externalColumnWidth,\n  debug = false,\n  displayTasksLabel = false,\n  dragResolution: externalDragResolution = "1min",\n  enableDrag = true,\n  enableResize = true,\n  headerLabel,\n  hideResources = false,\n  initialDateTime: externalInitialDateTime,\n  onErrors,\n  onTaskClick,\n  onTaskChange,\n  tasks: externalTasks = [],\n  range: externalRange,\n  resolution: externalResolution = "1hrs",\n  resources: externalResources,\n  rowHeight: externalRowHeight,\n  timezone: externalTimezone,\n  theme: externalTheme = "light",\n  localized = {\n    start: "Start",\n    end: "End",\n    duration: "Duration",\n    completed: "Completed",\n  },\n  dateLocale = "en",\n  onAreaSelect,\n  toolTip = true,\n  customToolTip,\n  enableTaskPattern = true,\n  enableLines,\n  onResourceClick,\n  summary: externalSummary,\n  showSummary,\n  summaryHeader,\n  customResources,\n}: TimelineProviderProps) => {\n  const timezone = useMemo(() => {\n    if (!externalTimezone) {\n      return "system";\n    }\n\n    const dateCheck = DateTime.fromMillis(0, { zone: externalTimezone });\n    if (!dateCheck.isValid) {\n      return "system";\n    }\n\n    return externalTimezone;\n  }, [externalTimezone]);\n\n  const [drawRange, setDrawRange] = useState(DEFAULT_DRAW_RANGE);\n\n  useEffect(() => {\n    logWarn("TimelineProvider", `Debug ${debug ? "ON" : "OFF"}`);\n    window.__MELFORE_KONVA_TIMELINE_DEBUG__ = debug;\n  }, [debug]);\n\n  const range = useMemo((): InternalTimeRange => {\n    const { start: externalStart, end: externalEnd } = externalRange;\n    const isStart = isValidRangeTime(externalStart, "StartRenge");\n    const isEnd = isValidRangeTime(externalEnd, "EndRange");\n    const start = getValidRangeTime(externalStart, timezone);\n    const end = getValidRangeTime(externalEnd, timezone);\n    if (isStart) {\n      if (start <= end) {\n        return { start, end };\n      }\n      return { start: start, end: start };\n    }\n    if (isEnd) {\n      return { start: end, end: end };\n    }\n    const now = DateTime.local().toMillis();\n    return { start: now, end: now };\n  }, [externalRange, timezone]);\n\n  const resolution = useMemo(\n    () => executeWithPerfomanceCheck("TimelineProvider", "resolution", () => getResolutionData(externalResolution)),\n    [externalResolution]\n  );\n\n  const interval = useMemo(\n    () =>\n      executeWithPerfomanceCheck("TimelineProvider", "interval", () =>\n        getIntervalFromInternalTimeRange(range, resolution, timezone)\n      ),\n    [range, resolution, timezone]\n  );\n\n  const TIME_BLOCKS_PRELOAD = useMemo(() => {\n    const { unit, sizeInUnits } = resolution;\n    let timeBlocksPreload = 0;\n    switch (unit) {\n      case "minute":\n        timeBlocksPreload = 60 / sizeInUnits;\n        break;\n      case "hour":\n        timeBlocksPreload = 24 / sizeInUnits;\n        break;\n      case "day":\n        timeBlocksPreload = 7 / sizeInUnits;\n        break;\n      case "week":\n        timeBlocksPreload = 5 / sizeInUnits;\n        break;\n    }\n    return timeBlocksPreload;\n  }, [resolution]);\n\n  const initialDateTime = useMemo(() => {\n    let initial = DateTime.now().toMillis();\n    if (externalInitialDateTime) {\n      initial = getValidTime(externalInitialDateTime, timezone);\n      if (Number.isNaN(initial)) {\n        initial = new Date().getTime();\n      }\n    }\n\n    if (initial < range.start || initial > range.end) {\n      return range.start;\n    }\n\n    return initial;\n  }, [externalInitialDateTime, range, timezone]);\n\n  const validTasks = useMemo(\n    () =>\n      executeWithPerfomanceCheck("TimelineProvider", "validateTasks", () =>\n        validateTasks(externalTasks, range, timezone)\n      ),\n    [externalTasks, range, timezone]\n  );\n  const timeBlocks = useMemo(\n    () =>\n      executeWithPerfomanceCheck("TimelineProvider", "timeBlocks", () =>\n        interval.splitBy({ [resolution.unit]: resolution.sizeInUnits })\n      ),\n    [interval, resolution]\n  );\n\n  const aboveTimeBlocks = useMemo(() => {\n    const { unitAbove } = resolution;\n    const blocks: Interval[] = [];\n    const intervalStart = interval.start!;\n    const intervalEnd = interval.end!;\n\n    let blockStart = intervalStart;\n\n    while (blockStart < intervalEnd) {\n      let blockEnd = blockStart.endOf(unitAbove);\n\n      if (blockEnd > intervalEnd) {\n        blockEnd = intervalEnd;\n      }\n\n      blocks.push(Interval.fromDateTimes(blockStart, blockEnd));\n      blockStart = blockEnd.startOf(unitAbove).plus({ [unitAbove]: 1 });\n    }\n\n    return blocks;\n  }, [interval, resolution]);\n\n  const columnWidth = useMemo(() => {\n    logDebug("TimelineProvider", "Calculating columnWidth...");\n    return !externalColumnWidth || externalColumnWidth < DEFAULT_GRID_COLUMN_WIDTH\n      ? resolution.columnSize\n      : externalColumnWidth;\n  }, [externalColumnWidth, resolution]);\n\n  const timeblocksOffset = useMemo(() => Math.floor(drawRange.start / columnWidth), [drawRange, columnWidth]);\n\n  const visibleTimeBlocks = useMemo(() => {\n    logDebug("TimelineProvider", "Calculating visible time blocks...");\n    const start = DateTime.now().toMillis();\n    const rangeLength = drawRange.end - drawRange.start;\n    if (rangeLength <= 0) {\n      return [];\n    }\n\n    let startIndex = timeblocksOffset;\n    if (startIndex > TIME_BLOCKS_PRELOAD) {\n      startIndex = timeblocksOffset - TIME_BLOCKS_PRELOAD;\n    }\n\n    let endIndex = Math.ceil(drawRange.end / columnWidth);\n    if (endIndex < timeBlocks.length - TIME_BLOCKS_PRELOAD) {\n      endIndex = endIndex + TIME_BLOCKS_PRELOAD;\n    }\n\n    const vtbs = [...timeBlocks].slice(timeblocksOffset, endIndex);\n    const end = DateTime.now().toMillis();\n    logDebug("TimelineProvider", `Visible time blocks calculation took ${end - start} ms`);\n    return vtbs;\n  }, [timeblocksOffset, columnWidth, drawRange, timeBlocks, TIME_BLOCKS_PRELOAD]);\n\n  const visibleRange = useMemo(() => {\n    let range = null;\n    if (visibleTimeBlocks && visibleTimeBlocks.length) {\n      range = {\n        start: visibleTimeBlocks[0].start!.toMillis(),\n        end: visibleTimeBlocks[visibleTimeBlocks.length - 1].end!.toMillis(),\n      };\n    }\n\n    return range;\n  }, [visibleTimeBlocks]);\n\n  const tasks = useMemo(\n    () =>\n      executeWithPerfomanceCheck("TimelineProvider", "filterTasks", () => filterTasks(validTasks.items, visibleRange)),\n    [validTasks, visibleRange]\n  );\n\n  /*const lineTasks = useMemo(\n    () => onLine && LineFilter(validTasks.items, visibleRange),\n    [validTasks, visibleRange, onLine]\n  );*/\n\n  const allValidTasks = useMemo(() => validTasks.items, [validTasks]);\n\n  const validLine = useMemo(() => {\n    const arrLine: LineData[] = [];\n    const startInMillis = getXCoordinateFromTime(drawRange.start, resolution, columnWidth, interval);\n    const endInMillis = getXCoordinateFromTime(drawRange.end, resolution, columnWidth, interval);\n    allValidTasks.forEach((item) => {\n      if (item.relatedTasks) {\n        item.relatedTasks.forEach((kLine) => {\n          const lineEndId = allValidTasks.find((i) => kLine === i.id);\n          if (lineEndId) {\n            if (startInMillis > lineEndId.time.start && startInMillis > item.time.end) {\n              return;\n            }\n            if (endInMillis < item.time.end && endInMillis < lineEndId.time.start) {\n              return;\n            }\n            arrLine.push({\n              id: item.id + lineEndId.id,\n              startId: item.id,\n              endId: lineEndId!.id,\n              startResId: item.resourceId,\n              endResId: lineEndId!.resourceId,\n              start: item.time.end,\n              end: lineEndId.time.start,\n            });\n          }\n        });\n      }\n    });\n    return arrLine;\n  }, [allValidTasks, drawRange, columnWidth, resolution, interval]);\n\n  const dragResolution = useMemo(() => {\n    logDebug("TimelineProvider", "Calculating drag resolution...");\n    const start = DateTime.now().toMillis();\n    const resData = getResolutionData(externalDragResolution || externalResolution);\n    const end = DateTime.now().toMillis();\n    logDebug("TimelineProvider", `Drag resolution calculation took ${end - start} ms`);\n    return resData;\n  }, [externalDragResolution, externalResolution]);\n\n  const resources = useMemo(() => addHeaderResource(externalResources, headerLabel), [externalResources, headerLabel]);\n\n  const rowHeight = useMemo(() => {\n    logDebug("TimelineProvider", "Calculating rowHeight...");\n    const rowHeight = externalRowHeight || DEFAULT_GRID_ROW_HEIGHT;\n    return rowHeight < MINIMUM_GRID_ROW_HEIGHT ? MINIMUM_GRID_ROW_HEIGHT : rowHeight;\n  }, [externalRowHeight]);\n\n  const resourcesContentHeight = useMemo(() => {\n    logDebug("TimelineProvider", "Calculating resources content height...");\n    return rowHeight * resources.length;\n  }, [resources, rowHeight]);\n\n  const theme = useMemo((): TimelineTheme => {\n    return {\n      color: externalTheme === "dark" ? "white" : "black",\n    };\n  }, [externalTheme]);\n\n  const summaryWidth = useMemo(() => (columnWidth > 120 ? 120 : columnWidth < 60 ? 60 : columnWidth), [columnWidth]);\n\n  useEffect(() => {\n    if (onErrors) {\n      onErrors(validTasks.errors);\n    }\n  }, [onErrors, validTasks]);\n\n  const summary = useMemo(() => {\n    return externalSummary ? [{ id: "0summary", label: "Summary" }, ...externalSummary] : [];\n  }, [externalSummary]);\n\n  return (\n    <TimelineContext.Provider\n      value={{\n        aboveTimeBlocks,\n        columnWidth,\n        displayTasksLabel,\n        dragResolution,\n        drawRange,\n        enableDrag,\n        enableResize,\n        hideResources,\n        initialDateTime,\n        interval,\n        onErrors,\n        onTaskClick,\n        onTaskChange,\n        resolution,\n        resolutionKey: externalResolution,\n        resources,\n        resourcesContentHeight,\n        rowHeight,\n        setDrawRange,\n        tasks,\n        theme,\n        timeBlocks,\n        timezone: timezone || "system",\n        visibleTimeBlocks,\n        blocksOffset: timeblocksOffset,\n        localized: localized,\n        dateLocale,\n        onAreaSelect,\n        toolTip,\n        customToolTip,\n        enableTaskPattern,\n        enableLines,\n        validLine,\n        allValidTasks,\n        externalRangeInMillis: range,\n        onResourceClick,\n        summary,\n        showSummary,\n        summaryHeader,\n        summaryWidth,\n        customResources,\n      }}\n    >\n      {children}\n    </TimelineContext.Provider>\n  );\n};\n\nexport const useTimelineContext = () => {\n  const context = useContext(TimelineContext);\n  if (context === undefined) {\n    throw new Error("useTimelineContext must be used within a TimelineProvider");\n  }\n\n  return context;\n};\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a92a71857095f15cada86e41ad5b4b1b5946f55f"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"a92a71857095f15cada86e41ad5b4b1b5946f55f"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_107e24dr7=function(){return actualCoverage},actualCoverage}cov_107e24dr7();const TimelineContext=(cov_107e24dr7().s[0]++,(0,react.createContext)(void 0)),DEFAULT_DRAW_RANGE=(cov_107e24dr7().s[1]++,{start:0,end:0});cov_107e24dr7().s[2]++;const TimelineProvider=({children:children,columnWidth:externalColumnWidth,debug:debug=(cov_107e24dr7().b[0][0]++,!1),displayTasksLabel:displayTasksLabel=(cov_107e24dr7().b[1][0]++,!1),dragResolution:externalDragResolution=(cov_107e24dr7().b[2][0]++,"1min"),enableDrag:enableDrag=(cov_107e24dr7().b[3][0]++,!0),enableResize:enableResize=(cov_107e24dr7().b[4][0]++,!0),headerLabel:headerLabel,hideResources:hideResources=(cov_107e24dr7().b[5][0]++,!1),initialDateTime:externalInitialDateTime,onErrors:onErrors,onTaskClick:onTaskClick,onTaskChange:onTaskChange,tasks:externalTasks=(cov_107e24dr7().b[6][0]++,[]),range:externalRange,resolution:externalResolution=(cov_107e24dr7().b[7][0]++,"1hrs"),resources:externalResources,rowHeight:externalRowHeight,timezone:externalTimezone,theme:externalTheme=(cov_107e24dr7().b[8][0]++,"light"),localized:localized=(cov_107e24dr7().b[9][0]++,{start:"Start",end:"End",duration:"Duration",completed:"Completed"}),dateLocale:dateLocale=(cov_107e24dr7().b[10][0]++,"en"),onAreaSelect:onAreaSelect,toolTip:toolTip=(cov_107e24dr7().b[11][0]++,!0),customToolTip:customToolTip,enableTaskPattern:enableTaskPattern=(cov_107e24dr7().b[12][0]++,!0),enableLines:enableLines,onResourceClick:onResourceClick,summary:externalSummary,showSummary:showSummary,summaryHeader:summaryHeader,customResources:customResources})=>{cov_107e24dr7().f[0]++;const timezone=(cov_107e24dr7().s[3]++,(0,react.useMemo)((()=>{if(cov_107e24dr7().f[1]++,cov_107e24dr7().s[4]++,!externalTimezone)return cov_107e24dr7().b[13][0]++,cov_107e24dr7().s[5]++,"system";cov_107e24dr7().b[13][1]++;const dateCheck=(cov_107e24dr7().s[6]++,luxon.c9.fromMillis(0,{zone:externalTimezone}));return cov_107e24dr7().s[7]++,dateCheck.isValid?(cov_107e24dr7().b[14][1]++,cov_107e24dr7().s[9]++,externalTimezone):(cov_107e24dr7().b[14][0]++,cov_107e24dr7().s[8]++,"system")}),[externalTimezone])),[drawRange,setDrawRange]=(cov_107e24dr7().s[10]++,(0,react.useState)(DEFAULT_DRAW_RANGE));cov_107e24dr7().s[11]++,(0,react.useEffect)((()=>{cov_107e24dr7().f[2]++,cov_107e24dr7().s[12]++,(0,logger.JE)("TimelineProvider","Debug "+(debug?(cov_107e24dr7().b[15][0]++,"ON"):(cov_107e24dr7().b[15][1]++,"OFF"))),cov_107e24dr7().s[13]++,window.__MELFORE_KONVA_TIMELINE_DEBUG__=debug}),[debug]);const range=(cov_107e24dr7().s[14]++,(0,react.useMemo)((()=>{cov_107e24dr7().f[3]++;const{start:externalStart,end:externalEnd}=(cov_107e24dr7().s[15]++,externalRange),isStart=(cov_107e24dr7().s[16]++,(0,time.NL)(externalStart,"StartRenge")),isEnd=(cov_107e24dr7().s[17]++,(0,time.NL)(externalEnd,"EndRange")),start=(cov_107e24dr7().s[18]++,(0,time.Vo)(externalStart,timezone)),end=(cov_107e24dr7().s[19]++,(0,time.Vo)(externalEnd,timezone));if(cov_107e24dr7().s[20]++,isStart)return cov_107e24dr7().b[16][0]++,cov_107e24dr7().s[21]++,start<=end?(cov_107e24dr7().b[17][0]++,cov_107e24dr7().s[22]++,{start:start,end:end}):(cov_107e24dr7().b[17][1]++,cov_107e24dr7().s[23]++,{start:start,end:start});if(cov_107e24dr7().b[16][1]++,cov_107e24dr7().s[24]++,isEnd)return cov_107e24dr7().b[18][0]++,cov_107e24dr7().s[25]++,{start:end,end:end};cov_107e24dr7().b[18][1]++;const now=(cov_107e24dr7().s[26]++,luxon.c9.local().toMillis());return cov_107e24dr7().s[27]++,{start:now,end:now}}),[externalRange,timezone])),resolution=(cov_107e24dr7().s[28]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[4]++,cov_107e24dr7().s[29]++,executeWithPerfomanceCheck("TimelineProvider","resolution",(()=>(cov_107e24dr7().f[5]++,cov_107e24dr7().s[30]++,(0,time_resolution.pO)(externalResolution)))))),[externalResolution])),interval=(cov_107e24dr7().s[31]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[6]++,cov_107e24dr7().s[32]++,executeWithPerfomanceCheck("TimelineProvider","interval",(()=>(cov_107e24dr7().f[7]++,cov_107e24dr7().s[33]++,(0,time.pl)(range,resolution,timezone)))))),[range,resolution,timezone])),TIME_BLOCKS_PRELOAD=(cov_107e24dr7().s[34]++,(0,react.useMemo)((()=>{cov_107e24dr7().f[8]++;const{unit:unit,sizeInUnits:sizeInUnits}=(cov_107e24dr7().s[35]++,resolution);let timeBlocksPreload=(cov_107e24dr7().s[36]++,0);switch(cov_107e24dr7().s[37]++,unit){case"minute":cov_107e24dr7().b[19][0]++,cov_107e24dr7().s[38]++,timeBlocksPreload=60/sizeInUnits,cov_107e24dr7().s[39]++;break;case"hour":cov_107e24dr7().b[19][1]++,cov_107e24dr7().s[40]++,timeBlocksPreload=24/sizeInUnits,cov_107e24dr7().s[41]++;break;case"day":cov_107e24dr7().b[19][2]++,cov_107e24dr7().s[42]++,timeBlocksPreload=7/sizeInUnits,cov_107e24dr7().s[43]++;break;case"week":cov_107e24dr7().b[19][3]++,cov_107e24dr7().s[44]++,timeBlocksPreload=5/sizeInUnits,cov_107e24dr7().s[45]++}return cov_107e24dr7().s[46]++,timeBlocksPreload}),[resolution])),initialDateTime=(cov_107e24dr7().s[47]++,(0,react.useMemo)((()=>{cov_107e24dr7().f[9]++;let initial=(cov_107e24dr7().s[48]++,luxon.c9.now().toMillis());return cov_107e24dr7().s[49]++,externalInitialDateTime?(cov_107e24dr7().b[20][0]++,cov_107e24dr7().s[50]++,initial=(0,time.e$)(externalInitialDateTime,timezone),cov_107e24dr7().s[51]++,Number.isNaN(initial)?(cov_107e24dr7().b[21][0]++,cov_107e24dr7().s[52]++,initial=(new Date).getTime()):cov_107e24dr7().b[21][1]++):cov_107e24dr7().b[20][1]++,cov_107e24dr7().s[53]++,cov_107e24dr7().b[23][0]++,initial<range.start||(cov_107e24dr7().b[23][1]++,initial>range.end)?(cov_107e24dr7().b[22][0]++,cov_107e24dr7().s[54]++,range.start):(cov_107e24dr7().b[22][1]++,cov_107e24dr7().s[55]++,initial)}),[externalInitialDateTime,range,timezone])),validTasks=(cov_107e24dr7().s[56]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[10]++,cov_107e24dr7().s[57]++,executeWithPerfomanceCheck("TimelineProvider","validateTasks",(()=>(cov_107e24dr7().f[11]++,cov_107e24dr7().s[58]++,(0,utils_tasks.Rb)(externalTasks,range,timezone)))))),[externalTasks,range,timezone])),timeBlocks=(cov_107e24dr7().s[59]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[12]++,cov_107e24dr7().s[60]++,executeWithPerfomanceCheck("TimelineProvider","timeBlocks",(()=>(cov_107e24dr7().f[13]++,cov_107e24dr7().s[61]++,interval.splitBy({[resolution.unit]:resolution.sizeInUnits})))))),[interval,resolution])),aboveTimeBlocks=(cov_107e24dr7().s[62]++,(0,react.useMemo)((()=>{cov_107e24dr7().f[14]++;const{unitAbove:unitAbove}=(cov_107e24dr7().s[63]++,resolution),blocks=(cov_107e24dr7().s[64]++,[]),intervalStart=(cov_107e24dr7().s[65]++,interval.start),intervalEnd=(cov_107e24dr7().s[66]++,interval.end);let blockStart=(cov_107e24dr7().s[67]++,intervalStart);for(cov_107e24dr7().s[68]++;blockStart<intervalEnd;){let blockEnd=(cov_107e24dr7().s[69]++,blockStart.endOf(unitAbove));cov_107e24dr7().s[70]++,blockEnd>intervalEnd?(cov_107e24dr7().b[24][0]++,cov_107e24dr7().s[71]++,blockEnd=intervalEnd):cov_107e24dr7().b[24][1]++,cov_107e24dr7().s[72]++,blocks.push(luxon.IX.fromDateTimes(blockStart,blockEnd)),cov_107e24dr7().s[73]++,blockStart=blockEnd.startOf(unitAbove).plus({[unitAbove]:1})}return cov_107e24dr7().s[74]++,blocks}),[interval,resolution])),columnWidth=(cov_107e24dr7().s[75]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[15]++,cov_107e24dr7().s[76]++,(0,logger.MD)("TimelineProvider","Calculating columnWidth..."),cov_107e24dr7().s[77]++,cov_107e24dr7().b[26][0]++,!externalColumnWidth||(cov_107e24dr7().b[26][1]++,externalColumnWidth<dimensions.nT)?(cov_107e24dr7().b[25][0]++,resolution.columnSize):(cov_107e24dr7().b[25][1]++,externalColumnWidth))),[externalColumnWidth,resolution])),timeblocksOffset=(cov_107e24dr7().s[78]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[16]++,cov_107e24dr7().s[79]++,Math.floor(drawRange.start/columnWidth))),[drawRange,columnWidth])),visibleTimeBlocks=(cov_107e24dr7().s[80]++,(0,react.useMemo)((()=>{cov_107e24dr7().f[17]++,cov_107e24dr7().s[81]++,(0,logger.MD)("TimelineProvider","Calculating visible time blocks...");const start=(cov_107e24dr7().s[82]++,luxon.c9.now().toMillis()),rangeLength=(cov_107e24dr7().s[83]++,drawRange.end-drawRange.start);if(cov_107e24dr7().s[84]++,rangeLength<=0)return cov_107e24dr7().b[27][0]++,cov_107e24dr7().s[85]++,[];cov_107e24dr7().b[27][1]++;let startIndex=(cov_107e24dr7().s[86]++,timeblocksOffset);cov_107e24dr7().s[87]++,startIndex>TIME_BLOCKS_PRELOAD?(cov_107e24dr7().b[28][0]++,cov_107e24dr7().s[88]++,startIndex=timeblocksOffset-TIME_BLOCKS_PRELOAD):cov_107e24dr7().b[28][1]++;let endIndex=(cov_107e24dr7().s[89]++,Math.ceil(drawRange.end/columnWidth));cov_107e24dr7().s[90]++,endIndex<timeBlocks.length-TIME_BLOCKS_PRELOAD?(cov_107e24dr7().b[29][0]++,cov_107e24dr7().s[91]++,endIndex+=TIME_BLOCKS_PRELOAD):cov_107e24dr7().b[29][1]++;const vtbs=(cov_107e24dr7().s[92]++,[...timeBlocks].slice(timeblocksOffset,endIndex)),end=(cov_107e24dr7().s[93]++,luxon.c9.now().toMillis());return cov_107e24dr7().s[94]++,(0,logger.MD)("TimelineProvider",`Visible time blocks calculation took ${end-start} ms`),cov_107e24dr7().s[95]++,vtbs}),[timeblocksOffset,columnWidth,drawRange,timeBlocks,TIME_BLOCKS_PRELOAD])),visibleRange=(cov_107e24dr7().s[96]++,(0,react.useMemo)((()=>{cov_107e24dr7().f[18]++;let range=(cov_107e24dr7().s[97]++,null);return cov_107e24dr7().s[98]++,cov_107e24dr7().b[31][0]++,visibleTimeBlocks&&(cov_107e24dr7().b[31][1]++,visibleTimeBlocks.length)?(cov_107e24dr7().b[30][0]++,cov_107e24dr7().s[99]++,range={start:visibleTimeBlocks[0].start.toMillis(),end:visibleTimeBlocks[visibleTimeBlocks.length-1].end.toMillis()}):cov_107e24dr7().b[30][1]++,cov_107e24dr7().s[100]++,range}),[visibleTimeBlocks])),tasks=(cov_107e24dr7().s[101]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[19]++,cov_107e24dr7().s[102]++,executeWithPerfomanceCheck("TimelineProvider","filterTasks",(()=>(cov_107e24dr7().f[20]++,cov_107e24dr7().s[103]++,(0,utils_tasks.NT)(validTasks.items,visibleRange)))))),[validTasks,visibleRange])),allValidTasks=(cov_107e24dr7().s[104]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[21]++,cov_107e24dr7().s[105]++,validTasks.items)),[validTasks])),validLine=(cov_107e24dr7().s[106]++,(0,react.useMemo)((()=>{cov_107e24dr7().f[22]++;const arrLine=(cov_107e24dr7().s[107]++,[]),startInMillis=(cov_107e24dr7().s[108]++,(0,time.SL)(drawRange.start,resolution,columnWidth,interval)),endInMillis=(cov_107e24dr7().s[109]++,(0,time.SL)(drawRange.end,resolution,columnWidth,interval));return cov_107e24dr7().s[110]++,allValidTasks.forEach((item=>{cov_107e24dr7().f[23]++,cov_107e24dr7().s[111]++,item.relatedTasks?(cov_107e24dr7().b[32][0]++,cov_107e24dr7().s[112]++,item.relatedTasks.forEach((kLine=>{cov_107e24dr7().f[24]++;const lineEndId=(cov_107e24dr7().s[113]++,allValidTasks.find((i=>(cov_107e24dr7().f[25]++,cov_107e24dr7().s[114]++,kLine===i.id))));if(cov_107e24dr7().s[115]++,lineEndId){if(cov_107e24dr7().b[33][0]++,cov_107e24dr7().s[116]++,cov_107e24dr7().b[35][0]++,startInMillis>lineEndId.time.start&&(cov_107e24dr7().b[35][1]++,startInMillis>item.time.end))return cov_107e24dr7().b[34][0]++,void cov_107e24dr7().s[117]++;if(cov_107e24dr7().b[34][1]++,cov_107e24dr7().s[118]++,cov_107e24dr7().b[37][0]++,endInMillis<item.time.end&&(cov_107e24dr7().b[37][1]++,endInMillis<lineEndId.time.start))return cov_107e24dr7().b[36][0]++,void cov_107e24dr7().s[119]++;cov_107e24dr7().b[36][1]++,cov_107e24dr7().s[120]++,arrLine.push({id:item.id+lineEndId.id,startId:item.id,endId:lineEndId.id,startResId:item.resourceId,endResId:lineEndId.resourceId,start:item.time.end,end:lineEndId.time.start})}else cov_107e24dr7().b[33][1]++}))):cov_107e24dr7().b[32][1]++})),cov_107e24dr7().s[121]++,arrLine}),[allValidTasks,drawRange,columnWidth,resolution,interval])),dragResolution=(cov_107e24dr7().s[122]++,(0,react.useMemo)((()=>{cov_107e24dr7().f[26]++,cov_107e24dr7().s[123]++,(0,logger.MD)("TimelineProvider","Calculating drag resolution...");const start=(cov_107e24dr7().s[124]++,luxon.c9.now().toMillis()),resData=(cov_107e24dr7().s[125]++,(0,time_resolution.pO)((cov_107e24dr7().b[38][0]++,externalDragResolution||(cov_107e24dr7().b[38][1]++,externalResolution)))),end=(cov_107e24dr7().s[126]++,luxon.c9.now().toMillis());return cov_107e24dr7().s[127]++,(0,logger.MD)("TimelineProvider",`Drag resolution calculation took ${end-start} ms`),cov_107e24dr7().s[128]++,resData}),[externalDragResolution,externalResolution])),resources=(cov_107e24dr7().s[129]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[27]++,cov_107e24dr7().s[130]++,(0,utils_resources.hc)(externalResources,headerLabel))),[externalResources,headerLabel])),rowHeight=(cov_107e24dr7().s[131]++,(0,react.useMemo)((()=>{cov_107e24dr7().f[28]++,cov_107e24dr7().s[132]++,(0,logger.MD)("TimelineProvider","Calculating rowHeight...");const rowHeight=(cov_107e24dr7().s[133]++,cov_107e24dr7().b[39][0]++,externalRowHeight||(cov_107e24dr7().b[39][1]++,dimensions.eP));return cov_107e24dr7().s[134]++,rowHeight<dimensions.rQ?(cov_107e24dr7().b[40][0]++,dimensions.rQ):(cov_107e24dr7().b[40][1]++,rowHeight)}),[externalRowHeight])),resourcesContentHeight=(cov_107e24dr7().s[135]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[29]++,cov_107e24dr7().s[136]++,(0,logger.MD)("TimelineProvider","Calculating resources content height..."),cov_107e24dr7().s[137]++,rowHeight*resources.length)),[resources,rowHeight])),theme=(cov_107e24dr7().s[138]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[30]++,cov_107e24dr7().s[139]++,{color:"dark"===externalTheme?(cov_107e24dr7().b[41][0]++,"white"):(cov_107e24dr7().b[41][1]++,"black")})),[externalTheme])),summaryWidth=(cov_107e24dr7().s[140]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[31]++,cov_107e24dr7().s[141]++,columnWidth>120?(cov_107e24dr7().b[42][0]++,120):(cov_107e24dr7().b[42][1]++,columnWidth<60?(cov_107e24dr7().b[43][0]++,60):(cov_107e24dr7().b[43][1]++,columnWidth)))),[columnWidth]));cov_107e24dr7().s[142]++,(0,react.useEffect)((()=>{cov_107e24dr7().f[32]++,cov_107e24dr7().s[143]++,onErrors?(cov_107e24dr7().b[44][0]++,cov_107e24dr7().s[144]++,onErrors(validTasks.errors)):cov_107e24dr7().b[44][1]++}),[onErrors,validTasks]);const summary=(cov_107e24dr7().s[145]++,(0,react.useMemo)((()=>(cov_107e24dr7().f[33]++,cov_107e24dr7().s[146]++,externalSummary?(cov_107e24dr7().b[45][0]++,[{id:"0summary",label:"Summary"},...externalSummary]):(cov_107e24dr7().b[45][1]++,[]))),[externalSummary]));return cov_107e24dr7().s[147]++,react.createElement(TimelineContext.Provider,{value:{aboveTimeBlocks:aboveTimeBlocks,columnWidth:columnWidth,displayTasksLabel:displayTasksLabel,dragResolution:dragResolution,drawRange:drawRange,enableDrag:enableDrag,enableResize:enableResize,hideResources:hideResources,initialDateTime:initialDateTime,interval:interval,onErrors:onErrors,onTaskClick:onTaskClick,onTaskChange:onTaskChange,resolution:resolution,resolutionKey:externalResolution,resources:resources,resourcesContentHeight:resourcesContentHeight,rowHeight:rowHeight,setDrawRange:setDrawRange,tasks:tasks,theme:theme,timeBlocks:timeBlocks,timezone:(cov_107e24dr7().b[46][0]++,timezone||(cov_107e24dr7().b[46][1]++,"system")),visibleTimeBlocks:visibleTimeBlocks,blocksOffset:timeblocksOffset,localized:localized,dateLocale:dateLocale,onAreaSelect:onAreaSelect,toolTip:toolTip,customToolTip:customToolTip,enableTaskPattern:enableTaskPattern,enableLines:enableLines,validLine:validLine,allValidTasks:allValidTasks,externalRangeInMillis:range,onResourceClick:onResourceClick,summary:summary,showSummary:showSummary,summaryHeader:summaryHeader,summaryWidth:summaryWidth,customResources:customResources}},children)};cov_107e24dr7().s[148]++;const useTimelineContext=()=>{cov_107e24dr7().f[34]++;const context=(cov_107e24dr7().s[149]++,(0,react.useContext)(TimelineContext));if(cov_107e24dr7().s[150]++,void 0===context)throw cov_107e24dr7().b[47][0]++,cov_107e24dr7().s[151]++,new Error("useTimelineContext must be used within a TimelineProvider");return cov_107e24dr7().b[47][1]++,cov_107e24dr7().s[152]++,context};try{TimelineProvider.displayName="TimelineProvider",TimelineProvider.__docgenInfo={description:"",displayName:"TimelineProvider",props:{columnWidth:{defaultValue:null,description:"Custom column width (defaults to 60px)",name:"columnWidth",required:!1,type:{name:"number"}},displayTasksLabel:{defaultValue:{value:"false"},description:"Enables tasks label display",name:"displayTasksLabel",required:!1,type:{name:"boolean"}},dragResolution:{defaultValue:null,description:"Drag and drop resolution (if not passed, defaults to resolution)",name:"dragResolution",required:!1,type:{name:"enum",value:[{value:'"1min"'},{value:'"5min"'},{value:'"10min"'},{value:'"15min"'},{value:'"30min"'},{value:'"1hrs"'},{value:'"2hrs"'},{value:'"6hrs"'},{value:'"12hrs"'},{value:'"1day"'},{value:'"1week"'},{value:'"2weeks"'}]}},hideResources:{defaultValue:{value:"false"},description:"Flag to hide resource column (defaults to false)",name:"hideResources",required:!1,type:{name:"boolean"}},resolution:{defaultValue:null,description:"Resolution to display data in konva-timeline (defaults to 1min)",name:"resolution",required:!1,type:{name:"enum",value:[{value:'"1min"'},{value:'"5min"'},{value:'"10min"'},{value:'"15min"'},{value:'"30min"'},{value:'"1hrs"'},{value:'"2hrs"'},{value:'"6hrs"'},{value:'"12hrs"'},{value:'"1day"'},{value:'"1week"'},{value:'"2weeks"'}]}},rowHeight:{defaultValue:null,description:"Custom row height (defaults to 50px)",name:"rowHeight",required:!1,type:{name:"number"}},tasks:{defaultValue:null,description:"List of tasks to be displayed (defaults to [])",name:"tasks",required:!1,type:{name:"TaskData<TimeRange>[]"}},range:{defaultValue:null,description:"Time range to be displayed",name:"range",required:!0,type:{name:"TimeRange"}},resources:{defaultValue:null,description:"List of resources to be displayed",name:"resources",required:!0,type:{name:"Resource[]"}},debug:{defaultValue:{value:"false"},description:"Enables debug logging in browser console",name:"debug",required:!1,type:{name:"boolean"}},enableDrag:{defaultValue:{value:"true"},description:"Enables drag&drop operation on tasks",name:"enableDrag",required:!1,type:{name:"boolean"}},enableResize:{defaultValue:{value:"true"},description:"Enables resize operation on tasks",name:"enableResize",required:!1,type:{name:"boolean"}},headerLabel:{defaultValue:null,description:"Label to display in header column",name:"headerLabel",required:!1,type:{name:"string"}},initialDateTime:{defaultValue:null,description:"Initial date time to scroll to",name:"initialDateTime",required:!1,type:{name:"string | number"}},onErrors:{defaultValue:null,description:"Callback invoked when errors are thrown",name:"onErrors",required:!1,type:{name:"((errors: KonvaTimelineError[]) => void)"}},onTaskClick:{defaultValue:null,description:"Event handler for task click",name:"onTaskClick",required:!1,type:{name:"((task: TaskData<TimeRange>) => void)"}},onTaskChange:{defaultValue:null,description:"Event handler for task change event (drag and resize)",name:"onTaskChange",required:!1,type:{name:"((task: TaskData<TimeRange>, opts?: { tasksId: string[]; addTime: number; }) => void)"}},timezone:{defaultValue:null,description:"Timezone used for display (defaults to 'system')",name:"timezone",required:!1,type:{name:"string"}},theme:{defaultValue:null,description:"Theme color in use",name:"theme",required:!1,type:{name:"enum",value:[{value:'"dark"'},{value:'"light"'}]}},localized:{defaultValue:{value:'{\n    start: "Start",\n    end: "End",\n    duration: "Duration",\n    completed: "Completed",\n  }'},description:"ToolTips Labels",name:"localized",required:!1,type:{name:"Localized"}},dateLocale:{defaultValue:{value:"en"},description:"Language used for date format",name:"dateLocale",required:!1,type:{name:"string"}},onAreaSelect:{defaultValue:null,description:"Event handler for task add event",name:"onAreaSelect",required:!1,type:{name:"((task: AreaSelect) => void)"}},toolTip:{defaultValue:{value:"true"},description:"ToolTip display",name:"toolTip",required:!1,type:{name:"boolean"}},customToolTip:{defaultValue:null,description:"Callback that return a personalized tooltip( 200x100 is max possible size)",name:"customToolTip",required:!1,type:{name:"((taskData: CustomToolTipData) => Element)"}},enableTaskPattern:{defaultValue:{value:"true"},description:"Enables pattern for incomplete part of the task (default true)",name:"enableTaskPattern",required:!1,type:{name:"boolean"}},enableLines:{defaultValue:null,description:"Enables connection between tasks (if kLine is set in taskData)",name:"enableLines",required:!1,type:{name:"boolean"}},onResourceClick:{defaultValue:null,description:"Event handler for resource click",name:"onResourceClick",required:!1,type:{name:"((task: Resource) => void)"}},summary:{defaultValue:null,description:"Summary data",name:"summary",required:!1,type:{name:"{ id: string; label: string; }[]"}},showSummary:{defaultValue:null,description:"Enable summary",name:"showSummary",required:!1,type:{name:"boolean"}},summaryHeader:{defaultValue:null,description:"Header label to display in summary column, default is Summary",name:"summaryHeader",required:!1,type:{name:"string"}},customResources:{defaultValue:null,description:"Callback that return a personalized resources(this func return also the dimension of a single resourse)",name:"customResources",required:!1,type:{name:"((resourceData: CustomRes) => Element)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/timeline/TimelineContext.tsx#TimelineProvider"]={docgenInfo:TimelineProvider.__docgenInfo,name:"TimelineProvider",path:"src/timeline/TimelineContext.tsx#TimelineProvider"})}catch(__react_docgen_typescript_loader_error){}},"./src/utils/dimensions.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function cov_2q8nucg4m(){var path="/home/runner/work/konva-timeline/konva-timeline/src/utils/dimensions.ts",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"749d7066245c80cfcf0fd12cc8184e57f79c76f8"===coverage[path].hash||(coverage[path]={path:"/home/runner/work/konva-timeline/konva-timeline/src/utils/dimensions.ts",statementMap:{0:{start:{line:1,column:30},end:{line:1,column:31}},1:{start:{line:4,column:39},end:{line:4,column:41}},2:{start:{line:5,column:39},end:{line:5,column:66}},3:{start:{line:8,column:41},end:{line:8,column:43}},4:{start:{line:9,column:33},end:{line:9,column:53}},5:{start:{line:10,column:36},end:{line:10,column:37}}},fnMap:{},branchMap:{},s:{0:0,1:0,2:0,3:0,4:0,5:0},f:{},b:{},inputSourceMap:{version:3,names:["BASE_DIMENSION","DEFAULT_GRID_ROW_HEIGHT","MINIMUM_GRID_ROW_HEIGHT","DEFAULT_GRID_COLUMN_WIDTH","DEFAULT_TEXT_SIZE","DEFAULT_STROKE_WIDTH"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/utils/dimensions.ts"],sourcesContent:["export const BASE_DIMENSION = 8;\n\n// export const DEFAULT_GRID_ROW_HEIGHT = BASE_DIMENSION * 6;\nexport const DEFAULT_GRID_ROW_HEIGHT = 50;\nexport const MINIMUM_GRID_ROW_HEIGHT = DEFAULT_GRID_ROW_HEIGHT / 2;\n\n// export const DEFAULT_GRID_COLUMN_WIDTH = BASE_DIMENSION * 8;\nexport const DEFAULT_GRID_COLUMN_WIDTH = 60;\n\nexport const DEFAULT_TEXT_SIZE = BASE_DIMENSION * 1.5;\n\nexport const DEFAULT_STROKE_WIDTH = 1;\n"],mappings:"AAAA,OAAO,MAAMA,cAAc,GAAG,CAAC;;AAE/B;AACA,OAAO,MAAMC,uBAAuB,GAAG,EAAE;AACzC,OAAO,MAAMC,uBAAuB,GAAGD,uBAAuB,GAAG,CAAC;;AAElE;AACA,OAAO,MAAME,yBAAyB,GAAG,EAAE;AAE3C,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,GAAG,GAAG;AAErD,OAAO,MAAMK,oBAAoB,GAAG,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"749d7066245c80cfcf0fd12cc8184e57f79c76f8"});var actualCoverage=coverage[path];return cov_2q8nucg4m=function(){return actualCoverage},actualCoverage}__webpack_require__.d(__webpack_exports__,{cL:function(){return DEFAULT_TEXT_SIZE},eP:function(){return DEFAULT_GRID_ROW_HEIGHT},nT:function(){return DEFAULT_GRID_COLUMN_WIDTH},rQ:function(){return MINIMUM_GRID_ROW_HEIGHT}}),cov_2q8nucg4m();const BASE_DIMENSION=(cov_2q8nucg4m().s[0]++,8),DEFAULT_GRID_ROW_HEIGHT=(cov_2q8nucg4m().s[1]++,50),MINIMUM_GRID_ROW_HEIGHT=(cov_2q8nucg4m().s[2]++,DEFAULT_GRID_ROW_HEIGHT/2),DEFAULT_GRID_COLUMN_WIDTH=(cov_2q8nucg4m().s[3]++,60),DEFAULT_TEXT_SIZE=(cov_2q8nucg4m().s[4]++,1.5*BASE_DIMENSION);cov_2q8nucg4m().s[5]++},"./src/utils/logger.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function cov_1kiijbyup6(){var path="/home/runner/work/konva-timeline/konva-timeline/src/utils/logger.ts",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/utils/logger.ts",statementMap:{0:{start:{line:1,column:12},end:{line:1,column:39}},1:{start:{line:9,column:15},end:{line:23,column:1}},2:{start:{line:10,column:15},end:{line:10,column:49}},3:{start:{line:11,column:2},end:{line:22,column:3}},4:{start:{line:14,column:6},end:{line:14,column:25}},5:{start:{line:15,column:6},end:{line:15,column:13}},6:{start:{line:17,column:6},end:{line:17,column:26}},7:{start:{line:18,column:6},end:{line:18,column:13}},8:{start:{line:20,column:6},end:{line:20,column:25}},9:{start:{line:21,column:6},end:{line:21,column:13}},10:{start:{line:30,column:24},end:{line:35,column:1}},11:{start:{line:31,column:2},end:{line:33,column:3}},12:{start:{line:32,column:4},end:{line:32,column:11}},13:{start:{line:34,column:2},end:{line:34,column:38}},14:{start:{line:42,column:24},end:{line:42,column:83}},15:{start:{line:42,column:48},end:{line:42,column:83}},16:{start:{line:49,column:23},end:{line:49,column:81}},17:{start:{line:49,column:47},end:{line:49,column:81}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:9,column:15},end:{line:9,column:16}},loc:{start:{line:9,column:46},end:{line:23,column:1}},line:9},1:{name:"(anonymous_1)",decl:{start:{line:30,column:24},end:{line:30,column:25}},loc:{start:{line:30,column:48},end:{line:35,column:1}},line:30},2:{name:"(anonymous_2)",decl:{start:{line:42,column:24},end:{line:42,column:25}},loc:{start:{line:42,column:48},end:{line:42,column:83}},line:42},3:{name:"(anonymous_3)",decl:{start:{line:49,column:23},end:{line:49,column:24}},loc:{start:{line:49,column:47},end:{line:49,column:81}},line:49}},branchMap:{0:{loc:{start:{line:11,column:2},end:{line:22,column:3}},type:"switch",locations:[{start:{line:12,column:4},end:{line:15,column:13}},{start:{line:16,column:4},end:{line:18,column:13}},{start:{line:19,column:4},end:{line:21,column:13}}],line:11},1:{loc:{start:{line:31,column:2},end:{line:33,column:3}},type:"if",locations:[{start:{line:31,column:2},end:{line:33,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:31}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0},f:{0:0,1:0,2:0,3:0},b:{0:[0,0,0],1:[0,0]},inputSourceMap:{version:3,names:["TAG","logger","level","component","message","text","console","info","error","warn","logDebug","window","__MELFORE_KONVA_TIMELINE_DEBUG__","logError","logWarn"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/utils/logger.ts"],sourcesContent:['export type LogLevel = "debug" | "error" | "warn";\n\nconst TAG = "[@melfore/konva-timeline]";\n\n/**\n * Logs message for given level and component\n * @param level the level of the message to log (e.g. "error")\n * @param component the component subject of the log\n * @param message the message of the log\n */\nconst logger = (level: LogLevel, component: string, message: string) => {\n  const text = `${TAG} ${component} - ${message}`;\n\n  switch (level) {\n    case "debug":\n      // eslint-disable-next-line no-console\n      console.info(text);\n      return;\n    case "error":\n      console.error(text);\n      return;\n    case "warn":\n      console.warn(text);\n      return;\n  }\n};\n\n/**\n * Logs message for info level and component only if debug mode enabled\n * @param component the component subject of the log\n * @param message the message of the log\n */\nexport const logDebug = (component: string, message: string) => {\n  if (!window.__MELFORE_KONVA_TIMELINE_DEBUG__) {\n    return;\n  }\n\n  logger("debug", component, message);\n};\n\n/**\n * Logs message for error level and component\n * @param component the component subject of the log\n * @param message the message of the log\n */\nexport const logError = (component: string, message: string) => logger("error", component, message);\n\n/**\n * Logs message for warn level and component\n * @param component the component subject of the log\n * @param message the message of the log\n */\nexport const logWarn = (component: string, message: string) => logger("warn", component, message);\n'],mappings:"AAEA,MAAMA,GAAG,GAAG,2BAA2B;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGA,CAACC,KAAe,EAAEC,SAAiB,EAAEC,OAAe,KAAK;EACtE,MAAMC,IAAI,GAAG,GAAGL,GAAG,IAAIG,SAAS,MAAMC,OAAO,EAAE;EAE/C,QAAQF,KAAK;IACX,KAAK,OAAO;MACV;MACAI,OAAO,CAACC,IAAI,CAACF,IAAI,CAAC;MAClB;IACF,KAAK,OAAO;MACVC,OAAO,CAACE,KAAK,CAACH,IAAI,CAAC;MACnB;IACF,KAAK,MAAM;MACTC,OAAO,CAACG,IAAI,CAACJ,IAAI,CAAC;MAClB;EACJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,QAAQ,GAAGA,CAACP,SAAiB,EAAEC,OAAe,KAAK;EAC9D,IAAI,CAACO,MAAM,CAACC,gCAAgC,EAAE;IAC5C;EACF;EAEAX,MAAM,CAAC,OAAO,EAAEE,SAAS,EAAEC,OAAO,CAAC;AACrC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,QAAQ,GAAGA,CAACV,SAAiB,EAAEC,OAAe,KAAKH,MAAM,CAAC,OAAO,EAAEE,SAAS,EAAEC,OAAO,CAAC;;AAEnG;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMU,OAAO,GAAGA,CAACX,SAAiB,EAAEC,OAAe,KAAKH,MAAM,CAAC,MAAM,EAAEE,SAAS,EAAEC,OAAO,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a8c10d8235f6c44e14cf2426195c06b48ca46528"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"a8c10d8235f6c44e14cf2426195c06b48ca46528"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_1kiijbyup6=function(){return actualCoverage},actualCoverage}__webpack_require__.d(__webpack_exports__,{JE:function(){return logWarn},MD:function(){return logDebug},vV:function(){return logError}}),cov_1kiijbyup6();const TAG=(cov_1kiijbyup6().s[0]++,"[@melfore/konva-timeline]");cov_1kiijbyup6().s[1]++;const logger=(level,component,message)=>{cov_1kiijbyup6().f[0]++;const text=(cov_1kiijbyup6().s[2]++,`${TAG} ${component} - ${message}`);switch(cov_1kiijbyup6().s[3]++,level){case"debug":return cov_1kiijbyup6().b[0][0]++,cov_1kiijbyup6().s[4]++,console.info(text),void cov_1kiijbyup6().s[5]++;case"error":return cov_1kiijbyup6().b[0][1]++,cov_1kiijbyup6().s[6]++,console.error(text),void cov_1kiijbyup6().s[7]++;case"warn":return cov_1kiijbyup6().b[0][2]++,cov_1kiijbyup6().s[8]++,console.warn(text),void cov_1kiijbyup6().s[9]++}};cov_1kiijbyup6().s[10]++;const logDebug=(component,message)=>{if(cov_1kiijbyup6().f[1]++,cov_1kiijbyup6().s[11]++,!window.__MELFORE_KONVA_TIMELINE_DEBUG__)return cov_1kiijbyup6().b[1][0]++,void cov_1kiijbyup6().s[12]++;cov_1kiijbyup6().b[1][1]++,cov_1kiijbyup6().s[13]++,logger("debug",component,message)};cov_1kiijbyup6().s[14]++;const logError=(component,message)=>(cov_1kiijbyup6().f[2]++,cov_1kiijbyup6().s[15]++,logger("error",component,message));cov_1kiijbyup6().s[16]++;const logWarn=(component,message)=>(cov_1kiijbyup6().f[3]++,cov_1kiijbyup6().s[17]++,logger("warn",component,message))},"./src/utils/stories/utils.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function cov_2gjg3f741d(){var path="/home/runner/work/konva-timeline/konva-timeline/src/utils/stories/utils.ts",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/utils/stories/utils.ts",statementMap:{0:{start:{line:1,column:36},end:{line:1,column:50}},1:{start:{line:2,column:37},end:{line:2,column:73}},2:{start:{line:3,column:23},end:{line:9,column:1}},3:{start:{line:4,column:14},end:{line:4,column:16}},4:{start:{line:5,column:2},end:{line:7,column:3}},5:{start:{line:6,column:4},end:{line:6,column:62}},6:{start:{line:8,column:2},end:{line:8,column:15}},7:{start:{line:10,column:26},end:{line:20,column:1}},8:{start:{line:11,column:20},end:{line:11,column:22}},9:{start:{line:12,column:2},end:{line:18,column:3}},10:{start:{line:12,column:15},end:{line:12,column:16}},11:{start:{line:13,column:4},end:{line:17,column:7}},12:{start:{line:19,column:2},end:{line:19,column:19}},13:{start:{line:21,column:22},end:{line:42,column:1}},14:{start:{line:22,column:16},end:{line:22,column:18}},15:{start:{line:23,column:2},end:{line:40,column:3}},16:{start:{line:23,column:15},end:{line:23,column:16}},17:{start:{line:24,column:23},end:{line:24,column:74}},18:{start:{line:25,column:32},end:{line:25,column:92}},19:{start:{line:25,column:61},end:{line:25,column:91}},20:{start:{line:26,column:16},end:{line:26,column:47}},21:{start:{line:27,column:4},end:{line:29,column:5}},22:{start:{line:28,column:6},end:{line:28,column:151}},23:{start:{line:30,column:16},end:{line:30,column:90}},24:{start:{line:31,column:4},end:{line:39,column:7}},25:{start:{line:41,column:2},end:{line:41,column:15}},26:{start:{line:43,column:26},end:{line:50,column:1}},27:{start:{line:44,column:16},end:{line:44,column:47}},28:{start:{line:45,column:14},end:{line:45,column:103}},29:{start:{line:46,column:2},end:{line:49,column:4}},30:{start:{line:51,column:33},end:{line:65,column:1}},31:{start:{line:57,column:20},end:{line:57,column:53}},32:{start:{line:58,column:16},end:{line:58,column:87}},33:{start:{line:59,column:16},end:{line:59,column:50}},34:{start:{line:60,column:2},end:{line:64,column:4}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:3,column:23},end:{line:3,column:24}},loc:{start:{line:3,column:29},end:{line:9,column:1}},line:3},1:{name:"(anonymous_1)",decl:{start:{line:10,column:26},end:{line:10,column:27}},loc:{start:{line:10,column:35},end:{line:20,column:1}},line:10},2:{name:"(anonymous_2)",decl:{start:{line:21,column:22},end:{line:21,column:23}},loc:{start:{line:21,column:71},end:{line:42,column:1}},line:21},3:{name:"(anonymous_3)",decl:{start:{line:25,column:53},end:{line:25,column:54}},loc:{start:{line:25,column:61},end:{line:25,column:91}},line:25},4:{name:"(anonymous_4)",decl:{start:{line:43,column:26},end:{line:43,column:27}},loc:{start:{line:43,column:44},end:{line:50,column:1}},line:43},5:{name:"(anonymous_5)",decl:{start:{line:51,column:33},end:{line:51,column:34}},loc:{start:{line:56,column:6},end:{line:65,column:1}},line:56}},branchMap:{0:{loc:{start:{line:27,column:4},end:{line:29,column:5}},type:"if",locations:[{start:{line:27,column:4},end:{line:29,column:5}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:27}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0},f:{0:0,1:0,2:0,3:0,4:0,5:0},b:{0:[0,0]},inputSourceMap:{version:3,names:["HOUR_IN_MILLISECONDS","TIME_RANGE_START_DATE","Date","getRandomColor","color","length","Math","floor","random","toString","generateResources","count","resources","i","push","id","label","generateTasks","avgDurationInMinutes","resourcesCount","tasks","resourceId","lastTaskForResource","reverse","find","task","start","valueOf","time","end","generateTimeRange","durationInDays","setDate","getDate","generateStoryData","averageTaskDurationInMinutes","tasksCount","timeRangeInDays","range"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/utils/stories/utils.ts"],sourcesContent:['import { Resource } from "../../resources/utils/resources";\nimport { TaskData } from "../../tasks/utils/tasks";\nimport { InternalTimeRange } from "../time";\n\ninterface StoryDataInput {\n  resourcesCount: number;\n  tasksCount: number;\n  timeRangeInDays: number;\n  averageTaskDurationInMinutes: number;\n}\n\nexport interface StoryData {\n  resources: Resource[];\n  tasks: TaskData[];\n  range: InternalTimeRange;\n}\n\nexport const HOUR_IN_MILLISECONDS = 1000 * 60 * 60;\n\nexport const TIME_RANGE_START_DATE = new Date("2019-12-31T23:00:00.000Z");\n\nconst getRandomColor = () => {\n  let color = "";\n  while (color.length !== 6) {\n    color = Math.floor(Math.random() * 16777215).toString(16);\n  }\n\n  return color;\n};\n\nconst generateResources = (count: number): Resource[] => {\n  const resources: Resource[] = [];\n\n  for (let i = 1; i <= count; i++) {\n    resources.push({\n      id: `${i}`,\n      label: `Resource #${i}`,\n      color: `#${getRandomColor()}`,\n    });\n  }\n\n  return resources;\n};\n\nconst generateTasks = (\n  count: number,\n  avgDurationInMinutes: number,\n  resourcesCount: number\n): TaskData<InternalTimeRange>[] => {\n  const tasks: TaskData<InternalTimeRange>[] = [];\n\n  for (let i = 1; i <= count; i++) {\n    const resourceId = `${Math.floor(Math.random() * resourcesCount) + 1}`;\n    const lastTaskForResource = tasks.reverse().find((task) => task.resourceId === resourceId);\n\n    let start = TIME_RANGE_START_DATE.valueOf();\n    if (lastTaskForResource) {\n      start =\n        lastTaskForResource.time.end +\n        Math.floor(avgDurationInMinutes / 2) +\n        Math.floor(Math.random() * (avgDurationInMinutes * 2)) * 60 * 1000;\n    }\n\n    const end = start + Math.floor(Math.random() * (avgDurationInMinutes * 2)) * 60 * 1000;\n\n    tasks.push({\n      id: `${i}`,\n      resourceId,\n      label: `Task #${i}`,\n      time: { start, end },\n    });\n  }\n\n  return tasks;\n};\n\nconst generateTimeRange = (durationInDays: number): InternalTimeRange => {\n  const start = TIME_RANGE_START_DATE.valueOf();\n  const end = TIME_RANGE_START_DATE.setDate(TIME_RANGE_START_DATE.getDate() + durationInDays).valueOf();\n\n  return { start, end };\n};\n\nexport const generateStoryData = ({\n  averageTaskDurationInMinutes,\n  resourcesCount,\n  tasksCount,\n  timeRangeInDays,\n}: StoryDataInput): StoryData => {\n  const resources = generateResources(resourcesCount);\n  const tasks = generateTasks(tasksCount, averageTaskDurationInMinutes, resourcesCount);\n  const range = generateTimeRange(timeRangeInDays);\n\n  return { resources, tasks, range };\n};\n'],mappings:"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",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f52f6fc65da42a1343c428151d3ea346343ff0c2"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"f52f6fc65da42a1343c428151d3ea346343ff0c2"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_2gjg3f741d=function(){return actualCoverage},actualCoverage}__webpack_require__.d(__webpack_exports__,{Xk:function(){return generateStoryData}}),cov_2gjg3f741d();cov_2gjg3f741d().s[0]++;const TIME_RANGE_START_DATE=(cov_2gjg3f741d().s[1]++,new Date("2019-12-31T23:00:00.000Z"));cov_2gjg3f741d().s[2]++;const getRandomColor=()=>{cov_2gjg3f741d().f[0]++;let color=(cov_2gjg3f741d().s[3]++,"");for(cov_2gjg3f741d().s[4]++;6!==color.length;)cov_2gjg3f741d().s[5]++,color=Math.floor(16777215*Math.random()).toString(16);return cov_2gjg3f741d().s[6]++,color};cov_2gjg3f741d().s[7]++;cov_2gjg3f741d().s[13]++;cov_2gjg3f741d().s[26]++;cov_2gjg3f741d().s[30]++;const generateStoryData=({averageTaskDurationInMinutes:averageTaskDurationInMinutes,resourcesCount:resourcesCount,tasksCount:tasksCount,timeRangeInDays:timeRangeInDays})=>{cov_2gjg3f741d().f[5]++;const resources=(cov_2gjg3f741d().s[31]++,(count=>{cov_2gjg3f741d().f[1]++;const resources=(cov_2gjg3f741d().s[8]++,[]);cov_2gjg3f741d().s[9]++;for(let i=(cov_2gjg3f741d().s[10]++,1);i<=count;i++)cov_2gjg3f741d().s[11]++,resources.push({id:`${i}`,label:`Resource #${i}`,color:`#${getRandomColor()}`});return cov_2gjg3f741d().s[12]++,resources})(resourcesCount)),tasks=(cov_2gjg3f741d().s[32]++,((count,avgDurationInMinutes,resourcesCount)=>{cov_2gjg3f741d().f[2]++;const tasks=(cov_2gjg3f741d().s[14]++,[]);cov_2gjg3f741d().s[15]++;for(let i=(cov_2gjg3f741d().s[16]++,1);i<=count;i++){const resourceId=(cov_2gjg3f741d().s[17]++,`${Math.floor(Math.random()*resourcesCount)+1}`),lastTaskForResource=(cov_2gjg3f741d().s[18]++,tasks.reverse().find((task=>(cov_2gjg3f741d().f[3]++,cov_2gjg3f741d().s[19]++,task.resourceId===resourceId))));let start=(cov_2gjg3f741d().s[20]++,TIME_RANGE_START_DATE.valueOf());cov_2gjg3f741d().s[21]++,lastTaskForResource?(cov_2gjg3f741d().b[0][0]++,cov_2gjg3f741d().s[22]++,start=lastTaskForResource.time.end+Math.floor(avgDurationInMinutes/2)+60*Math.floor(Math.random()*(2*avgDurationInMinutes))*1e3):cov_2gjg3f741d().b[0][1]++;const end=(cov_2gjg3f741d().s[23]++,start+60*Math.floor(Math.random()*(2*avgDurationInMinutes))*1e3);cov_2gjg3f741d().s[24]++,tasks.push({id:`${i}`,resourceId:resourceId,label:`Task #${i}`,time:{start:start,end:end}})}return cov_2gjg3f741d().s[25]++,tasks})(tasksCount,averageTaskDurationInMinutes,resourcesCount)),range=(cov_2gjg3f741d().s[33]++,(durationInDays=>{cov_2gjg3f741d().f[4]++;const start=(cov_2gjg3f741d().s[27]++,TIME_RANGE_START_DATE.valueOf()),end=(cov_2gjg3f741d().s[28]++,TIME_RANGE_START_DATE.setDate(TIME_RANGE_START_DATE.getDate()+durationInDays).valueOf());return cov_2gjg3f741d().s[29]++,{start:start,end:end}})(timeRangeInDays));return cov_2gjg3f741d().s[34]++,{resources:resources,tasks:tasks,range:range}}},"./src/utils/time-resolution.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Cp:function(){return getYear},L3:function(){return daysInMonth},aS:function(){return getStartMonthsDay},bc:function(){return displayAboveInterval},gd:function(){return displayInterval},pO:function(){return getResolutionData},tj:function(){return getMonth}});var _dimensions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/utils/dimensions.ts");function cov_2g3dhmrjds(){var path="/home/runner/work/konva-timeline/konva-timeline/src/utils/time-resolution.ts",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/utils/time-resolution.ts",statementMap:{0:{start:{line:2,column:25},end:{line:87,column:1}},1:{start:{line:88,column:27},end:{line:88,column:130}},2:{start:{line:95,column:36},end:{line:115,column:1}},3:{start:{line:98,column:6},end:{line:98,column:14}},4:{start:{line:99,column:2},end:{line:101,column:3}},5:{start:{line:100,column:4},end:{line:100,column:15}},6:{start:{line:102,column:2},end:{line:114,column:3}},7:{start:{line:105,column:6},end:{line:105,column:64}},8:{start:{line:107,column:6},end:{line:107,column:54}},9:{start:{line:109,column:6},end:{line:109,column:91}},10:{start:{line:111,column:6},end:{line:111,column:59}},11:{start:{line:113,column:6},end:{line:113,column:19}},12:{start:{line:116,column:24},end:{line:124,column:1}},13:{start:{line:119,column:6},end:{line:119,column:14}},14:{start:{line:120,column:2},end:{line:122,column:3}},15:{start:{line:121,column:4},end:{line:121,column:15}},16:{start:{line:123,column:2},end:{line:123,column:29}},17:{start:{line:125,column:23},end:{line:133,column:1}},18:{start:{line:128,column:6},end:{line:128,column:14}},19:{start:{line:129,column:2},end:{line:131,column:3}},20:{start:{line:130,column:4},end:{line:130,column:15}},21:{start:{line:132,column:2},end:{line:132,column:32}},22:{start:{line:134,column:33},end:{line:139,column:1}},23:{start:{line:135,column:2},end:{line:137,column:3}},24:{start:{line:136,column:4},end:{line:136,column:15}},25:{start:{line:138,column:2},end:{line:138,column:29}},26:{start:{line:140,column:27},end:{line:142,column:1}},27:{start:{line:141,column:2},end:{line:141,column:44}},28:{start:{line:149,column:31},end:{line:170,column:1}},29:{start:{line:152,column:6},end:{line:152,column:14}},30:{start:{line:153,column:2},end:{line:155,column:3}},31:{start:{line:154,column:4},end:{line:154,column:15}},32:{start:{line:156,column:2},end:{line:169,column:3}},33:{start:{line:158,column:6},end:{line:158,column:52}},34:{start:{line:160,column:6},end:{line:160,column:55}},35:{start:{line:162,column:6},end:{line:162,column:56}},36:{start:{line:164,column:6},end:{line:164,column:60}},37:{start:{line:166,column:6},end:{line:166,column:58}},38:{start:{line:168,column:6},end:{line:168,column:19}},39:{start:{line:176,column:33},end:{line:176,column:61}},40:{start:{line:176,column:40},end:{line:176,column:61}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:95,column:36},end:{line:95,column:37}},loc:{start:{line:95,column:64},end:{line:115,column:1}},line:95},1:{name:"(anonymous_1)",decl:{start:{line:116,column:24},end:{line:116,column:25}},loc:{start:{line:116,column:36},end:{line:124,column:1}},line:116},2:{name:"(anonymous_2)",decl:{start:{line:125,column:23},end:{line:125,column:24}},loc:{start:{line:125,column:35},end:{line:133,column:1}},line:125},3:{name:"(anonymous_3)",decl:{start:{line:134,column:33},end:{line:134,column:34}},loc:{start:{line:134,column:42},end:{line:139,column:1}},line:134},4:{name:"(anonymous_4)",decl:{start:{line:140,column:27},end:{line:140,column:28}},loc:{start:{line:140,column:44},end:{line:142,column:1}},line:140},5:{name:"(anonymous_5)",decl:{start:{line:149,column:31},end:{line:149,column:32}},loc:{start:{line:149,column:59},end:{line:170,column:1}},line:149},6:{name:"(anonymous_6)",decl:{start:{line:176,column:33},end:{line:176,column:34}},loc:{start:{line:176,column:40},end:{line:176,column:61}},line:176}},branchMap:{0:{loc:{start:{line:99,column:2},end:{line:101,column:3}},type:"if",locations:[{start:{line:99,column:2},end:{line:101,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:99},1:{loc:{start:{line:102,column:2},end:{line:114,column:3}},type:"switch",locations:[{start:{line:103,column:4},end:{line:103,column:18}},{start:{line:104,column:4},end:{line:105,column:64}},{start:{line:106,column:4},end:{line:107,column:54}},{start:{line:108,column:4},end:{line:109,column:91}},{start:{line:110,column:4},end:{line:111,column:59}},{start:{line:112,column:4},end:{line:113,column:19}}],line:102},2:{loc:{start:{line:120,column:2},end:{line:122,column:3}},type:"if",locations:[{start:{line:120,column:2},end:{line:122,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:120},3:{loc:{start:{line:129,column:2},end:{line:131,column:3}},type:"if",locations:[{start:{line:129,column:2},end:{line:131,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:129},4:{loc:{start:{line:135,column:2},end:{line:137,column:3}},type:"if",locations:[{start:{line:135,column:2},end:{line:137,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:135},5:{loc:{start:{line:153,column:2},end:{line:155,column:3}},type:"if",locations:[{start:{line:153,column:2},end:{line:155,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:153},6:{loc:{start:{line:156,column:2},end:{line:169,column:3}},type:"switch",locations:[{start:{line:157,column:4},end:{line:158,column:52}},{start:{line:159,column:4},end:{line:160,column:55}},{start:{line:161,column:4},end:{line:162,column:56}},{start:{line:163,column:4},end:{line:164,column:60}},{start:{line:165,column:4},end:{line:166,column:58}},{start:{line:167,column:4},end:{line:168,column:19}}],line:156}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0},b:{0:[0,0],1:[0,0,0,0,0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0,0,0,0,0]},inputSourceMap:{version:3,names:["DEFAULT_GRID_COLUMN_WIDTH","RESOLUTIONS_DATA","columnSize","label","sizeInUnits","unit","unitAbove","RESOLUTIONS","displayAboveInterval","interval","locale","start","setLocale","toFormat","getMonth","getYear","getStartMonthsDay","daysInMonth","month","year","Date","getDate","displayInterval","getResolutionData","key"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/utils/time-resolution.ts"],sourcesContent:['import { DateTime, Interval } from "luxon";\n\nimport { DEFAULT_GRID_COLUMN_WIDTH } from "./dimensions";\n\nexport type Scale = "minute" | "hour" | "day" | "week" | "month" | "year";\n\nexport type Resolution =\n  | "1min"\n  | "5min"\n  | "10min"\n  | "15min"\n  | "30min"\n  | "1hrs"\n  | "2hrs"\n  | "6hrs"\n  | "12hrs"\n  | "1day"\n  | "1week"\n  | "2weeks";\n\nexport type ResolutionData = {\n  columnSize: number;\n  label: string;\n  sizeInUnits: number;\n  unit: Scale;\n  unitAbove: Scale;\n};\n\ntype ResolutionsData = {\n  [key in Resolution]: ResolutionData;\n};\n\nconst RESOLUTIONS_DATA: ResolutionsData = {\n  "1min": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH / 2,\n    label: "1 Minute",\n    sizeInUnits: 1,\n    unit: "minute",\n    unitAbove: "hour",\n  },\n  "5min": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH / 2,\n    label: "5 Minutes",\n    sizeInUnits: 5,\n    unit: "minute",\n    unitAbove: "hour",\n  },\n  "10min": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH / 2,\n    label: "10 Minutes",\n    sizeInUnits: 10,\n    unit: "minute",\n    unitAbove: "hour",\n  },\n  "15min": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH,\n    label: "15 Minutes",\n    sizeInUnits: 15,\n    unit: "minute",\n    unitAbove: "hour",\n  },\n  "30min": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH,\n    label: "30 Minutes",\n    sizeInUnits: 30,\n    unit: "minute",\n    unitAbove: "hour",\n  },\n  "1hrs": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH,\n    label: "1 Hour",\n    sizeInUnits: 1,\n    unit: "hour",\n    unitAbove: "day",\n  },\n  "2hrs": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH,\n    label: "2 Hours",\n    sizeInUnits: 2,\n    unit: "hour",\n    unitAbove: "day",\n  },\n  "6hrs": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH * 2,\n    label: "1/4 of Day",\n    sizeInUnits: 6,\n    unit: "hour",\n    unitAbove: "day",\n  },\n  "12hrs": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH * 3,\n    label: "1/2 of Day",\n    sizeInUnits: 12,\n    unit: "hour",\n    unitAbove: "day",\n  },\n  "1day": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH * 3,\n    label: "1 Day",\n    sizeInUnits: 1,\n    unit: "day",\n    unitAbove: "week",\n  },\n  "1week": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH * 10,\n    label: "1 Week",\n    sizeInUnits: 1,\n    unit: "week",\n    unitAbove: "month",\n  },\n  "2weeks": {\n    columnSize: DEFAULT_GRID_COLUMN_WIDTH * 10,\n    label: "2 Weeks",\n    sizeInUnits: 2,\n    unit: "week",\n    unitAbove: "month",\n  },\n};\n\nexport const RESOLUTIONS: Resolution[] = [\n  "1min",\n  "5min",\n  "10min",\n  "15min",\n  "30min",\n  "1hrs",\n  "2hrs",\n  "6hrs",\n  "12hrs",\n  "1day",\n  "1week",\n  "2weeks",\n];\n\n/**\n * Util to display an interval in a human readable format\n * @param interval the interval to display\n * @param unit the unit in which to display the interval\n */\nexport const displayAboveInterval = (interval: Interval, unit: Scale, locale: string): string => {\n  const { start } = interval;\n  if (!start) {\n    return "-";\n  }\n  switch (unit) {\n    case "minute":\n    case "hour":\n      return start.setLocale(locale).toFormat("dd/MM/yy HH:mm");\n    case "day":\n      return start.setLocale(locale).toFormat("DDDD");\n    case "week":\n      return `${start.setLocale(locale).toFormat("MMMM yyyy")} CW ${start.toFormat("WW")}`;\n    case "month":\n      return start.setLocale(locale).toFormat("MMMM yyyy");\n    default:\n      return "N/A";\n  }\n};\n\nexport const getMonth = (interval: Interval): string => {\n  const { start } = interval;\n  if (!start) {\n    return "-";\n  }\n\n  return start.toFormat("M");\n};\nexport const getYear = (interval: Interval): string => {\n  const { start } = interval;\n  if (!start) {\n    return "-";\n  }\n\n  return start.toFormat("yyyy");\n};\n\nexport const getStartMonthsDay = (start: DateTime): string => {\n  if (!start) {\n    return "-";\n  }\n\n  return start.toFormat("d");\n};\n\nexport const daysInMonth = (month: number, year: number) => {\n  return new Date(year, month, 0).getDate();\n};\n\n/**\n * Util to display an interval in a human readable format\n * @param interval the interval to display\n * @param unit the unit in which to display the interval\n */\nexport const displayInterval = (interval: Interval, unit: Scale, locale: string): string => {\n  const { start } = interval;\n  if (!start) {\n    return "-";\n  }\n\n  switch (unit) {\n    case "minute":\n      return start.setLocale(locale).toFormat("mm");\n    case "hour":\n      return start.setLocale(locale).toFormat("HH:mm");\n    case "day":\n      return start.setLocale(locale).toFormat("ccc dd");\n    case "week":\n      return `CW ${start.setLocale(locale).toFormat("WW")}`;\n    case "month":\n      return start.setLocale(locale).toFormat("MMM yyyy");\n    default:\n      return "N/A";\n  }\n};\n\n/**\n * Gets the resolution data for the given key\n * @param key key of the resolution to get\n */\nexport const getResolutionData = (key: Resolution): ResolutionData => RESOLUTIONS_DATA[key];\n'],mappings:"AAEA,SAASA,yBAAyB,QAAQ,cAAc;AA8BxD,MAAMC,gBAAiC,GAAG;EACxC,MAAM,EAAE;IACNC,UAAU,EAAEF,yBAAyB,GAAG,CAAC;IACzCG,KAAK,EAAE,UAAU;IACjBC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE;EACb,CAAC;EACD,MAAM,EAAE;IACNJ,UAAU,EAAEF,yBAAyB,GAAG,CAAC;IACzCG,KAAK,EAAE,WAAW;IAClBC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE;EACb,CAAC;EACD,OAAO,EAAE;IACPJ,UAAU,EAAEF,yBAAyB,GAAG,CAAC;IACzCG,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE;EACb,CAAC;EACD,OAAO,EAAE;IACPJ,UAAU,EAAEF,yBAAyB;IACrCG,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE;EACb,CAAC;EACD,OAAO,EAAE;IACPJ,UAAU,EAAEF,yBAAyB;IACrCG,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE;EACb,CAAC;EACD,MAAM,EAAE;IACNJ,UAAU,EAAEF,yBAAyB;IACrCG,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE;EACb,CAAC;EACD,MAAM,EAAE;IACNJ,UAAU,EAAEF,yBAAyB;IACrCG,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE;EACb,CAAC;EACD,MAAM,EAAE;IACNJ,UAAU,EAAEF,yBAAyB,GAAG,CAAC;IACzCG,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE;EACb,CAAC;EACD,OAAO,EAAE;IACPJ,UAAU,EAAEF,yBAAyB,GAAG,CAAC;IACzCG,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE;EACb,CAAC;EACD,MAAM,EAAE;IACNJ,UAAU,EAAEF,yBAAyB,GAAG,CAAC;IACzCG,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE;EACb,CAAC;EACD,OAAO,EAAE;IACPJ,UAAU,EAAEF,yBAAyB,GAAG,EAAE;IAC1CG,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE;EACb,CAAC;EACD,QAAQ,EAAE;IACRJ,UAAU,EAAEF,yBAAyB,GAAG,EAAE;IAC1CG,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE;EACb;AACF,CAAC;AAED,OAAO,MAAMC,WAAyB,GAAG,CACvC,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM,EACN,OAAO,EACP,QAAQ,CACT;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,QAAkB,EAAEJ,IAAW,EAAEK,MAAc,KAAa;EAC/F,MAAM;IAAEC;EAAM,CAAC,GAAGF,QAAQ;EAC1B,IAAI,CAACE,KAAK,EAAE;IACV,OAAO,GAAG;EACZ;EACA,QAAQN,IAAI;IACV,KAAK,QAAQ;IACb,KAAK,MAAM;MACT,OAAOM,KAAK,CAACC,SAAS,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,gBAAgB,CAAC;IAC3D,KAAK,KAAK;MACR,OAAOF,KAAK,CAACC,SAAS,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,MAAM,CAAC;IACjD,KAAK,MAAM;MACT,OAAO,GAAGF,KAAK,CAACC,SAAS,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,WAAW,CAAC,OAAOF,KAAK,CAACE,QAAQ,CAAC,IAAI,CAAC,EAAE;IACtF,KAAK,OAAO;MACV,OAAOF,KAAK,CAACC,SAAS,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,WAAW,CAAC;IACtD;MACE,OAAO,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIL,QAAkB,IAAa;EACtD,MAAM;IAAEE;EAAM,CAAC,GAAGF,QAAQ;EAC1B,IAAI,CAACE,KAAK,EAAE;IACV,OAAO,GAAG;EACZ;EAEA,OAAOA,KAAK,CAACE,QAAQ,CAAC,GAAG,CAAC;AAC5B,CAAC;AACD,OAAO,MAAME,OAAO,GAAIN,QAAkB,IAAa;EACrD,MAAM;IAAEE;EAAM,CAAC,GAAGF,QAAQ;EAC1B,IAAI,CAACE,KAAK,EAAE;IACV,OAAO,GAAG;EACZ;EAEA,OAAOA,KAAK,CAACE,QAAQ,CAAC,MAAM,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAIL,KAAe,IAAa;EAC5D,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,GAAG;EACZ;EAEA,OAAOA,KAAK,CAACE,QAAQ,CAAC,GAAG,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGA,CAACC,KAAa,EAAEC,IAAY,KAAK;EAC1D,OAAO,IAAIC,IAAI,CAACD,IAAI,EAAED,KAAK,EAAE,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAACb,QAAkB,EAAEJ,IAAW,EAAEK,MAAc,KAAa;EAC1F,MAAM;IAAEC;EAAM,CAAC,GAAGF,QAAQ;EAC1B,IAAI,CAACE,KAAK,EAAE;IACV,OAAO,GAAG;EACZ;EAEA,QAAQN,IAAI;IACV,KAAK,QAAQ;MACX,OAAOM,KAAK,CAACC,SAAS,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,IAAI,CAAC;IAC/C,KAAK,MAAM;MACT,OAAOF,KAAK,CAACC,SAAS,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,OAAO,CAAC;IAClD,KAAK,KAAK;MACR,OAAOF,KAAK,CAACC,SAAS,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,QAAQ,CAAC;IACnD,KAAK,MAAM;MACT,OAAO,MAAMF,KAAK,CAACC,SAAS,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,IAAI,CAAC,EAAE;IACvD,KAAK,OAAO;MACV,OAAOF,KAAK,CAACC,SAAS,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,UAAU,CAAC;IACrD;MACE,OAAO,KAAK;EAChB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMU,iBAAiB,GAAIC,GAAe,IAAqBvB,gBAAgB,CAACuB,GAAG,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"61de494d07f6c0d9a443fed9c8fe53933bdefc57"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"61de494d07f6c0d9a443fed9c8fe53933bdefc57"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_2g3dhmrjds=function(){return actualCoverage},actualCoverage}cov_2g3dhmrjds();const RESOLUTIONS_DATA=(cov_2g3dhmrjds().s[0]++,{"1min":{columnSize:_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT/2,label:"1 Minute",sizeInUnits:1,unit:"minute",unitAbove:"hour"},"5min":{columnSize:_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT/2,label:"5 Minutes",sizeInUnits:5,unit:"minute",unitAbove:"hour"},"10min":{columnSize:_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT/2,label:"10 Minutes",sizeInUnits:10,unit:"minute",unitAbove:"hour"},"15min":{columnSize:_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT,label:"15 Minutes",sizeInUnits:15,unit:"minute",unitAbove:"hour"},"30min":{columnSize:_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT,label:"30 Minutes",sizeInUnits:30,unit:"minute",unitAbove:"hour"},"1hrs":{columnSize:_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT,label:"1 Hour",sizeInUnits:1,unit:"hour",unitAbove:"day"},"2hrs":{columnSize:_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT,label:"2 Hours",sizeInUnits:2,unit:"hour",unitAbove:"day"},"6hrs":{columnSize:2*_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT,label:"1/4 of Day",sizeInUnits:6,unit:"hour",unitAbove:"day"},"12hrs":{columnSize:3*_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT,label:"1/2 of Day",sizeInUnits:12,unit:"hour",unitAbove:"day"},"1day":{columnSize:3*_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT,label:"1 Day",sizeInUnits:1,unit:"day",unitAbove:"week"},"1week":{columnSize:10*_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT,label:"1 Week",sizeInUnits:1,unit:"week",unitAbove:"month"},"2weeks":{columnSize:10*_dimensions__WEBPACK_IMPORTED_MODULE_0__.nT,label:"2 Weeks",sizeInUnits:2,unit:"week",unitAbove:"month"}});cov_2g3dhmrjds().s[1]++;cov_2g3dhmrjds().s[2]++;const displayAboveInterval=(interval,unit,locale)=>{cov_2g3dhmrjds().f[0]++;const{start:start}=(cov_2g3dhmrjds().s[3]++,interval);if(cov_2g3dhmrjds().s[4]++,!start)return cov_2g3dhmrjds().b[0][0]++,cov_2g3dhmrjds().s[5]++,"-";switch(cov_2g3dhmrjds().b[0][1]++,cov_2g3dhmrjds().s[6]++,unit){case"minute":cov_2g3dhmrjds().b[1][0]++;case"hour":return cov_2g3dhmrjds().b[1][1]++,cov_2g3dhmrjds().s[7]++,start.setLocale(locale).toFormat("dd/MM/yy HH:mm");case"day":return cov_2g3dhmrjds().b[1][2]++,cov_2g3dhmrjds().s[8]++,start.setLocale(locale).toFormat("DDDD");case"week":return cov_2g3dhmrjds().b[1][3]++,cov_2g3dhmrjds().s[9]++,`${start.setLocale(locale).toFormat("MMMM yyyy")} CW ${start.toFormat("WW")}`;case"month":return cov_2g3dhmrjds().b[1][4]++,cov_2g3dhmrjds().s[10]++,start.setLocale(locale).toFormat("MMMM yyyy");default:return cov_2g3dhmrjds().b[1][5]++,cov_2g3dhmrjds().s[11]++,"N/A"}};cov_2g3dhmrjds().s[12]++;const getMonth=interval=>{cov_2g3dhmrjds().f[1]++;const{start:start}=(cov_2g3dhmrjds().s[13]++,interval);return cov_2g3dhmrjds().s[14]++,start?(cov_2g3dhmrjds().b[2][1]++,cov_2g3dhmrjds().s[16]++,start.toFormat("M")):(cov_2g3dhmrjds().b[2][0]++,cov_2g3dhmrjds().s[15]++,"-")};cov_2g3dhmrjds().s[17]++;const getYear=interval=>{cov_2g3dhmrjds().f[2]++;const{start:start}=(cov_2g3dhmrjds().s[18]++,interval);return cov_2g3dhmrjds().s[19]++,start?(cov_2g3dhmrjds().b[3][1]++,cov_2g3dhmrjds().s[21]++,start.toFormat("yyyy")):(cov_2g3dhmrjds().b[3][0]++,cov_2g3dhmrjds().s[20]++,"-")};cov_2g3dhmrjds().s[22]++;const getStartMonthsDay=start=>(cov_2g3dhmrjds().f[3]++,cov_2g3dhmrjds().s[23]++,start?(cov_2g3dhmrjds().b[4][1]++,cov_2g3dhmrjds().s[25]++,start.toFormat("d")):(cov_2g3dhmrjds().b[4][0]++,cov_2g3dhmrjds().s[24]++,"-"));cov_2g3dhmrjds().s[26]++;const daysInMonth=(month,year)=>(cov_2g3dhmrjds().f[4]++,cov_2g3dhmrjds().s[27]++,new Date(year,month,0).getDate());cov_2g3dhmrjds().s[28]++;const displayInterval=(interval,unit,locale)=>{cov_2g3dhmrjds().f[5]++;const{start:start}=(cov_2g3dhmrjds().s[29]++,interval);if(cov_2g3dhmrjds().s[30]++,!start)return cov_2g3dhmrjds().b[5][0]++,cov_2g3dhmrjds().s[31]++,"-";switch(cov_2g3dhmrjds().b[5][1]++,cov_2g3dhmrjds().s[32]++,unit){case"minute":return cov_2g3dhmrjds().b[6][0]++,cov_2g3dhmrjds().s[33]++,start.setLocale(locale).toFormat("mm");case"hour":return cov_2g3dhmrjds().b[6][1]++,cov_2g3dhmrjds().s[34]++,start.setLocale(locale).toFormat("HH:mm");case"day":return cov_2g3dhmrjds().b[6][2]++,cov_2g3dhmrjds().s[35]++,start.setLocale(locale).toFormat("ccc dd");case"week":return cov_2g3dhmrjds().b[6][3]++,cov_2g3dhmrjds().s[36]++,`CW ${start.setLocale(locale).toFormat("WW")}`;case"month":return cov_2g3dhmrjds().b[6][4]++,cov_2g3dhmrjds().s[37]++,start.setLocale(locale).toFormat("MMM yyyy");default:return cov_2g3dhmrjds().b[6][5]++,cov_2g3dhmrjds().s[38]++,"N/A"}};cov_2g3dhmrjds().s[39]++;const getResolutionData=key=>(cov_2g3dhmrjds().f[6]++,cov_2g3dhmrjds().s[40]++,RESOLUTIONS_DATA[key])},"./src/utils/time.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{NL:function(){return isValidRangeTime},SL:function(){return getXCoordinateFromTime},Vo:function(){return getValidRangeTime},e$:function(){return getValidTime},pl:function(){return getIntervalFromInternalTimeRange}});var luxon__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/luxon/src/luxon.js"),_logger__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/utils/logger.ts");function cov_2pww01mykf(){var path="/home/runner/work/konva-timeline/konva-timeline/src/utils/time.ts",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/home/runner/work/konva-timeline/konva-timeline/src/utils/time.ts",statementMap:{0:{start:{line:7,column:28},end:{line:26,column:1}},1:{start:{line:8,column:13},end:{line:8,column:33}},2:{start:{line:10,column:2},end:{line:24,column:3}},3:{start:{line:12,column:6},end:{line:12,column:26}},4:{start:{line:13,column:6},end:{line:13,column:12}},5:{start:{line:15,column:6},end:{line:17,column:20}},6:{start:{line:18,column:6},end:{line:18,column:12}},7:{start:{line:20,column:6},end:{line:22,column:20}},8:{start:{line:23,column:6},end:{line:23,column:12}},9:{start:{line:25,column:2},end:{line:25,column:22}},10:{start:{line:27,column:33},end:{line:34,column:1}},11:{start:{line:28,column:13},end:{line:28,column:33}},12:{start:{line:29,column:20},end:{line:29,column:34}},13:{start:{line:30,column:23},end:{line:32,column:15}},14:{start:{line:33,column:2},end:{line:33,column:22}},15:{start:{line:35,column:32},end:{line:43,column:1}},16:{start:{line:36,column:20},end:{line:36,column:34}},17:{start:{line:37,column:26},end:{line:37,column:64}},18:{start:{line:38,column:2},end:{line:40,column:3}},19:{start:{line:39,column:4},end:{line:39,column:16}},20:{start:{line:41,column:2},end:{line:41,column:33}},21:{start:{line:42,column:2},end:{line:42,column:15}},22:{start:{line:49,column:48},end:{line:61,column:1}},23:{start:{line:53,column:13},end:{line:53,column:33}},24:{start:{line:54,column:24},end:{line:56,column:87}},25:{start:{line:57,column:22},end:{line:59,column:85}},26:{start:{line:60,column:2},end:{line:60,column:60}},27:{start:{line:62,column:38},end:{line:68,column:1}},28:{start:{line:63,column:21},end:{line:63,column:66}},29:{start:{line:64,column:16},end:{line:66,column:15}},30:{start:{line:67,column:2},end:{line:67,column:15}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:7,column:28},end:{line:7,column:29}},loc:{start:{line:7,column:48},end:{line:26,column:1}},line:7},1:{name:"(anonymous_1)",decl:{start:{line:27,column:33},end:{line:27,column:34}},loc:{start:{line:27,column:53},end:{line:34,column:1}},line:27},2:{name:"(anonymous_2)",decl:{start:{line:35,column:32},end:{line:35,column:33}},loc:{start:{line:35,column:48},end:{line:43,column:1}},line:35},3:{name:"(anonymous_3)",decl:{start:{line:49,column:48},end:{line:49,column:49}},loc:{start:{line:52,column:28},end:{line:61,column:1}},line:52},4:{name:"(anonymous_4)",decl:{start:{line:62,column:38},end:{line:62,column:39}},loc:{start:{line:62,column:85},end:{line:68,column:1}},line:62}},branchMap:{0:{loc:{start:{line:8,column:13},end:{line:8,column:33}},type:"binary-expr",locations:[{start:{line:8,column:13},end:{line:8,column:21}},{start:{line:8,column:25},end:{line:8,column:33}}],line:8},1:{loc:{start:{line:10,column:2},end:{line:24,column:3}},type:"switch",locations:[{start:{line:11,column:4},end:{line:13,column:12}},{start:{line:14,column:4},end:{line:18,column:12}},{start:{line:19,column:4},end:{line:23,column:12}}],line:10},2:{loc:{start:{line:28,column:13},end:{line:28,column:33}},type:"binary-expr",locations:[{start:{line:28,column:13},end:{line:28,column:21}},{start:{line:28,column:25},end:{line:28,column:33}}],line:28},3:{loc:{start:{line:38,column:2},end:{line:40,column:3}},type:"if",locations:[{start:{line:38,column:2},end:{line:40,column:3}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:38},4:{loc:{start:{line:53,column:13},end:{line:53,column:33}},type:"binary-expr",locations:[{start:{line:53,column:13},end:{line:53,column:21}},{start:{line:53,column:25},end:{line:53,column:33}}],line:53},5:{loc:{start:{line:56,column:13},end:{line:56,column:86}},type:"cond-expr",locations:[{start:{line:56,column:48},end:{line:56,column:68}},{start:{line:56,column:71},end:{line:56,column:86}}],line:56},6:{loc:{start:{line:59,column:11},end:{line:59,column:84}},type:"cond-expr",locations:[{start:{line:59,column:46},end:{line:59,column:66}},{start:{line:59,column:69},end:{line:59,column:84}}],line:59}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0},f:{0:0,1:0,2:0,3:0,4:0},b:{0:[0,0],1:[0,0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0]},inputSourceMap:{version:3,names:["DateTime","Interval","logError","getValidTime","date","timezone","tz","dateInMillis","fromISO","zone","toMillis","fromJSDate","getValidRangeTime","validDate","Date","isValidRangeTime","name","isValidDateTime","isValid","getIntervalFromInternalTimeRange","start","end","resolution","startDateTime","fromMillis","startOf","unitAbove","unit","endDateTime","endOf","fromDateTimes","getXCoordinateFromTime","sizePx","columnWidth","interval","timeOffset","sizeInUnits","plus"],sources:["/home/runner/work/konva-timeline/konva-timeline/src/utils/time.ts"],sourcesContent:['import { DateTime, Interval } from "luxon";\n\nimport { logError } from "./logger";\nimport { ResolutionData } from "./time-resolution";\n\ntype TimeInput = number | string | Date;\n\nexport interface TimeRange {\n  /**\n   * Start of time range interval\n   */\n  start: TimeInput;\n  /**\n   * End of time range interval\n   */\n  end: TimeInput;\n}\n\nexport interface InternalTimeRange {\n  start: number;\n  end: number;\n}\n\n/**\n * Returns valid date based on input, otherwise now\n * @param date the input date (number or string formats)\n */\nexport const getValidTime = (date: TimeInput, timezone: string | undefined): number => {\n  const tz = timezone || "system";\n  let dateInMillis;\n  switch (typeof date) {\n    case "number":\n      dateInMillis = date;\n      break;\n    case "string":\n      dateInMillis = DateTime.fromISO(date, { zone: tz }).toMillis();\n      break;\n    case "object":\n      dateInMillis = DateTime.fromJSDate(date, { zone: tz }).toMillis();\n      break;\n  }\n\n  return dateInMillis;\n};\n\nexport const getValidRangeTime = (date: TimeInput, timezone: string | undefined): number => {\n  const tz = timezone || "system";\n  const validDate = new Date(date);\n  const dateInMillis = DateTime.fromJSDate(validDate, { zone: tz }).toMillis();\n\n  return dateInMillis;\n};\n\nexport const isValidRangeTime = (date: TimeInput, name: string): boolean => {\n  const validDate = new Date(date);\n  const isValidDateTime = DateTime.fromJSDate(validDate).isValid;\n  if (isValidDateTime) {\n    return true;\n  }\n  logError(name, "Invalid Date");\n  return false;\n};\n\n/**\n * Converts a TimeRange to a luxon Interval\n * @param range TimeRange to convert\n */\nexport const getIntervalFromInternalTimeRange = (\n  { start, end }: InternalTimeRange,\n  resolution: ResolutionData,\n  timezone: string | undefined\n): Interval => {\n  const tz = timezone || "system";\n  const startDateTime = DateTime.fromMillis(start, { zone: tz }).startOf(\n    resolution.unitAbove !== "month" ? resolution.unitAbove : resolution.unit\n  );\n  const endDateTime = DateTime.fromMillis(end, { zone: tz }).endOf(\n    resolution.unitAbove !== "month" ? resolution.unitAbove : resolution.unit\n  );\n  return Interval.fromDateTimes(startDateTime, endDateTime);\n};\n\nexport const getXCoordinateFromTime = (\n  sizePx: number,\n  resolution: ResolutionData,\n  columnWidth: number,\n  interval: Interval\n): number => {\n  const timeOffset = (sizePx * resolution.sizeInUnits) / columnWidth;\n  const start = interval.start!.plus({ [resolution.unit]: timeOffset }).toMillis();\n  return start;\n};\n'],mappings:"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAE1C,SAASC,QAAQ,QAAQ,UAAU;AAqBnC;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGA,CAACC,IAAe,EAAEC,QAA4B,KAAa;EACrF,MAAMC,EAAE,GAAGD,QAAQ,IAAI,QAAQ;EAC/B,IAAIE,YAAY;EAChB,QAAQ,OAAOH,IAAI;IACjB,KAAK,QAAQ;MACXG,YAAY,GAAGH,IAAI;MACnB;IACF,KAAK,QAAQ;MACXG,YAAY,GAAGP,QAAQ,CAACQ,OAAO,CAACJ,IAAI,EAAE;QAAEK,IAAI,EAAEH;MAAG,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC;MAC9D;IACF,KAAK,QAAQ;MACXH,YAAY,GAAGP,QAAQ,CAACW,UAAU,CAACP,IAAI,EAAE;QAAEK,IAAI,EAAEH;MAAG,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC;MACjE;EACJ;EAEA,OAAOH,YAAY;AACrB,CAAC;AAED,OAAO,MAAMK,iBAAiB,GAAGA,CAACR,IAAe,EAAEC,QAA4B,KAAa;EAC1F,MAAMC,EAAE,GAAGD,QAAQ,IAAI,QAAQ;EAC/B,MAAMQ,SAAS,GAAG,IAAIC,IAAI,CAACV,IAAI,CAAC;EAChC,MAAMG,YAAY,GAAGP,QAAQ,CAACW,UAAU,CAACE,SAAS,EAAE;IAAEJ,IAAI,EAAEH;EAAG,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC;EAE5E,OAAOH,YAAY;AACrB,CAAC;AAED,OAAO,MAAMQ,gBAAgB,GAAGA,CAACX,IAAe,EAAEY,IAAY,KAAc;EAC1E,MAAMH,SAAS,GAAG,IAAIC,IAAI,CAACV,IAAI,CAAC;EAChC,MAAMa,eAAe,GAAGjB,QAAQ,CAACW,UAAU,CAACE,SAAS,CAAC,CAACK,OAAO;EAC9D,IAAID,eAAe,EAAE;IACnB,OAAO,IAAI;EACb;EACAf,QAAQ,CAACc,IAAI,EAAE,cAAc,CAAC;EAC9B,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMG,gCAAgC,GAAGA,CAC9C;EAAEC,KAAK;EAAEC;AAAuB,CAAC,EACjCC,UAA0B,EAC1BjB,QAA4B,KACf;EACb,MAAMC,EAAE,GAAGD,QAAQ,IAAI,QAAQ;EAC/B,MAAMkB,aAAa,GAAGvB,QAAQ,CAACwB,UAAU,CAACJ,KAAK,EAAE;IAAEX,IAAI,EAAEH;EAAG,CAAC,CAAC,CAACmB,OAAO,CACpEH,UAAU,CAACI,SAAS,KAAK,OAAO,GAAGJ,UAAU,CAACI,SAAS,GAAGJ,UAAU,CAACK,IACvE,CAAC;EACD,MAAMC,WAAW,GAAG5B,QAAQ,CAACwB,UAAU,CAACH,GAAG,EAAE;IAAEZ,IAAI,EAAEH;EAAG,CAAC,CAAC,CAACuB,KAAK,CAC9DP,UAAU,CAACI,SAAS,KAAK,OAAO,GAAGJ,UAAU,CAACI,SAAS,GAAGJ,UAAU,CAACK,IACvE,CAAC;EACD,OAAO1B,QAAQ,CAAC6B,aAAa,CAACP,aAAa,EAAEK,WAAW,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMG,sBAAsB,GAAGA,CACpCC,MAAc,EACdV,UAA0B,EAC1BW,WAAmB,EACnBC,QAAkB,KACP;EACX,MAAMC,UAAU,GAAIH,MAAM,GAAGV,UAAU,CAACc,WAAW,GAAIH,WAAW;EAClE,MAAMb,KAAK,GAAGc,QAAQ,CAACd,KAAK,CAAEiB,IAAI,CAAC;IAAE,CAACf,UAAU,CAACK,IAAI,GAAGQ;EAAW,CAAC,CAAC,CAACzB,QAAQ,CAAC,CAAC;EAChF,OAAOU,KAAK;AACd,CAAC",ignoreList:[]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"03c5daa705bd914d7f16811985d139ab02873516"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"03c5daa705bd914d7f16811985d139ab02873516"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_2pww01mykf=function(){return actualCoverage},actualCoverage}cov_2pww01mykf(),cov_2pww01mykf().s[0]++;const getValidTime=(date,timezone)=>{cov_2pww01mykf().f[0]++;const tz=(cov_2pww01mykf().s[1]++,cov_2pww01mykf().b[0][0]++,timezone||(cov_2pww01mykf().b[0][1]++,"system"));let dateInMillis;switch(cov_2pww01mykf().s[2]++,typeof date){case"number":cov_2pww01mykf().b[1][0]++,cov_2pww01mykf().s[3]++,dateInMillis=date,cov_2pww01mykf().s[4]++;break;case"string":cov_2pww01mykf().b[1][1]++,cov_2pww01mykf().s[5]++,dateInMillis=luxon__WEBPACK_IMPORTED_MODULE_0__.c9.fromISO(date,{zone:tz}).toMillis(),cov_2pww01mykf().s[6]++;break;case"object":cov_2pww01mykf().b[1][2]++,cov_2pww01mykf().s[7]++,dateInMillis=luxon__WEBPACK_IMPORTED_MODULE_0__.c9.fromJSDate(date,{zone:tz}).toMillis(),cov_2pww01mykf().s[8]++}return cov_2pww01mykf().s[9]++,dateInMillis};cov_2pww01mykf().s[10]++;const getValidRangeTime=(date,timezone)=>{cov_2pww01mykf().f[1]++;const tz=(cov_2pww01mykf().s[11]++,cov_2pww01mykf().b[2][0]++,timezone||(cov_2pww01mykf().b[2][1]++,"system")),validDate=(cov_2pww01mykf().s[12]++,new Date(date)),dateInMillis=(cov_2pww01mykf().s[13]++,luxon__WEBPACK_IMPORTED_MODULE_0__.c9.fromJSDate(validDate,{zone:tz}).toMillis());return cov_2pww01mykf().s[14]++,dateInMillis};cov_2pww01mykf().s[15]++;const isValidRangeTime=(date,name)=>{cov_2pww01mykf().f[2]++;const validDate=(cov_2pww01mykf().s[16]++,new Date(date)),isValidDateTime=(cov_2pww01mykf().s[17]++,luxon__WEBPACK_IMPORTED_MODULE_0__.c9.fromJSDate(validDate).isValid);return cov_2pww01mykf().s[18]++,isValidDateTime?(cov_2pww01mykf().b[3][0]++,cov_2pww01mykf().s[19]++,!0):(cov_2pww01mykf().b[3][1]++,cov_2pww01mykf().s[20]++,(0,_logger__WEBPACK_IMPORTED_MODULE_1__.vV)(name,"Invalid Date"),cov_2pww01mykf().s[21]++,!1)};cov_2pww01mykf().s[22]++;const getIntervalFromInternalTimeRange=({start:start,end:end},resolution,timezone)=>{cov_2pww01mykf().f[3]++;const tz=(cov_2pww01mykf().s[23]++,cov_2pww01mykf().b[4][0]++,timezone||(cov_2pww01mykf().b[4][1]++,"system")),startDateTime=(cov_2pww01mykf().s[24]++,luxon__WEBPACK_IMPORTED_MODULE_0__.c9.fromMillis(start,{zone:tz}).startOf("month"!==resolution.unitAbove?(cov_2pww01mykf().b[5][0]++,resolution.unitAbove):(cov_2pww01mykf().b[5][1]++,resolution.unit))),endDateTime=(cov_2pww01mykf().s[25]++,luxon__WEBPACK_IMPORTED_MODULE_0__.c9.fromMillis(end,{zone:tz}).endOf("month"!==resolution.unitAbove?(cov_2pww01mykf().b[6][0]++,resolution.unitAbove):(cov_2pww01mykf().b[6][1]++,resolution.unit)));return cov_2pww01mykf().s[26]++,luxon__WEBPACK_IMPORTED_MODULE_0__.IX.fromDateTimes(startDateTime,endDateTime)};cov_2pww01mykf().s[27]++;const getXCoordinateFromTime=(sizePx,resolution,columnWidth,interval)=>{cov_2pww01mykf().f[4]++;const timeOffset=(cov_2pww01mykf().s[28]++,sizePx*resolution.sizeInUnits/columnWidth),start=(cov_2pww01mykf().s[29]++,interval.start.plus({[resolution.unit]:timeOffset}).toMillis());return cov_2pww01mykf().s[30]++,start}}}]);